{
    "abi": [
        {
            "type": "constructor",
            "inputs": [
                {
                    "name": "initialOwner",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "allowance",
            "inputs": [
                {
                    "name": "owner",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "spender",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "id",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "approve",
            "inputs": [
                {
                    "name": "spender",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "id",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "balanceOf",
            "inputs": [
                {
                    "name": "owner",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "id",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "balance",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "burn",
            "inputs": [
                {
                    "name": "from",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "id",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "clear",
            "inputs": [
                {
                    "name": "currency",
                    "type": "address",
                    "internalType": "Currency"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "collectProtocolFees",
            "inputs": [
                {
                    "name": "recipient",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "currency",
                    "type": "address",
                    "internalType": "Currency"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "amountCollected",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "donate",
            "inputs": [
                {
                    "name": "key",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "amount0",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "amount1",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "hookData",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "delta",
                    "type": "int256",
                    "internalType": "BalanceDelta"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "extsload",
            "inputs": [
                {
                    "name": "slot",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "extsload",
            "inputs": [
                {
                    "name": "startSlot",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "nSlots",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "extsload",
            "inputs": [
                {
                    "name": "slots",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "exttload",
            "inputs": [
                {
                    "name": "slots",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "exttload",
            "inputs": [
                {
                    "name": "slot",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "initialize",
            "inputs": [
                {
                    "name": "key",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "sqrtPriceX96",
                    "type": "uint160",
                    "internalType": "uint160"
                }
            ],
            "outputs": [
                {
                    "name": "tick",
                    "type": "int24",
                    "internalType": "int24"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "isOperator",
            "inputs": [
                {
                    "name": "owner",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "operator",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "isOperator",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "mint",
            "inputs": [
                {
                    "name": "to",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "id",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "modifyLiquidity",
            "inputs": [
                {
                    "name": "key",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "tuple",
                    "internalType": "struct ModifyLiquidityParams",
                    "components": [
                        {
                            "name": "tickLower",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "tickUpper",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "liquidityDelta",
                            "type": "int256",
                            "internalType": "int256"
                        },
                        {
                            "name": "salt",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        }
                    ]
                },
                {
                    "name": "hookData",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "callerDelta",
                    "type": "int256",
                    "internalType": "BalanceDelta"
                },
                {
                    "name": "feesAccrued",
                    "type": "int256",
                    "internalType": "BalanceDelta"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "owner",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "protocolFeeController",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "protocolFeesAccrued",
            "inputs": [
                {
                    "name": "currency",
                    "type": "address",
                    "internalType": "Currency"
                }
            ],
            "outputs": [
                {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "setOperator",
            "inputs": [
                {
                    "name": "operator",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "approved",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "setProtocolFee",
            "inputs": [
                {
                    "name": "key",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "newProtocolFee",
                    "type": "uint24",
                    "internalType": "uint24"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "setProtocolFeeController",
            "inputs": [
                {
                    "name": "controller",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "settle",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "payable"
        },
        {
            "type": "function",
            "name": "settleFor",
            "inputs": [
                {
                    "name": "recipient",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "payable"
        },
        {
            "type": "function",
            "name": "supportsInterface",
            "inputs": [
                {
                    "name": "interfaceId",
                    "type": "bytes4",
                    "internalType": "bytes4"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "swap",
            "inputs": [
                {
                    "name": "key",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "tuple",
                    "internalType": "struct SwapParams",
                    "components": [
                        {
                            "name": "zeroForOne",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "amountSpecified",
                            "type": "int256",
                            "internalType": "int256"
                        },
                        {
                            "name": "sqrtPriceLimitX96",
                            "type": "uint160",
                            "internalType": "uint160"
                        }
                    ]
                },
                {
                    "name": "hookData",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "swapDelta",
                    "type": "int256",
                    "internalType": "BalanceDelta"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "sync",
            "inputs": [
                {
                    "name": "currency",
                    "type": "address",
                    "internalType": "Currency"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "take",
            "inputs": [
                {
                    "name": "currency",
                    "type": "address",
                    "internalType": "Currency"
                },
                {
                    "name": "to",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "transfer",
            "inputs": [
                {
                    "name": "receiver",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "id",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "transferFrom",
            "inputs": [
                {
                    "name": "sender",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "receiver",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "id",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "transferOwnership",
            "inputs": [
                {
                    "name": "newOwner",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "unlock",
            "inputs": [
                {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "result",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "updateDynamicLPFee",
            "inputs": [
                {
                    "name": "key",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "newDynamicLPFee",
                    "type": "uint24",
                    "internalType": "uint24"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "event",
            "name": "Approval",
            "inputs": [
                {
                    "name": "owner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "spender",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "id",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Donate",
            "inputs": [
                {
                    "name": "id",
                    "type": "bytes32",
                    "indexed": true,
                    "internalType": "PoolId"
                },
                {
                    "name": "sender",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "amount0",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "amount1",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Initialize",
            "inputs": [
                {
                    "name": "id",
                    "type": "bytes32",
                    "indexed": true,
                    "internalType": "PoolId"
                },
                {
                    "name": "currency0",
                    "type": "address",
                    "indexed": true,
                    "internalType": "Currency"
                },
                {
                    "name": "currency1",
                    "type": "address",
                    "indexed": true,
                    "internalType": "Currency"
                },
                {
                    "name": "fee",
                    "type": "uint24",
                    "indexed": false,
                    "internalType": "uint24"
                },
                {
                    "name": "tickSpacing",
                    "type": "int24",
                    "indexed": false,
                    "internalType": "int24"
                },
                {
                    "name": "hooks",
                    "type": "address",
                    "indexed": false,
                    "internalType": "contract IHooks"
                },
                {
                    "name": "sqrtPriceX96",
                    "type": "uint160",
                    "indexed": false,
                    "internalType": "uint160"
                },
                {
                    "name": "tick",
                    "type": "int24",
                    "indexed": false,
                    "internalType": "int24"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "ModifyLiquidity",
            "inputs": [
                {
                    "name": "id",
                    "type": "bytes32",
                    "indexed": true,
                    "internalType": "PoolId"
                },
                {
                    "name": "sender",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "tickLower",
                    "type": "int24",
                    "indexed": false,
                    "internalType": "int24"
                },
                {
                    "name": "tickUpper",
                    "type": "int24",
                    "indexed": false,
                    "internalType": "int24"
                },
                {
                    "name": "liquidityDelta",
                    "type": "int256",
                    "indexed": false,
                    "internalType": "int256"
                },
                {
                    "name": "salt",
                    "type": "bytes32",
                    "indexed": false,
                    "internalType": "bytes32"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "OperatorSet",
            "inputs": [
                {
                    "name": "owner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "operator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "approved",
                    "type": "bool",
                    "indexed": false,
                    "internalType": "bool"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "OwnershipTransferred",
            "inputs": [
                {
                    "name": "user",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "newOwner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "ProtocolFeeControllerUpdated",
            "inputs": [
                {
                    "name": "protocolFeeController",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "ProtocolFeeUpdated",
            "inputs": [
                {
                    "name": "id",
                    "type": "bytes32",
                    "indexed": true,
                    "internalType": "PoolId"
                },
                {
                    "name": "protocolFee",
                    "type": "uint24",
                    "indexed": false,
                    "internalType": "uint24"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Swap",
            "inputs": [
                {
                    "name": "id",
                    "type": "bytes32",
                    "indexed": true,
                    "internalType": "PoolId"
                },
                {
                    "name": "sender",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "amount0",
                    "type": "int128",
                    "indexed": false,
                    "internalType": "int128"
                },
                {
                    "name": "amount1",
                    "type": "int128",
                    "indexed": false,
                    "internalType": "int128"
                },
                {
                    "name": "sqrtPriceX96",
                    "type": "uint160",
                    "indexed": false,
                    "internalType": "uint160"
                },
                {
                    "name": "liquidity",
                    "type": "uint128",
                    "indexed": false,
                    "internalType": "uint128"
                },
                {
                    "name": "tick",
                    "type": "int24",
                    "indexed": false,
                    "internalType": "int24"
                },
                {
                    "name": "fee",
                    "type": "uint24",
                    "indexed": false,
                    "internalType": "uint24"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Transfer",
            "inputs": [
                {
                    "name": "caller",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                },
                {
                    "name": "from",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "to",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "id",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "error",
            "name": "AlreadyUnlocked",
            "inputs": []
        },
        {
            "type": "error",
            "name": "CurrenciesOutOfOrderOrEqual",
            "inputs": [
                {
                    "name": "currency0",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "currency1",
                    "type": "address",
                    "internalType": "address"
                }
            ]
        },
        {
            "type": "error",
            "name": "CurrencyNotSettled",
            "inputs": []
        },
        {
            "type": "error",
            "name": "DelegateCallNotAllowed",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InvalidCaller",
            "inputs": []
        },
        {
            "type": "error",
            "name": "ManagerLocked",
            "inputs": []
        },
        {
            "type": "error",
            "name": "MustClearExactPositiveDelta",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NonzeroNativeValue",
            "inputs": []
        },
        {
            "type": "error",
            "name": "PoolNotInitialized",
            "inputs": []
        },
        {
            "type": "error",
            "name": "ProtocolFeeCurrencySynced",
            "inputs": []
        },
        {
            "type": "error",
            "name": "ProtocolFeeTooLarge",
            "inputs": [
                {
                    "name": "fee",
                    "type": "uint24",
                    "internalType": "uint24"
                }
            ]
        },
        {
            "type": "error",
            "name": "SwapAmountCannotBeZero",
            "inputs": []
        },
        {
            "type": "error",
            "name": "TickSpacingTooLarge",
            "inputs": [
                {
                    "name": "tickSpacing",
                    "type": "int24",
                    "internalType": "int24"
                }
            ]
        },
        {
            "type": "error",
            "name": "TickSpacingTooSmall",
            "inputs": [
                {
                    "name": "tickSpacing",
                    "type": "int24",
                    "internalType": "int24"
                }
            ]
        },
        {
            "type": "error",
            "name": "UnauthorizedDynamicLPFeeUpdate",
            "inputs": []
        }
    ],
    "bytecode": {
        "object": "0x60a0604052348015600e575f80fd5b50604051615f94380380615f94833981016040819052602b91607f565b5f80546001600160a01b0319166001600160a01b038316908117825560405183928392917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35050306080525060aa565b5f60208284031215608e575f80fd5b81516001600160a01b038116811460a3575f80fd5b9392505050565b608051615ed26100c25f395f611d5c0152615ed25ff3fe6080604052600436106101f4575f3560e01c80635a6bcfda11610117578063a5841194116100ac578063f135baaa1161007c578063f3cd914c11610062578063f3cd914c1461064f578063f5298aca1461066e578063fe99049a1461068d575f80fd5b8063f135baaa14610611578063f2fde38b14610630575f80fd5b8063a58411941461057b578063b6363cf21461059a578063dbd035ff146105d3578063f02de3b2146105f2575f80fd5b80638161b874116100e75780638161b874146104dc5780638da5cb5b146104fb57806397e8cd4e146105315780639bf6645f1461055c575f80fd5b80635a6bcfda146104385780636276cbbe1461046c5780637e87ce7d1461049e57806380f0b44c146104bd575f80fd5b80632d7713891161018d57806348c894911161015d57806348c894911461039257806352759651146103be578063558a7297146103dd578063598af9e7146103fc575f80fd5b80632d7713891461031557806335fd631a146103345780633dd45adb14610360578063426a849314610373575f80fd5b806311da60b4116101c857806311da60b4146102b0578063156e29f6146102b85780631e2eaeaf146102d7578063234266d7146102f6575f80fd5b8062fdd58e146101f857806301ffc9a714610241578063095bcdb6146102705780630b0d9c091461028f575b5f80fd5b348015610203575f80fd5b5061022e6102123660046150af565b600460209081525f928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b34801561024c575f80fd5b5061026061025b3660046150d9565b6106ac565b6040519015158152602001610238565b34801561027b575f80fd5b5061026061028a366004615118565b610744565b34801561029a575f80fd5b506102ae6102a936600461514a565b6107fe565b005b61022e61087b565b3480156102c3575f80fd5b506102ae6102d2366004615118565b6108d9565b3480156102e2575f80fd5b5061022e6102f1366004615188565b610950565b348015610301575f80fd5b5061022e610310366004615324565b61095a565b348015610320575f80fd5b506102ae61032f366004615389565b610a64565b34801561033f575f80fd5b5061035361034e3660046153a4565b610b3d565b60405161023891906153c4565b61022e61036e366004615389565b610b7a565b34801561037e575f80fd5b5061026061038d366004615118565b610bd8565b34801561039d575f80fd5b506103b16103ac366004615406565b610c3c565b6040516102389190615445565b3480156103c9575f80fd5b506102ae6103d836600461547a565b610d70565b3480156103e8575f80fd5b506102606103f73660046154bb565b610df8565b348015610407575f80fd5b5061022e61041636600461514a565b600560209081525f938452604080852082529284528284209052825290205481565b348015610443575f80fd5b506104576104523660046154e5565b610e85565b60408051928352602083019190915201610238565b348015610477575f80fd5b5061048b6104863660046155a6565b611050565b60405160029190910b8152602001610238565b3480156104a9575f80fd5b506102ae6104b836600461547a565b61128c565b3480156104c8575f80fd5b506102ae6104d73660046150af565b611370565b3480156104e7575f80fd5b5061022e6104f636600461514a565b611422565b348015610506575f80fd5b505f54610519906001600160a01b031681565b6040516001600160a01b039091168152602001610238565b34801561053c575f80fd5b5061022e61054b366004615389565b60016020525f908152604090205481565b348015610567575f80fd5b506103536105763660046155dc565b61153c565b348015610586575f80fd5b506102ae610595366004615389565b611575565b3480156105a5575f80fd5b506102606105b436600461564d565b600360209081525f928352604080842090915290825290205460ff1681565b3480156105de575f80fd5b506103536105ed3660046155dc565b6115b1565b3480156105fd575f80fd5b50600254610519906001600160a01b031681565b34801561061c575f80fd5b5061022e61062b366004615188565b6115e8565b34801561063b575f80fd5b506102ae61064a366004615389565b6115f2565b34801561065a575f80fd5b5061022e610669366004615679565b6116c7565b348015610679575f80fd5b506102ae610688366004615118565b611852565b348015610698575f80fd5b506102606106a7366004615737565b6118c9565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316148061073e57507f0f632fb3000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b335f90815260046020908152604080832085845290915281208054839190839061076f9084906157a7565b90915550506001600160a01b0384165f908152600460209081526040808320868452909152812080548492906107a69084906157ba565b909155505060408051338082526020820185905285926001600160a01b038816927f1b3d7edb2e9c0b0e7c525b20aaaef0f5940d2ed71663c7d39266ecafac72885991015b60405180910390a45060015b9392505050565b7fc090fc4683624cfc3884e9d8de5eca132f2d0ec062aff75d43c0465d5ceeab235c61084d5761084d7f54e3ca0d00000000000000000000000000000000000000000000000000000000611a5a565b6108628361085a83611a62565b5f0333611aa7565b6108766001600160a01b0384168383611afa565b505050565b5f7fc090fc4683624cfc3884e9d8de5eca132f2d0ec062aff75d43c0465d5ceeab235c6108cb576108cb7f54e3ca0d00000000000000000000000000000000000000000000000000000000611a5a565b6108d433611bfd565b905090565b7fc090fc4683624cfc3884e9d8de5eca132f2d0ec062aff75d43c0465d5ceeab235c610928576109287f54e3ca0d00000000000000000000000000000000000000000000000000000000611a5a565b816109368161085a84611a62565b61094a846001600160a01b03831684611ccc565b50505050565b5f81545f5260205ff35b5f7fc090fc4683624cfc3884e9d8de5eca132f2d0ec062aff75d43c0465d5ceeab235c6109aa576109aa7f54e3ca0d00000000000000000000000000000000000000000000000000000000611a5a565b6109b2611d51565b60a086205f8181526006602052604090206109cc81611dac565b60808801516109e8906001600160a01b03168989898989611de6565b6109f3818888611e91565b9250610a00888433611f8b565b6040805188815260208101889052339184917f29ef05caaff9404b7cb6d1c0e9bbae9eaa7ab2541feba1a9c4248594c08156cb910160405180910390a36080880151610a59906001600160a01b03168989898989611fb3565b505095945050505050565b5f546001600160a01b03163314610adc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064015b60405180910390fd5b600280547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383169081179091556040517fb4bd8ef53df690b9943d3318996006dbb82a25f54719d8c8035b516a2a5b8acc905f90a250565b6060604051808360051b6020835284602084015260408301925080830190505b85548352602083019250600186019550808310610b5d5781810382f35b5f7fc090fc4683624cfc3884e9d8de5eca132f2d0ec062aff75d43c0465d5ceeab235c610bca57610bca7f54e3ca0d00000000000000000000000000000000000000000000000000000000611a5a565b61073e82611bfd565b919050565b335f8181526005602090815260408083206001600160a01b03881680855290835281842087855290925280832085905551919285927fb3fd5071835887567a0671151121894ddccc2842f1d10bedad13e0d17cace9a7906107eb9087815260200190565b60607fc090fc4683624cfc3884e9d8de5eca132f2d0ec062aff75d43c0465d5ceeab235c15610c8e57610c8e7f5090d6c600000000000000000000000000000000000000000000000000000000611a5a565b610c96612053565b6040517f91dd734600000000000000000000000000000000000000000000000000000000815233906391dd734690610cd490869086906004016157f6565b5f604051808303815f875af1158015610cef573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610d169190810190615809565b90507f7d4b3164c6e45b97e7d87b7125a44c5828d005af88f9d751cfd78729c5d99a0b5c15610d6857610d687f5212cba100000000000000000000000000000000000000000000000000000000611a5a565b61073e612079565b604082015162ffffff1662800000141580610da1575081608001516001600160a01b0316336001600160a01b031614155b15610dcf57610dcf7f30d2164100000000000000000000000000000000000000000000000000000000611a5a565b610ddd8162ffffff1661209e565b60a082205f81815260066020526040902061087690836120dd565b335f8181526003602090815260408083206001600160a01b03871680855290835281842080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001687151590811790915591519182529293917fceb576d9f15e4e200fdb5096d64d5dfd667e16def20c1eefd14256d8e3faa267910160405180910390a350600192915050565b5f807fc090fc4683624cfc3884e9d8de5eca132f2d0ec062aff75d43c0465d5ceeab235c610ed657610ed67f54e3ca0d00000000000000000000000000000000000000000000000000000000611a5a565b610ede611d51565b60a086205f818152600660205260409020610ef881611dac565b6080880151610f13906001600160a01b031689898989612136565b5f610f7a6040518060c00160405280336001600160a01b031681526020018a5f015160020b81526020018a6020015160020b8152602001610f578b60400151612294565b600f0b81526060808d015160020b60208301528b015160409091015283906122c9565b94509050610f888185612701565b94505050336001600160a01b0316817ff208f4912782fd25c7f114ca3723a2d5dd6f3bcc3ac8db5af63baa85f711d5ec885f015189602001518a604001518b60600151604051610ff99493929190600294850b81529290930b60208301526040820152606081019190915260800190565b60405180910390a360808701515f90611020906001600160a01b0316898987878b8b612734565b9094509050801561103a5761103a88828a60800151611f8b565b611045888533611f8b565b505094509492505050565b5f611059611d51565b6060830151617fff60029190910b131561109d57606083015161109d907fb70024f800000000000000000000000000000000000000000000000000000000906128b5565b600160020b836060015160020b12156110e05760608301516110e0907fe9e9058800000000000000000000000000000000000000000000000000000000906128b5565b825160208401516001600160a01b0390811691161061112b578251602084015161112b917f6e6c983000000000000000000000000000000000000000000000000000000000916128c4565b61114f836040015184608001516001600160a01b03166128ed90919063ffffffff16565b611183576080830151611183907fe65af6a000000000000000000000000000000000000000000000000000000000906129ae565b5f611196846040015162ffffff166129c3565b60808501519091506111b2906001600160a01b031685856129e8565b60a084205f8181526006602052604090206111ce908584612a83565b925084602001516001600160a01b0316855f01516001600160a01b0316827fdd466e674ea557f56295e2d0218a125ea4b4f0f6f3307b95f85e6110838d6438886040015189606001518a608001518a8a60405161126295949392919062ffffff959095168552600293840b60208601526001600160a01b03928316604086015291166060840152900b608082015260a00190565b60405180910390a46080850151611284906001600160a01b0316868686612b21565b505092915050565b6002546001600160a01b031633146112c7576112c77f48f5c3ed00000000000000000000000000000000000000000000000000000000611a5a565b6103e9610fff821610623e900062fff0008316101661130f5761130f7fa7abe2f70000000000000000000000000000000000000000000000000000000062ffffff83166129ae565b60a082206113318261132b835f90815260066020526040902090565b90612bbe565b60405162ffffff8316815281907fe9c42593e71f84403b84352cd168d693e2c9fcd1fdbcc3feb21d92b43e6696f99060200160405180910390a2505050565b7fc090fc4683624cfc3884e9d8de5eca132f2d0ec062aff75d43c0465d5ceeab235c6113bf576113bf7f54e3ca0d00000000000000000000000000000000000000000000000000000000611a5a565b335f9081526001600160a01b038316602052604081205c906113e083611a62565b90508181600f0b14611415576114157fbda73abf00000000000000000000000000000000000000000000000000000000611a5a565b61094a84825f0333611aa7565b6002545f906001600160a01b0316331461145f5761145f7f48f5c3ed00000000000000000000000000000000000000000000000000000000611a5a565b6001600160a01b038316151580156114a357506001600160a01b037f27e098c505d44ec3574004bca052aabf76bd35004c182099d8c575fb238593b95c8116908416145b156114d1576114d17fc79e594800000000000000000000000000000000000000000000000000000000611a5a565b81156114dd57816114f6565b6001600160a01b0383165f908152600160205260409020545b6001600160a01b0384165f908152600160205260408120805492935083929091906115229084906157a7565b909155506107f790506001600160a01b0384168583611afa565b606060405180602082528360208301526040820191508360051b8201855b80355c84526020938401930181841061155a575b5081810382f35b6001600160a01b03811661158e5761158b612c12565b50565b5f6115a1826001600160a01b0316612c37565b90506115ad8282612ccc565b5050565b606060405180602082528360208301526040820191508360051b8201855b8035548452602093840193018184101561156e576115cf565b5f815c5f5260205ff35b5f546001600160a01b03163314611665576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610ad3565b5f80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383169081178255604051909133917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a350565b5f7fc090fc4683624cfc3884e9d8de5eca132f2d0ec062aff75d43c0465d5ceeab235c611717576117177f54e3ca0d00000000000000000000000000000000000000000000000000000000611a5a565b61171f611d51565b83602001515f03611753576117537fbe8b850700000000000000000000000000000000000000000000000000000000611a5a565b60a085205f81815260066020526040902061176d81611dac565b60808701515f908190819061178e906001600160a01b03168b8b8b8b612d1f565b8093508195508294505050506117fd84866040518060a001604052808681526020018e6060015160020b81526020018d5f0151151581526020018d604001516001600160a01b031681526020018562ffffff168152508c5f01516117f6578d60200151612e9b565b8d51612e9b565b60808b01519096505f925061182191506001600160a01b03168a8a888b8b88612f82565b9095509050801561183b5761183b89828b60800151611f8b565b611846898633611f8b565b50505050949350505050565b7fc090fc4683624cfc3884e9d8de5eca132f2d0ec062aff75d43c0465d5ceeab235c6118a1576118a17f54e3ca0d00000000000000000000000000000000000000000000000000000000611a5a565b816118b5816118af84611a62565b33611aa7565b61094a846001600160a01b038316846130e3565b5f336001600160a01b0386161480159061190657506001600160a01b0385165f90815260036020908152604080832033845290915290205460ff16155b15611995576001600160a01b0385165f90815260056020908152604080832033845282528083208684529091529020547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146119935761196783826157a7565b6001600160a01b0387165f90815260056020908152604080832033845282528083208884529091529020555b505b6001600160a01b0385165f908152600460209081526040808320868452909152812080548492906119c79084906157a7565b90915550506001600160a01b0384165f908152600460209081526040808320868452909152812080548492906119fe9084906157ba565b9091555050604080513381526020810184905284916001600160a01b0380881692908916917f1b3d7edb2e9c0b0e7c525b20aaaef0f5940d2ed71663c7d39266ecafac728859910160405180910390a45060015b949350505050565b805f5260045ffd5b5f6f800000000000000000000000000000008210611aa357611aa37f93dafdf100000000000000000000000000000000000000000000000000000000611a5a565b5090565b81600f0b5f03611ab657505050565b5f80611acc6001600160a01b03861684866131c0565b91509150805f03611ae457611adf6131f9565b611af3565b815f03611af357611af3613247565b5050505050565b5f6001600160a01b038416611b48575f805f8085875af1905080611b4357611b43835f7ff4b3b1bc00000000000000000000000000000000000000000000000000000000613295565b61094a565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b038416600482015282602482015260205f6044835f895af13d15601f3d1160015f511416171691505f81525f60208201525f6040820152508061094a5761094a847fa9059cbb000000000000000000000000000000000000000000000000000000007ff27f64e400000000000000000000000000000000000000000000000000000000613295565b5f7f27e098c505d44ec3574004bca052aabf76bd35004c182099d8c575fb238593b95c6001600160a01b038116611c3657349150611cb3565b3415611c6557611c657fb0ec849e00000000000000000000000000000000000000000000000000000000611a5a565b7f1e0745a7db1623981f0b2a5d4232364c00787266eb75ad546f190e6cebe9bd955c5f611c9a6001600160a01b038416612c37565b9050611ca682826157a7565b9350611cb0612c12565b50505b611cc681611cc084611a62565b85611aa7565b50919050565b6001600160a01b0383165f90815260046020908152604080832085845290915281208054839290611cfe9084906157ba565b9091555050604080513381526020810183905283916001600160a01b038616915f917f1b3d7edb2e9c0b0e7c525b20aaaef0f5940d2ed71663c7d39266ecafac72885991015b60405180910390a4505050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611daa57611daa7f0d89438e00000000000000000000000000000000000000000000000000000000611a5a565b565b80546001600160a01b03165f0361158b5761158b7f486aa30700000000000000000000000000000000000000000000000000000000611a5a565b85336001600160a01b03821614611e88576020871615611e8857611e86338787878787604051602401611e1e9695949392919061589d565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fb6a8b0fa000000000000000000000000000000000000000000000000000000001790526001600160a01b03891690613356565b505b50505050505050565b60038301545f906fffffffffffffffffffffffffffffffff16808203611eda57611eda7fa74f97ab00000000000000000000000000000000000000000000000000000000611a5a565b611f11611ee685611a62565b5f03611ef185611a62565b5f0360809190911b6fffffffffffffffffffffffffffffffff9091161790565b91508315611f4b576001850180546fffffffffffffffffffffffffffffffff83167001000000000000000000000000000000008702040190555b8215611f83576002850180546fffffffffffffffffffffffffffffffff83167001000000000000000000000000000000008602040190555b509392505050565b8251611fa190611f9b8460801d90565b83611aa7565b6108768360200151611f9b84600f0b90565b85336001600160a01b03821614611e88576010871615611e8857611e86338787878787604051602401611feb9695949392919061589d565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fe1b4af69000000000000000000000000000000000000000000000000000000001790526001600160a01b03891690613356565b60017fc090fc4683624cfc3884e9d8de5eca132f2d0ec062aff75d43c0465d5ceeab235d565b5f7fc090fc4683624cfc3884e9d8de5eca132f2d0ec062aff75d43c0465d5ceeab235d565b620f424062ffffff8216111561158b5761158b7f140021130000000000000000000000000000000000000000000000000000000062ffffff83166129ae565b6120e682611dac565b81547fffffff000000ffffffffffffffffffffffffffffffffffffffffffffffffffff167cffffff000000000000000000000000000000000000000000000000000060d083901b16175b90915550565b84336001600160a01b0382161461228c575f846040015113801561215d5750610800861615155b156121ec576121e6338686868660405160240161217e959493929190615935565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f259982e5000000000000000000000000000000000000000000000000000000001790526001600160a01b03881690613356565b5061228c565b5f8460400151131580156122035750610200861615155b1561228c57611e883386868686604051602401612224959493929190615935565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f21d0ee70000000000000000000000000000000000000000000000000000000001790526001600160a01b03881690613356565b505050505050565b80600f81900b8114610bd357610bd37f93dafdf100000000000000000000000000000000000000000000000000000000611a5a565b6060810151602082015160408301515f92839290916122e88282613452565b604080516080810182525f80825260208201819052918101829052606081019190915283600f0b5f146124b8576123218884865f613519565b6fffffffffffffffffffffffffffffffff166020830152151581526123498883866001613519565b6fffffffffffffffffffffffffffffffff166060830152151560408201525f600f85900b1261247d5760808701515f9060020b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2761881810783139082900503620d89e891909105036001016fffffffffffffffffffffffffffffffff049050806fffffffffffffffffffffffffffffffff1682602001516fffffffffffffffffffffffffffffffff161115612421576124217fb8e3c38500000000000000000000000000000000000000000000000000000000856128b5565b806fffffffffffffffffffffffffffffffff1682606001516fffffffffffffffffffffffffffffffff16111561247b5761247b7fb8e3c38500000000000000000000000000000000000000000000000000000000846128b5565b505b8051156124995760808701516124999060058a01908590613602565b8060400151156124b85760808701516124b89060058a01908490613602565b5f806124c58a8686613654565b8a5160a08c015160408051602681019290925260068083018a9052600383018b9052928252603a600c8301205f838301819052602080850182905293819052908152928f01909152812092945090925080612522838a8787613708565b9150915061255761253283611a62565b61253b83611a62565b6fffffffffffffffffffffffffffffffff1660809190911b1790565b995050505050505f84600f0b12156125c05780511561259357600283810b5f90815260048a016020526040812081815560018101829055909101555b8060400151156125c057600282810b5f90815260048a016020526040812081815560018101829055909101555b5082600f0b5f146126f75786545f806125dc8360a01c60020b90565b6001600160a01b038416915091508460020b8260020b121561262b5761262461261e61261961260a88613839565b61261388613839565b8a613b36565b612294565b60801b90565b97506126f3565b8360020b8260020b12156126ce5761266261264c6126198361261388613839565b61253b61261961265b89613839565b858b613b6e565b60038b0154909850612686906fffffffffffffffffffffffffffffffff1687613b9a565b60038b0180547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff929092169190911790556126f3565b6126f05f61253b6126196126e189613839565b6126ea89613839565b8b613b6e565b97505b5050505b5050509250929050565b5f608082811d9084901d01600f83810b9085900b0161272b61272283612294565b61253b83612294565b95945050505050565b5f806001600160a01b038916330361275057508490505f6128a9565b8591505f8760400151131561280d57610400891615612808576127f93389898989898960405160240161278997969594939291906159e3565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f9f063efc0000000000000000000000000000000000000000000000000000000017905260028b1615155b6001600160a01b038c169190613bca565b90506128058282613c24565b91505b6128a9565b6101008916156128a95761289a3389898989898960405160240161283797969594939291906159e3565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f6c2bbe7e0000000000000000000000000000000000000000000000000000000017905260018b1615156127e8565b90506128a68282613c24565b91505b97509795505050505050565b815f528060020b60045260245ffd5b6040518381526001600160a01b03831660048201526001600160a01b0382166024820152604481fd5b5f6080831615801561290157506008831615155b1561290d57505f61073e565b6040831615801561292057506004831615155b1561292c57505f61073e565b610400831615801561294057506002831615155b1561294c57505f61073e565b610100831615801561296057506001831615155b1561296c57505f61073e565b6001600160a01b0383161561299d57613fff831615158061299857506280000062ffffff8316146107f7565b6107f7565b5062ffffff16628000001415919050565b815f526001600160a01b03811660045260245ffd5b5f6280000062ffffff8316036129da57505f919050565b611aa38262ffffff1661209e565b82336001600160a01b0382161461094a5761200084161561094a57611af3338484604051602401612a1b93929190615a9f565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fdc98354e000000000000000000000000000000000000000000000000000000001790526001600160a01b03861690613356565b82545f906001600160a01b031615612abe57612abe7f7983c05100000000000000000000000000000000000000000000000000000000611a5a565b612ac783613c45565b90507cffffff000000000000000000000000000000000000000000000000000060d083901b166001600160a01b03841660a083901b76ffffff00000000000000000000000000000000000000001617179093555090919050565b83336001600160a01b03821614611af357611000851615611af35761228c33858585604051602401612b569493929190615b21565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f6fe7e6eb000000000000000000000000000000000000000000000000000000001790526001600160a01b03871690613356565b612bc782611dac565b81547fffffffffffff000000ffffffffffffffffffffffffffffffffffffffffffffff1679ffffff000000000000000000000000000000000000000000000060b883901b1617612130565b5f7f27e098c505d44ec3574004bca052aabf76bd35004c182099d8c575fb238593b95d565b5f6001600160a01b038216612c4d575047919050565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b038316906370a0823190602401602060405180830381865afa158015612ca8573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061073e9190615bae565b6001600160a01b0382167f27e098c505d44ec3574004bca052aabf76bd35004c182099d8c575fb238593b95d807f1e0745a7db1623981f0b2a5d4232364c00787266eb75ad546f190e6cebe9bd955d5050565b60208301515f806001600160a01b0388163303612d3e575f9150612e90565b6080881615612e90575f612dc289338a8a8a8a604051602401612d65959493929190615bc5565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f575e24b400000000000000000000000000000000000000000000000000000000179052613356565b90508051606014612df657612df67f1e048e1d00000000000000000000000000000000000000000000000000000000611a5a565b604088015162ffffff166280000003612e1157606081015191505b6008891615612e8e57604081015192505f612e2c8460801d90565b905080600f0b5f14612e8c575f8512612e49600f83900b87615c6c565b955080612e58575f8612612e5c565b5f86135b15612e8a57612e8a7ffa0b71d600000000000000000000000000000000000000000000000000000000611a5a565b505b505b505b955095509592505050565b5f80808080612eaa8988613f42565b93509350935093505f831115612ed8576001600160a01b0386165f9081526001602052604090208054840190555b33887f40e9cecb9f5f1f1c5b9c97dec2917b7ee92e57ba5563708daca94dd84ad7112f612f058760801d90565b612f0f88600f0b90565b85516040808801516020808a01518351600f97880b81529590960b908501526001600160a01b03909216908301526fffffffffffffffffffffffffffffffff16606082015260029190910b608082015262ffffff861660a082015260c00160405180910390a35091979650505050505050565b5f806001600160a01b0389163303612f9e57508490505f6128a9565b5f612fa98460801d90565b90505f612fb685600f0b90565b905060408b161561305e57613051612619338c8c8c8c8c604051602401612fe296959493929190615c8b565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fb47b2fb10000000000000000000000000000000000000000000000000000000017905260048e1615156001600160a01b038f169190613bca565b61305b9082615d39565b90505b5f81600f0b5f141580613074575082600f0b5f14155b156130d157895160208b01515f13901515146130a8576fffffffffffffffffffffffffffffffff8316608083901b176130c2565b6fffffffffffffffffffffffffffffffff8216608084901b175b90506130ce8982613c24565b98505b979b979a509698505050505050505050565b336001600160a01b038416811480159061312257506001600160a01b038085165f9081526003602090815260408083209385168352929052205460ff16155b156131b5576001600160a01b038085165f9081526005602090815260408083209385168352928152828220868352905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146131b35761318583826157a7565b6001600160a01b038087165f9081526005602090815260408083209387168352928152828220888352905220555b505b61094a8484846146f5565b6001600160a01b038281165f90815290841660205260408120805c91906131eb600f85900b84615c6c565b915081815d50935093915050565b7f7d4b3164c6e45b97e7d87b7125a44c5828d005af88f9d751cfd78729c5d99a0b5c600181039050807f7d4b3164c6e45b97e7d87b7125a44c5828d005af88f9d751cfd78729c5d99a0b5d50565b7f7d4b3164c6e45b97e7d87b7125a44c5828d005af88f9d751cfd78729c5d99a0b5c600181019050807f7d4b3164c6e45b97e7d87b7125a44c5828d005af88f9d751cfd78729c5d99a0b5d50565b6040517f90bfb865000000000000000000000000000000000000000000000000000000008082526001600160a01b03851660048301527fffffffff0000000000000000000000000000000000000000000000000000000084166024830152608060448301526020601f3d018190040260a0810160648401523d608484015290913d5f60a483013e60048260a4018201527fffffffff0000000000000000000000000000000000000000000000000000000084168260c4018201528160e40181fd5b60605f805f8451602086015f885af190508061339f5761339f8461337985615d87565b7fa9e35b2f00000000000000000000000000000000000000000000000000000000613295565b6040519150601f19603f3d011682016040523d82523d5f602084013e60208251108061341d575060208301517fffffffff00000000000000000000000000000000000000000000000000000000166133f8836020015190565b7fffffffff000000000000000000000000000000000000000000000000000000001614155b1561344b5761344b7f1e048e1d00000000000000000000000000000000000000000000000000000000611a5a565b5092915050565b8060020b8260020b1261348a5761348a7fc4433ed5000000000000000000000000000000000000000000000000000000008383614771565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff27618600283900b12156134e0576134e07fd5e2f7ab00000000000000000000000000000000000000000000000000000000836128b5565b620d89e8600282900b13156115ad576115ad7f1ad777f800000000000000000000000000000000000000000000000000000000826128b5565b600283900b5f908152600485016020526040812080548291906fffffffffffffffffffffffffffffffff8116907001000000000000000000000000000000009004600f0b6135678288613b9a565b6fffffffffffffffffffffffffffffffff808216159084168015919091141596509094505f036135ba57885460a01c60020b60020b8860020b136135ba576001808a0154908401556002808a0154908401555b5f866135cf576135ca8883615d39565b6135d9565b6135d98883615df3565b90508060801b6fffffffffffffffffffffffffffffffff86161784555050505094509492505050565b600291820b910b8082071561362f5760405163d4d8f3e681528260208201528160408201526044601c8201fd5b80820591508160081d5f528260205260405f20600160ff84161b815418815550505050565b600282810b5f81815260048601602052604080822085850b83529082208754929485949293919260a09290921c900b908112156136aa5781600101548360010154039450816002015483600201540393506136fd565b8560020b8160020b126136d65782600101548260010154039450826002015482600201540393506136fd565b81600101548360010154896001015403039450816002015483600201548960020154030393505b505050935093915050565b83545f9081906fffffffffffffffffffffffffffffffff16600f86900b820361377257806fffffffffffffffffffffffffffffffff165f0361376d5761376d7faefeb92400000000000000000000000000000000000000000000000000000000611a5a565b6137b9565b61377c8187613b9a565b87547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff919091161787555b6137ed87600101548603826fffffffffffffffffffffffffffffffff1670010000000000000000000000000000000061478e565b925061382387600201548503826fffffffffffffffffffffffffffffffff1670010000000000000000000000000000000061478e565b6001880195909555505060029094015591929050565b60020b5f60ff82901d80830118620d89e881111561387b5761387b7f8b86327a00000000000000000000000000000000000000000000000000000000846128b5565b7001fffcb933bd6fad37aa2d162d1a59400160018216027001000000000000000000000000000000001860028216156138c4576ffff97272373d413259a46990580e213a0260801c5b60048216156138e3576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615613902576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615613921576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615613940576fff973b41fa98c081472e6896dfb254c00260801c5b604082161561395f576fff2ea16466c96a3843ec78b326b528610260801c5b608082161561397e576ffe5dee046a99a2a811c461f1969c30530260801c5b61010082161561399e576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b6102008216156139be576ff987a7253ac413176f2b074cf7815e540260801c5b6104008216156139de576ff3392b0822b70005940c7a398e4b70f30260801c5b6108008216156139fe576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615613a1e576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615613a3e576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615613a5e576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615613a7e576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615613a9f576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615613abf576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615613ade576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615613afb576b048a170391f7dc42444e8fa20260801c5b5f841315613b26577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff045b63ffffffff0160201c9392505050565b5f8082600f0b12613b5d57613b56613b518585856001614849565b61491e565b5f03611a52565b611a52613b518585855f035f614849565b5f8082600f0b12613b8957613b56613b518585856001614950565b611a52613b518585855f035f614950565b6fffffffffffffffffffffffffffffffff8216600f82900b01608081901c1561073e576393dafdf15f526004601cfd5b5f80613bd68585613356565b905082613be6575f9150506107f7565b8051604014613c1857613c187f1e048e1d00000000000000000000000000000000000000000000000000000000611a5a565b60400151949350505050565b5f608082811d9084901d03600f83810b9085900b0361272b61272283612294565b5f73fffd8963efd1fc6a506488495d951d51639616827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffd895d83016001600160a01b03161115613cb757613cb77f6148752400000000000000000000000000000000000000000000000000000000836129ae565b77ffffffffffffffffffffffffffffffffffffffff00000000602083901b16805f613ce1826149ae565b60ff16905060808110613cfc57607f810383901c9150613d06565b80607f0383901b91505b908002607f81811c60ff83811c9190911c800280831c81831c1c800280841c81841c1c800280851c81851c1c800280861c81861c1c800280871c81871c1c800280881c81881c1c800280891c81891c1c8002808a1c818a1c1c8002808b1c818b1c1c8002808c1c818c1c1c8002808d1c818d1c1c8002808e1c9c81901c9c909c1c80029c8d901c9e9d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808f0160401b60c09190911c678000000000000000161760c19b909b1c674000000000000000169a909a1760c29990991c672000000000000000169890981760c39790971c671000000000000000169690961760c49590951c670800000000000000169490941760c59390931c670400000000000000169290921760c69190911c670200000000000000161760c79190911c670100000000000000161760c89190911c6680000000000000161760c99190911c6640000000000000161760ca9190911c6620000000000000161760cb9190911c6610000000000000161760cc9190911c6608000000000000161760cd9190911c66040000000000001617693627a301d71055774c8581027ffffffffffffffffffffffffffffffffffd709b7e5480fba5a50fed5e62ffc5568101608090811d906fdb2df09e81959a81455e260799a0632f8301901d600281810b9083900b14613f3357886001600160a01b0316613f1882613839565b6001600160a01b03161115613f2d5781613f35565b80613f35565b815b9998505050505050505050565b604080516060810182525f8082526020820181905291810182905281908190855460408601515f81613f7c57610fff60c484901c16613f86565b610fff60b884901c165b88516001600160a01b038516865261ffff9190911691505f60a085901c60020b60020b602087015260038b01546fffffffffffffffffffffffffffffffff16604087015260808a01515f906240000016613fe95760d086901c62ffffff16613ffb565b613ffb8b6080015162ffffff16614a42565b9050831561402157620f4240610fff851662ffffff831681810292909204910103614023565b805b975050620f42408762ffffff16106140675789515f1215614067576140677f9620624600000000000000000000000000000000000000000000000000000000611a5a565b89515f0361407f575f809850985050505050506146ec565b831561412e5760608a01516001600160a01b038681169116106140d7576140d76001600160a01b0386165b60608c01517f7c9c6e8f0000000000000000000000000000000000000000000000000000000091906128c4565b6401000276a36001600160a01b03168a606001516001600160a01b0316116141295760608a0151614129907f9e4d7cc700000000000000000000000000000000000000000000000000000000906129ae565b6141b8565b60608a01516001600160a01b03868116911611614157576141576001600160a01b0386166140aa565b73fffd8963efd1fc6a506488495d951d5263988d266001600160a01b03168a606001516001600160a01b0316106141b85760608a01516141b8907f9e4d7cc700000000000000000000000000000000000000000000000000000000906129ae565b60408051610100810182525f80825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081019190915284614207578b6002015461420d565b8b600101545b60e08201525b82158061423857508a606001516001600160a01b0316875f01516001600160a01b0316145b6145855786516001600160a01b03168152602080880151908c01516142629160058f019188614a51565b1515604083015260020b602082018190527ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff27618126142c0577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2761860208201525b620d89e860020b816020015160020b126142de57620d89e860208201525b6142eb8160200151613839565b6001600160a01b0390811660608381018290528951908e0151614328939192911680821891811160018a161891909102188960400151868c614b7c565b60c085015260a084015260808301526001600160a01b031687528a515f1215614384576143588160a0015161491e565b830392506143738160c001518260800151613b5191906157ba565b61437d9083615e41565b91506143b5565b6143978160c0015182608001510161491e565b830192506143a88160a0015161491e565b6143b29083615c6c565b91505b8315614404575f848962ffffff16146143ec57620f4240858360c0015184608001510102816143e6576143e6615e60565b046143f2565b8160c001515b60c08301805182900390529990990198505b60408701516fffffffffffffffffffffffffffffffff1615614463576144578160c0015170010000000000000000000000000000000089604001516fffffffffffffffffffffffffffffffff1691020490565b60e08201805190910190525b80606001516001600160a01b0316875f01516001600160a01b03160361455f5780604001511561453a575f80866144a3578d600101548360e001516144ae565b8260e001518e600201545b915091505f6145068f85602001518585600292830b5f908152600490940160205260409093206001810180549092039091559081018054909203909155547001000000000000000000000000000000009004600f0b90565b90508715614511575f035b61451f8a6040015182613b9a565b6fffffffffffffffffffffffffffffffff1660408b01525050505b84614549578060200151614552565b60018160200151035b60020b6020880152614213565b805187516001600160a01b0390811691161461458057865161455290613c45565b614213565b8651602088015161460d91906145dc90899060a01b76ffffff0000000000000000000000000000000000000000167fffffffffffffffffff000000ffffffffffffffffffffffffffffffffffffffff919091161790565b7fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b039091161790565b8c55604087015160038d01546fffffffffffffffffffffffffffffffff90811691161461467c57604087015160038d0180547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff9092169190911790555b846146905760e081015160028d015561469b565b60e081015160018d01555b8a515f13851515146146c8576146c16146b383612294565b61253b858e5f015103612294565b99506146e5565b6146e26146d9848d5f015103612294565b61253b84612294565b99505b5050505050505b92959194509250565b6001600160a01b0383165f908152600460209081526040808320858452909152812080548392906147279084906157a7565b9091555050604080513381526020810183905283915f916001600160a01b038716917f1b3d7edb2e9c0b0e7c525b20aaaef0f5940d2ed71663c7d39266ecafac7288599101611d44565b6040518381528260020b60048201528160020b6024820152604481fd5b5f838302817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff858709828110838203039150508084116147cc575f80fd5b805f036147de575082900490506107f7565b5f848688095f868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b5f836001600160a01b0316856001600160a01b03161115614868579293925b6001600160a01b0385166148825762bfc9215f526004601cfd5b7bffffffffffffffffffffffffffffffff000000000000000000000000606084901b166001600160a01b0386860316836148e757866001600160a01b03166148d48383896001600160a01b031661478e565b816148e1576148e1615e60565b04614913565b6149136148fe8383896001600160a01b0316614cdf565b886001600160a01b0316808204910615150190565b979650505050505050565b805f811215610bd357610bd37f93dafdf100000000000000000000000000000000000000000000000000000000611a5a565b5f6001600160a01b038481169086160360ff81901d908101186c010000000000000000000000006fffffffffffffffffffffffffffffffff851661499581848461478e565b9350845f83858409111684019350505050949350505050565b5f8082116149ba575f80fd5b507f0706060506020500060203020504000106050205030304010505030400000000601f6f8421084210842108cc6318c6db6d54be6fffffffffffffffffffffffffffffffff841160071b84811c67ffffffffffffffff1060061b1784811c63ffffffff1060051b1784811c61ffff1060041b1784811c60ff1060031b1793841c1c161a1790565b62bfffff8116610bd38161209e565b5f80600284810b9086900b8181078313919005038315614aef57600281900b60081d600181900b5f908152602089905260409020547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60ff808516908190039190911c918216801515955090919085614ad157888360ff16860302614ae4565b88614adb826149ae565b840360ff168603025b965050505050614b72565b6001908101600281900b60081d80830b5f90815260208a905260409020547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60ff841694851b011990811680151595509293919285614b5857888360ff0360ff16860102614b6b565b8883614b6383614d0f565b0360ff168601025b9650505050505b5094509492505050565b5f80808062ffffff85166001600160a01b03808a16908b1610158288128015614c52575f614bb58a5f0385620f424003620f424061478e565b905082614bce57614bc98d8d8d6001614950565b614bdb565b614bdb8c8e8d6001614849565b9650868110614c0f578b9750620f42408414614c0657614c01878586620f424003614cdf565b614c08565b865b9450614c28565b809650614c1e8d8c8386614da9565b9750868a5f030394505b82614c3e57614c398d898d5f614849565b614c4a565b614c4a888e8d5f614950565b955050614cd0565b81614c6857614c638c8c8c5f614849565b614c74565b614c748b8d8c5f614950565b9450848910614c85578a9650614c97565b889450614c948c8b8785614e00565b96505b81614cae57614ca98c888c6001614950565b614cbb565b614cbb878d8c6001614849565b9550614ccd868485620f424003614cdf565b93505b50505095509550955095915050565b5f614ceb84848461478e565b90508180614cfb57614cfb615e60565b838509156107f757600101806107f7575f80fd5b5f808211614d1b575f80fd5b507e1f0d1e100c1d070f090b19131c1706010e11080a1a141802121b15031604055f8290039091166101e07f804040554300526644320000502061067405302602000010750620017611707760fc7fb6db6db6ddddddddd34d34d349249249210842108c6318c639ce739cffffffff840260f81c161b60f71c1690811c63d76453e004601f169190911a1790565b5f6fffffffffffffffffffffffffffffffff8416156001600160a01b038616151715614ddc57634f2461b85f526004601cfd5b81614df357614dee8585856001614e4c565b61272b565b61272b8585856001614f6d565b5f6fffffffffffffffffffffffffffffffff8416156001600160a01b038616151715614e3357634f2461b85f526004601cfd5b81614e4457614dee8585855f614f6d565b61272b8585855f5b5f8115614ed7575f6001600160a01b03841115614e9257614e8d846c01000000000000000000000000876fffffffffffffffffffffffffffffffff1661478e565b614eb2565b614eb26fffffffffffffffffffffffffffffffff8616606086901b615e8d565b9050614ecf614eca826001600160a01b0389166157ba565b615061565b915050611a52565b5f6001600160a01b03841115614f1657614f11846c01000000000000000000000000876fffffffffffffffffffffffffffffffff16614cdf565b614f3c565b614f3c606085901b6fffffffffffffffffffffffffffffffff8716808204910615150190565b9050806001600160a01b03871611614f5b57634323a5555f526004601cfd5b6001600160a01b038616039050611a52565b5f825f03614f7c575083611a52565b7bffffffffffffffffffffffffffffffff000000000000000000000000606085901b168215615020576001600160a01b03861684810290858281614fc257614fc2615e60565b0403614ff257818101828110614ff057614fe683896001600160a01b031683614cdf565b9350505050611a52565b505b50614ecf818561500b6001600160a01b038a1683615e8d565b61501591906157ba565b808204910615150190565b6001600160a01b0386168481029085820414818311166150475763f5c787f15f526004601cfd5b808203614fe6614eca846001600160a01b038b1684614cdf565b806001600160a01b0381168114610bd357610bd37f93dafdf100000000000000000000000000000000000000000000000000000000611a5a565b6001600160a01b038116811461158b575f80fd5b5f80604083850312156150c0575f80fd5b82356150cb8161509b565b946020939093013593505050565b5f602082840312156150e9575f80fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146107f7575f80fd5b5f805f6060848603121561512a575f80fd5b83356151358161509b565b95602085013595506040909401359392505050565b5f805f6060848603121561515c575f80fd5b83356151678161509b565b925060208401356151778161509b565b929592945050506040919091013590565b5f60208284031215615198575f80fd5b5035919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6040516080810167ffffffffffffffff811182821017156151ef576151ef61519f565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561521e5761521e61519f565b604052919050565b803562ffffff81168114610bd3575f80fd5b8035600281900b8114610bd3575f80fd5b5f60a08284031215615259575f80fd5b60405160a0810167ffffffffffffffff8111828210171561527c5761527c61519f565b604052905080823561528d8161509b565b8152602083013561529d8161509b565b60208201526152ae60408401615226565b60408201526152bf60608401615238565b606082015260808301356152d28161509b565b6080919091015292915050565b5f8083601f8401126152ef575f80fd5b50813567ffffffffffffffff811115615306575f80fd5b60208301915083602082850101111561531d575f80fd5b9250929050565b5f805f805f6101008688031215615339575f80fd5b6153438787615249565b945060a0860135935060c0860135925060e086013567ffffffffffffffff81111561536c575f80fd5b615378888289016152df565b969995985093965092949392505050565b5f60208284031215615399575f80fd5b81356107f78161509b565b5f80604083850312156153b5575f80fd5b50508035926020909101359150565b602080825282518282018190525f918401906040840190835b818110156153fb5783518352602093840193909201916001016153dd565b509095945050505050565b5f8060208385031215615417575f80fd5b823567ffffffffffffffff81111561542d575f80fd5b615439858286016152df565b90969095509350505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b5f8060c0838503121561548b575f80fd5b6154958484615249565b91506154a360a08401615226565b90509250929050565b80358015158114610bd3575f80fd5b5f80604083850312156154cc575f80fd5b82356154d78161509b565b91506154a3602084016154ac565b5f805f808486036101408112156154fa575f80fd5b6155048787615249565b945060807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6082011215615535575f80fd5b5061553e6151cc565b61554a60a08701615238565b815261555860c08701615238565b602082015260e086013560408201526101008601356060820152925061012085013567ffffffffffffffff81111561558e575f80fd5b61559a878288016152df565b95989497509550505050565b5f8060c083850312156155b7575f80fd5b6155c18484615249565b915060a08301356155d18161509b565b809150509250929050565b5f80602083850312156155ed575f80fd5b823567ffffffffffffffff811115615603575f80fd5b8301601f81018513615613575f80fd5b803567ffffffffffffffff811115615629575f80fd5b8560208260051b840101111561563d575f80fd5b6020919091019590945092505050565b5f806040838503121561565e575f80fd5b82356156698161509b565b915060208301356155d18161509b565b5f805f8084860361012081121561568e575f80fd5b6156988787615249565b945060607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60820112156156c9575f80fd5b506040516060810167ffffffffffffffff811182821017156156ed576156ed61519f565b6040526156fc60a087016154ac565b815260c0860135602082015260e08601356157168161509b565b6040820152925061010085013567ffffffffffffffff81111561558e575f80fd5b5f805f806080858703121561574a575f80fd5b84356157558161509b565b935060208501356157658161509b565b93969395505050506040820135916060013590565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b8181038181111561073e5761073e61577a565b8082018082111561073e5761073e61577a565b81835281816020850137505f602082840101525f6020601f19601f840116840101905092915050565b602081525f611a526020830184866157cd565b5f60208284031215615819575f80fd5b815167ffffffffffffffff81111561582f575f80fd5b8201601f8101841361583f575f80fd5b805167ffffffffffffffff8111156158595761585961519f565b61586c6020601f19601f840116016151f5565b818152856020838501011115615880575f80fd5b8160208401602083015e5f91810160200191909152949350505050565b6001600160a01b038716815261590460208201876001600160a01b0381511682526001600160a01b03602082015116602083015262ffffff6040820151166040830152606081015160020b60608301526001600160a01b0360808201511660808301525050565b8460c08201528360e08201526101206101008201525f615929610120830184866157cd565b98975050505050505050565b6001600160a01b038616815261599c60208201866001600160a01b0381511682526001600160a01b03602082015116602083015262ffffff6040820151166040830152606081015160020b60608301526001600160a01b0360808201511660808301525050565b8351600290810b60c08301526020850151900b60e0820152604084015161010082015260608401516101208201526101606101408201525f614913610160830184866157cd565b6001600160a01b0388168152615a4a60208201886001600160a01b0381511682526001600160a01b03602082015116602083015262ffffff6040820151166040830152606081015160020b60608301526001600160a01b0360808201511660808301525050565b8551600290810b60c08301526020870151900b60e08201526040860151610100820152606086015161012082015284610140820152836101608201526101a06101808201525f613f356101a0830184866157cd565b6001600160a01b038416815260e08101615b0a60208301856001600160a01b0381511682526001600160a01b03602082015116602083015262ffffff6040820151166040830152606081015160020b60608301526001600160a01b0360808201511660808301525050565b6001600160a01b03831660c0830152949350505050565b6001600160a01b03851681526101008101615b8d60208301866001600160a01b0381511682526001600160a01b03602082015116602083015262ffffff6040820151166040830152606081015160020b60608301526001600160a01b0360808201511660808301525050565b6001600160a01b03841660c08301528260020b60e083015295945050505050565b5f60208284031215615bbe575f80fd5b5051919050565b6001600160a01b0386168152615c2c60208201866001600160a01b0381511682526001600160a01b03602082015116602083015262ffffff6040820151166040830152606081015160020b60608301526001600160a01b0360808201511660808301525050565b8351151560c0820152602084015160e082015260408401516001600160a01b03166101008201526101406101208201525f614913610140830184866157cd565b8082018281125f8312801582168215821617156112845761128461577a565b6001600160a01b0387168152615cf260208201876001600160a01b0381511682526001600160a01b03602082015116602083015262ffffff6040820151166040830152606081015160020b60608301526001600160a01b0360808201511660808301525050565b8451151560c0820152602085015160e082015260408501516001600160a01b0316610100820152836101208201526101606101408201525f615929610160830184866157cd565b600f81810b9083900b016f7fffffffffffffffffffffffffffffff81137fffffffffffffffffffffffffffffffff800000000000000000000000000000008212171561073e5761073e61577a565b805160208201517fffffffff00000000000000000000000000000000000000000000000000000000811691906004821015615dec577fffffffff00000000000000000000000000000000000000000000000000000000808360040360031b1b82161692505b5050919050565b600f82810b9082900b037fffffffffffffffffffffffffffffffff8000000000000000000000000000000081126f7fffffffffffffffffffffffffffffff8213171561073e5761073e61577a565b8181035f83128015838313168383128216171561344b5761344b61577a565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f82615ec0577f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b50049056fea164736f6c634300081a000a",
        "sourceMap": "4791:12821:45:-:0;;;5508:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1045:5:37;:14;;-1:-1:-1;;;;;;1045:14:37;-1:-1:-1;;;;;1045:14:37;;;;;;;1075:40;;1045:14;;;;;1075:40;;1045:5;;1075:40;-1:-1:-1;;719:4:44;700:24;;-1:-1:-1;4791:12821:45;;14:290:106;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:106;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:106:o;:::-;4791:12821:45;;;;;;;;;;;;",
        "linkReferences": {}
    },
    "deployedBytecode": {
        "object": "",
        "sourceMap": "4791:12821:45:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;792:81:40;;;;;;;;;;-1:-1:-1;792:81:40;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;691:25:106;;;679:2;664:18;792:81:40;;;;;;;;2663:241;;;;;;;;;;-1:-1:-1;2663:241:40;;;;;:::i;:::-;;:::i;:::-;;;1229:14:106;;1222:22;1204:41;;1192:2;1177:18;2663:241:40;1064:187:106;1178:282:40;;;;;;;;;;-1:-1:-1;1178:282:40;;;;;:::i;:::-;;:::i;13288:301:45:-;;;;;;;;;;-1:-1:-1;13288:301:45;;;;;:::i;:::-;;:::i;:::-;;13628:113;;;:::i;14496:359::-;;;;;;;;;;-1:-1:-1;14496:359:45;;;;;:::i;:::-;;:::i;337:179:42:-;;;;;;;;;;-1:-1:-1;337:179:42;;;;;:::i;:::-;;:::i;12025:732:45:-;;;;;;;;;;-1:-1:-1;12025:732:45;;;;;:::i;:::-;;:::i;1070:179:46:-;;;;;;;;;;-1:-1:-1;1070:179:46;;;;;:::i;:::-;;:::i;552:981:42:-;;;;;;;;;;-1:-1:-1;552:981:42;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;13780:132:45:-;;;;;;:::i;:::-;;:::i;2013:231:40:-;;;;;;;;;;-1:-1:-1;2013:231:40;;;;;:::i;:::-;;:::i;5610:468:45:-;;;;;;;;;;-1:-1:-1;5610:468:45;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;15192:353::-;;;;;;;;;;-1:-1:-1;15192:353:45;;;;;:::i;:::-;;:::i;2250:225:40:-;;;;;;;;;;-1:-1:-1;2250:225:40;;;;;:::i;:::-;;:::i;880:108::-;;;;;;;;;;-1:-1:-1;880:108:40;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7601:1745:45;;;;;;;;;;-1:-1:-1;7601:1745:45;;;;;:::i;:::-;;:::i;:::-;;;;10899:25:106;;;10955:2;10940:18;;10933:34;;;;10872:18;7601:1745:45;10659:314:106;6117:1445:45;;;;;;;;;;-1:-1:-1;6117:1445:45;;;;;:::i;:::-;;:::i;:::-;;;11519:1:106;11508:21;;;;11490:40;;11478:2;11463:18;6117:1445:45;11348:188:106;1289:414:46;;;;;;;;;;-1:-1:-1;1289:414:46;;;;;:::i;:::-;;:::i;13951:506:45:-;;;;;;;;;;-1:-1:-1;13951:506:45;;;;;:::i;:::-;;:::i;1743:701:46:-;;;;;;;;;;-1:-1:-1;1743:701:46;;;;;:::i;:::-;;:::i;690:20:37:-;;;;;;;;;;-1:-1:-1;690:20:37;;;;-1:-1:-1;;;;;690:20:37;;;;;;-1:-1:-1;;;;;12650:55:106;;;12632:74;;12620:2;12605:18;690:20:37;12486:226:106;819:71:46;;;;;;;;;;-1:-1:-1;819:71:46;;;;;:::i;:::-;;;;;;;;;;;;;;563:1037:43;;;;;;;;;;-1:-1:-1;563:1037:43;;;;;:::i;:::-;;:::i;12796:453:45:-;;;;;;;;;;-1:-1:-1;12796:453:45;;;;;:::i;:::-;;:::i;697:88:40:-;;;;;;;;;;-1:-1:-1;697:88:40;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;1569:1037:42;;;;;;;;;;-1:-1:-1;1569:1037:42;;;;;:::i;:::-;;:::i;931:36:46:-;;;;;;;;;;-1:-1:-1;931:36:46;;;;-1:-1:-1;;;;;931:36:46;;;348:179:43;;;;;;;;;;-1:-1:-1;348:179:43;;;;;:::i;:::-;;:::i;1312:161:37:-;;;;;;;;;;-1:-1:-1;1312:161:37;;;;;:::i;:::-;;:::i;9385:1686:45:-;;;;;;;;;;-1:-1:-1;9385:1686:45;;;;;:::i;:::-;;:::i;14894:259::-;;;;;;;;;;-1:-1:-1;14894:259:45;;;;;:::i;:::-;;:::i;1466:541:40:-;;;;;;;;;;-1:-1:-1;1466:541:40;;;;;:::i;:::-;;:::i;2663:241::-;2739:4;2762:25;;;;;;:100;;-1:-1:-1;2837:25:40;;;;;2762:100;2755:107;2663:241;-1:-1:-1;;2663:241:40:o;1178:282::-;1292:10;1266:4;1282:21;;;:9;:21;;;;;;;;:25;;;;;;;;:35;;1311:6;;1282:25;1266:4;;1282:35;;1311:6;;1282:35;:::i;:::-;;;;-1:-1:-1;;;;;;;1328:19:40;;;;;;:9;:19;;;;;;;;:23;;;;;;;;:33;;1355:6;;1328:19;:33;;1355:6;;1328:33;:::i;:::-;;;;-1:-1:-1;;1377:54:40;;;1398:10;16544:74:106;;;16649:2;16634:18;;16627:34;;;1420:2:40;;-1:-1:-1;;;;;1377:54:40;;;;;16517:18:106;1377:54:40;;;;;;;;-1:-1:-1;1449:4:40;1178:282;;;;;;:::o;13288:301:45:-;894:16:65;888:23;5425:59:45;;5449:35;:22;:33;:35::i;:::-;13472:57:::1;13486:8;13498:17;:6;:15;:17::i;:::-;13496:20;;13518:10;13472:13;:57::i;:::-;13543:29;-1:-1:-1::0;;;;;13543:17:45;::::1;13561:2:::0;13565:6;13543:17:::1;:29::i;:::-;13288:301:::0;;;:::o;13628:113::-;13689:7;894:16:65;888:23;5425:59:45;;5449:35;:22;:33;:35::i;:::-;13715:19:::1;13723:10;13715:7;:19::i;:::-;13708:26;;13628:113:::0;:::o;14496:359::-;894:16:65;888:23;5425:59:45;;5449:35;:22;:33;:35::i;:::-;14653:2;14733:57:::1;14653:2:::0;14759:17:::1;:6:::0;:15:::1;:17::i;14733:57::-;14804:34;14810:2:::0;-1:-1:-1;;;;;14814:13:45;::::1;14831:6;14804:5;:34::i;:::-;14586:263;14496:359:::0;;;:::o;337:179:42:-;392:7;466:4;460:11;457:1;450:22;495:4;492:1;485:15;12025:732:45;12202:18;894:16:65;888:23;5425:59:45;;5449:35;:22;:33;:35::i;:::-;1205:22:44::1;:20;:22::i;:::-;515:4:92::0;496:24;;12236:13:45::2;17402:10:::0;;;:6;:10;;;;;12324:27:::2;17402:10:::0;12324:25:::2;:27::i;:::-;12362:9;::::0;::::2;::::0;:55:::2;::::0;-1:-1:-1;;;;;12362:22:45::2;12385:3:::0;12390:7;12399;12408:8;;12362:22:::2;:55::i;:::-;12436:29;:4:::0;12448:7;12457;12436:11:::2;:29::i;:::-;12428:37;;12476:48;12501:3;12506:5;12513:10;12476:24;:48::i;:::-;12641:44;::::0;;10899:25:106;;;10955:2;10940:18;;10933:34;;;12656:10:45::2;::::0;12648:6;;12641:44:::2;::::0;10872:18:106;12641:44:45::2;;;;;;;12696:9;::::0;::::2;::::0;:54:::2;::::0;-1:-1:-1;;;;;12696:21:45::2;12718:3:::0;12723:7;12732;12741:8;;12696:21:::2;:54::i;:::-;12226:531;;12025:732:::0;;;;;;;:::o;1070:179:46:-;778:5:37;;-1:-1:-1;;;;;778:5:37;764:10;:19;756:44;;;;;;;17127:2:106;756:44:37;;;17109:21:106;17166:2;17146:18;;;17139:30;17205:14;17185:18;;;17178:42;17237:18;;756:44:37;;;;;;;;;1153:21:46::1;:34:::0;;;::::1;-1:-1:-1::0;;;;;1153:34:46;::::1;::::0;;::::1;::::0;;;1202:40:::1;::::0;::::1;::::0;-1:-1:-1;;1202:40:46::1;1070:179:::0;:::o;552:981:42:-;628:16;715:4;709:11;746:6;878;875:1;871:14;985:4;977:6;970:20;1083:6;1076:4;1068:6;1064:17;1057:33;1193:4;1185:6;1181:17;1171:27;;1234:6;1226;1222:19;1211:30;;1254:220;1305:9;1299:16;1291:6;1284:32;1355:4;1347:6;1343:17;1333:27;;1405:1;1394:9;1390:17;1377:30;;1445:3;1437:6;1434:15;1254:220;1424:36;1510:5;1505:3;1501:15;1494:5;1487:30;13780:132:45;13861:7;894:16:65;888:23;5425:59:45;;5449:35;:22;:33;:35::i;:::-;13887:18:::1;13895:9;13887:7;:18::i;5494:1::-;13780:132:::0;;;:::o;2013:231:40:-;2125:10;2099:4;2115:21;;;:9;:21;;;;;;;;-1:-1:-1;;;;;2115:30:40;;;;;;;;;;;:34;;;;;;;;;:43;;;2174:41;2099:4;;2146:2;;2174:41;;;;2152:6;691:25:106;;679:2;664:18;;545:177;5610:468:45;5674:19;894:16:65;888:23;5705:60:45;;;5728:37;:24;:35;:37::i;:::-;5776:13;:11;:13::i;:::-;5916:48;;;;;5932:10;;5916:42;;:48;;5959:4;;;;5916:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5916:48:45;;;;;;;;;;;;:::i;:::-;5907:57;-1:-1:-1;676:24:66;670:31;5979:29:45;5975:75;;6010:40;:27;:38;:40::i;:::-;6060:11;:9;:11::i;15192:353::-;15288:7;;;;:20;;552:8:63;1379:24;15287:23:45;:59;;;;15336:3;:9;;;-1:-1:-1;;;;;15314:32:45;:10;-1:-1:-1;;;;;15314:32:45;;;15287:59;15283:142;;;15362:52;:39;:50;:52::i;:::-;15434:26;:15;:24;;;:26::i;:::-;515:4:92;496:24;;15470:9:45;15502:10;;;:6;:10;;;;;:36;;15522:15;15502:19;:36::i;2250:225:40:-;2355:10;2328:4;2344:22;;;:10;:22;;;;;;;;-1:-1:-1;;;;;2344:32:40;;;;;;;;;;;:43;;;;;;;;;;;;;2403;;1204:41:106;;;2328:4:40;;2355:10;2403:43;;1177:18:106;2403:43:40;;;;;;;-1:-1:-1;2464:4:40;2250:225;;;;:::o;7601:1745:45:-;7790:24;;894:16:65;888:23;5425:59:45;;5449:35;:22;:33;:35::i;:::-;1205:22:44::1;:20;:22::i;:::-;515:4:92::0;496:24;;7856:9:45::2;17402:10:::0;;;:6;:10;;;;;7954:27:::2;17402:10:::0;7954:25:::2;:27::i;:::-;7996:9;::::0;::::2;::::0;:54:::2;::::0;-1:-1:-1;;;;;7996:31:45::2;8028:3:::0;8033:6;8041:8;;7996:31:::2;:54::i;:::-;8065:27;8138:394;8176:342;;;;;;;;8232:10;-1:-1:-1::0;;;;;8176:342:45::2;;;;;8275:6;:16;;;8176:342;;;;;;8324:6;:16;;;8176:342;;;;;;8378:32;:6;:21;;;:30;:32::i;:::-;8176:342;;::::0;;8445:15:::2;::::0;;::::2;::::0;8176:342:::2;;;::::0;::::2;::::0;8488:11;::::2;::::0;-1:-1:-1;8176:342:45;;;;8138:4;;:20:::2;:394::i;:::-;8106:426:::0;-1:-1:-1;8106:426:45;-1:-1:-1;8637:28:45::2;8106:426:::0;;8637:28:::2;:::i;:::-;8623:42;;7888:788;;8821:10;-1:-1:-1::0;;;;;8801:103:45::2;8817:2;8801:103;8833:6;:16;;;8851:6;:16;;;8869:6;:21;;;8892:6;:11;;;8801:103;;;;;;;;18914:1:106::0;18903:21;;;18885:40;;18961:21;;;;18956:2;18941:18;;18934:49;19014:2;18999:18;;18992:34;19057:2;19042:18;;19035:34;;;;18872:3;18857:19;;18664:411;8801:103:45::2;;;;;;;;8974:9;::::0;::::2;::::0;8915:22:::2;::::0;8974:79:::2;::::0;-1:-1:-1;;;;;8974:30:45::2;9005:3:::0;9010:6;9018:11;9031;9044:8;;8974:30:::2;:79::i;:::-;8947:106:::0;;-1:-1:-1;8947:106:45;-1:-1:-1;1676:48:89;;9165:109:45::2;;9214:60;9239:3;9244:9;9263:3;:9;;;9214:24;:60::i;:::-;9285:54;9310:3;9315:11;9328:10;9285:24;:54::i;:::-;7846:1500;;7601:1745:::0;;;;;;;:::o;6117:1445::-;6212:10;1205:22:44;:20;:22::i;:::-;6341:15:45::1;::::0;::::1;::::0;1676::76::1;6341:34:45;::::0;;;::::1;;6337:96;;;6417:15;::::0;::::1;::::0;6377:56:::1;::::0;:28;;:39:::1;:56::i;:::-;1511:1:76;6447:34:45;;:3;:15;;;:34;;;6443:96;;;6523:15;::::0;::::1;::::0;6483:56:::1;::::0;:28;;:39:::1;:56::i;:::-;6553:13:::0;;6570::::1;::::0;::::1;::::0;-1:-1:-1;;;;;887:51:91;;;;;;6549:202:45::1;;6680:13:::0;;6712::::1;::::0;::::1;::::0;6599:141:::1;::::0;:36;;:47:::1;:141::i;:::-;6765:37;6794:3;:7;;;6765:3;:9;;;-1:-1:-1::0;;;;;6765:28:45::1;;;:37;;;;:::i;:::-;6760:109;;6858:9;::::0;::::1;::::0;6804:65:::1;::::0;:34;;:45:::1;:65::i;:::-;6880:12;6895:25;:3;:7;;;:23;;;:25::i;:::-;6931:9;::::0;::::1;::::0;6880:40;;-1:-1:-1;6931:45:45::1;::::0;-1:-1:-1;;;;;6931:26:45::1;6958:3:::0;6963:12;6931:26:::1;:45::i;:::-;515:4:92::0;496:24;;6987:9:45::1;7027:10:::0;;;:6:::1;:10;::::0;;;;:42:::1;::::0;7049:12;7063:5;7027:21:::1;:42::i;:::-;7020:49;;7423:3;:13;;;-1:-1:-1::0;;;;;7393:101:45::1;7408:3;:13;;;-1:-1:-1::0;;;;;7393:101:45::1;7404:2;7393:101;7438:3;:7;;;7447:3;:15;;;7464:3;:9;;;7475:12;7489:4;7393:101;;;;;;;;;19375:8:106::0;19363:21;;;;19345:40;;19432:1;19421:21;;;19416:2;19401:18;;19394:49;-1:-1:-1;;;;;19479:55:106;;;19474:2;19459:18;;19452:83;19571:55;;19566:2;19551:18;;19544:83;19664:21;;19658:3;19643:19;;19636:50;19332:3;19317:19;;19080:612;7393:101:45::1;;;;;;;;7505:9;::::0;::::1;::::0;:50:::1;::::0;-1:-1:-1;;;;;7505:25:45::1;7531:3:::0;7536:12;7550:4;7505:25:::1;:50::i;:::-;6224:1338;;6117:1445:::0;;;;:::o;1289:414:46:-;1393:21;;-1:-1:-1;;;;;1393:21:46;1379:10;:35;1375:76;;1416:35;:22;:33;:35::i;:::-;1173:15:70;1165:5;1155:16;;1152:37;1251:15;1240:8;1230:19;;1227:40;1289:41;1461:97:46;;1503:55;:28;:55;;;:39;:55::i;:::-;515:4:92;496:24;;1600:43:46;1628:14;1600:12;1609:2;17365:18:45;17402:10;;;:6;:10;;;;;;17304:115;1600:12:46;:27;;:43::i;:::-;1658:38;;19871:8:106;19859:21;;19841:40;;1677:2:46;;1658:38;;19829:2:106;19814:18;1658:38:46;;;;;;;1365:338;1289:414;;:::o;13951:506:45:-;894:16:65;888:23;5425:59:45;;5449:35;:22;:33;:35::i;:::-;14072:10:::1;14037:14;586:66:56::0;;;-1:-1:-1;;;;;14054:17:45;::::1;672:2:56::0;665:69;772:2;759:16;;1004:15;;14191:17:45::1;:6:::0;:15:::1;:17::i;:::-;14170:38;;14237:7;14222:11;:22;;;14218:77;;14246:49;:36:::0;:47:::1;:49::i;:::-;14389:51;14403:8;14415:11;14413:14;;14429:10;14389:13;:51::i;1743:701:46:-:0;1917:21;;1860:23;;-1:-1:-1;;;;;1917:21:46;1903:10;:35;1899:76;;1940:35;:22;:33;:35::i;:::-;-1:-1:-1;;;;;1990:22:46;;4998:58:91;1989:25:46;:77;;;;-1:-1:-1;;;;;;686:13:57;680:20;448:51:91;;;;;;2018:48:46;1985:257;;;2184:47;:34;:45;:47::i;:::-;2271:11;;2270:54;;2318:6;2270:54;;;-1:-1:-1;;;;;2286:29:46;;;;;;:19;:29;;;;;;2270:54;-1:-1:-1;;;;;2334:29:46;;;;;;:19;:29;;;;;:48;;2252:72;;-1:-1:-1;2252:72:46;;2334:29;;;:48;;2252:72;;2334:48;:::i;:::-;;;;-1:-1:-1;2392:45:46;;-1:-1:-1;;;;;;2392:17:46;;2410:9;2421:15;2392:17;:45::i;563:1037:43:-;630:16;717:4;711:11;748:6;861:4;853:6;846:20;965:12;958:4;950:6;946:17;939:39;1087:4;1079:6;1075:17;1065:27;;1227:12;1224:1;1220:20;1212:6;1208:33;1273:12;1298:243;1349:25;;1343:32;1328:48;;1415:4;1403:17;;;;1452:22;1501:15;;;1298:243;1491:36;1298:243;1302:2;1577:5;1572:3;1568:15;1561:5;1554:30;12796:453:45;-1:-1:-1;;;;;12906:22:45;;12902:341;;13054:32;:30;:32::i;:::-;12796:453;:::o;12902:341::-;13117:15;13135:24;:8;-1:-1:-1;;;;;13135:22:45;;:24::i;:::-;13117:42;;13173:59;13214:8;13224:7;13173:40;:59::i;:::-;13103:140;12796:453;:::o;1569:1037:42:-;1636:16;1723:4;1717:11;1754:6;1867:4;1859:6;1852:20;1971:12;1964:4;1956:6;1952:17;1945:39;2093:4;2085:6;2081:17;2071:27;;2233:12;2230:1;2226:20;2218:6;2214:33;2279:12;2304:243;2355:25;;2349:32;2334:48;;2421:4;2409:17;;;;2458:22;2507:15;;;2497:36;2526:5;2497:36;2304:243;;348:179:43;403:7;477:4;471:11;468:1;461:22;506:4;503:1;496:15;1312:161:37;778:5;;-1:-1:-1;;;;;778:5:37;764:10;:19;756:44;;;;;;;17127:2:106;756:44:37;;;17109:21:106;17166:2;17146:18;;;17139:30;17205:14;17185:18;;;17178:42;17237:18;;756:44:37;16925:336:106;756:44:37;1392:5:::1;:16:::0;;;::::1;-1:-1:-1::0;;;;;1392:16:37;::::1;::::0;;::::1;::::0;;1424:42:::1;::::0;1392:16;;1445:10:::1;::::0;1424:42:::1;::::0;1392:5;1424:42:::1;1312:161:::0;:::o;9385:1686:45:-;9552:22;894:16:65;888:23;5425:59:45;;5449:35;:22;:33;:35::i;:::-;1205:22:44::1;:20;:22::i;:::-;9594:6:45::2;:22;;;9620:1;9594:27:::0;9590:77:::2;;9623:44;:31:::0;:42:::2;:44::i;:::-;515:4:92::0;496:24;;9677:9:45::2;17402:10:::0;;;:6;:10;;;;;9757:27:::2;17402:10:::0;9757:25:::2;:27::i;:::-;9966:9;::::0;::::2;::::0;9795:31:::2;::::0;;;;;9966:43:::2;::::0;-1:-1:-1;;;;;9966:20:45::2;9987:3:::0;9992:6;10000:8;;9966:20:::2;:43::i;:::-;9917:92;;;;;;;;;;;;10169:463;10192:4;10214:2;10234:302;;;;;;;;10390:12;10234:302;;;;10285:3;:15;;;10234:302;;;;;;10334:6;:17;;;10234:302;;;;;;10443:6;:24;;;-1:-1:-1::0;;;;;10234:302:45::2;;;;;10504:13;10234:302;;;;::::0;10554:6:::2;:17;;;:49;;10590:3;:13;;;10169:5;:463::i;10554:49::-;10574:13:::0;;10169:5:::2;:463::i;:::-;10710:9;::::0;::::2;::::0;10157:475;;-1:-1:-1;10653:22:45::2;::::0;-1:-1:-1;10710:70:45::2;::::0;-1:-1:-1;;;;;;10710:19:45::2;10730:3:::0;10735:6;10157:475;10754:8;;10764:15;10710:19:::2;:70::i;:::-;10685:95:::0;;-1:-1:-1;10685:95:45;-1:-1:-1;1676:48:89;;10892:109:45::2;;10941:60;10966:3;10971:9;10990:3;:9;;;10941:24;:60::i;:::-;11012:52;11037:3;11042:9;11053:10;11012:24;:52::i;:::-;9580:1491;;;;9385:1686:::0;;;;;;:::o;14894:259::-;894:16:65;888:23;5425:59:45;;5449:35;:22;:33;:35::i;:::-;15029:2;15042:54:::1;15029:2:::0;15066:17:::1;:6:::0;:15:::1;:17::i;:::-;15085:10;15042:13;:54::i;:::-;15106:40;15116:4:::0;-1:-1:-1;;;;;15122:13:45;::::1;15139:6;15106:9;:40::i;1466:541:40:-:0;1574:4;1594:10;-1:-1:-1;;;;;1594:20:40;;;;;;:55;;-1:-1:-1;;;;;;1619:18:40;;;;;;:10;:18;;;;;;;;1638:10;1619:30;;;;;;;;;;1618:31;1594:55;1590:237;;;-1:-1:-1;;;;;1683:17:40;;1665:15;1683:17;;;:9;:17;;;;;;;;1701:10;1683:29;;;;;;;:33;;;;;;;;;1745:17;1734:28;;1730:86;;1800:16;1810:6;1800:7;:16;:::i;:::-;-1:-1:-1;;;;;1764:17:40;;;;;;:9;:17;;;;;;;;1782:10;1764:29;;;;;;;:33;;;;;;;;:52;1730:86;1651:176;1590:237;-1:-1:-1;;;;;1837:17:40;;;;;;:9;:17;;;;;;;;:21;;;;;;;;:31;;1862:6;;1837:17;:31;;1862:6;;1837:31;:::i;:::-;;;;-1:-1:-1;;;;;;;1879:19:40;;;;;;:9;:19;;;;;;;;:23;;;;;;;;:33;;1906:6;;1879:19;:33;;1906:6;;1879:33;:::i;:::-;;;;-1:-1:-1;;1928:50:40;;;1937:10;16544:74:106;;16649:2;16634:18;;16627:34;;;1967:2:40;;-1:-1:-1;;;;;1928:50:40;;;;;;;;;;16517:18:106;1928:50:40;;;;;;;-1:-1:-1;1996:4:40;1466:541;;;;;;;:::o;753:163:58:-;863:8;860:1;853:19;895:4;892:1;885:15;2098:168:71;2150:6;2177:8;2172:1;:13;2168:57;;2187:38;:25;:36;:38::i;:::-;-1:-1:-1;2256:1:71;2098:168::o;16552:356:45:-;16647:5;:10;;16656:1;16647:10;16643:23;;16552:356;;;:::o;16643:23::-;16677:15;;16709:34;-1:-1:-1;;;;;16709:19:45;;16729:6;16737:5;16709:19;:34::i;:::-;16676:67;;;;16758:4;16766:1;16758:9;16754:148;;16783:29;:27;:29::i;:::-;16754:148;;;16833:8;16845:1;16833:13;16829:73;;16862:29;:27;:29::i;:::-;16633:275;;16552:356;;;:::o;1472:2873:91:-;1743:12;-1:-1:-1;;;;;1769:22:91;;1765:2574;;1956:1;1953;1950;1947;1939:6;1935:2;1928:5;1923:35;1912:46;;2086:7;2081:127;;2113:80;2148:2;2159:1;2163:29;2113:34;:80::i;:::-;1765:2574;;;2352:4;2346:11;2488:66;2483:3;2476:79;-1:-1:-1;;;;;2596:2:91;2592:51;2588:1;2583:3;2579:11;2572:72;2720:6;2715:2;2710:3;2706:12;2699:28;3649:2;3646:1;3642:2;3637:3;3634:1;3624:8;3617:5;3612:40;3141:16;3134:24;3128:2;3110:16;3107:24;3103:1;3099;3093:8;3090:15;3086:46;3083:76;2859:815;2828:846;;3752:1;3747:3;3740:14;3853:1;3846:4;3841:3;3837:14;3830:25;3956:1;3949:4;3944:3;3940:14;3933:25;;4125:7;4120:209;;4152:162;4224:8;4235:31;4268:28;4152:34;:162::i;15649:825:45:-;15703:12;686:13:57;680:20;-1:-1:-1;;;;;15916:22:45;;15912:494;;15963:9;15956:16;;15912:494;;;16007:9;:13;16003:59;;16022:40;:27;:38;:40::i;:::-;1253:16:57;1247:23;16179:22:45;16276:24;-1:-1:-1;;;;;16276:22:45;;;:24::i;:::-;16254:46;-1:-1:-1;16321:28:45;16335:14;16254:46;16321:28;:::i;:::-;16314:35;;16363:32;:30;:32::i;:::-;15989:417;;15912:494;16416:51;16430:8;16440:15;:4;:13;:15::i;:::-;16457:9;16416:13;:51::i;:::-;15717:757;15649:825;;;:::o;3098:198:40:-;-1:-1:-1;;;;;3186:19:40;;;;;;:9;:19;;;;;;;;:23;;;;;;;;:33;;3213:6;;3186:19;:33;;3213:6;;3186:33;:::i;:::-;;;;-1:-1:-1;;3235:54:40;;;3244:10;16544:74:106;;16649:2;16634:18;;16627:34;;;3278:2:40;;-1:-1:-1;;;;;3235:54:40;;;3264:1;;3235:54;;16517:18:106;3235:54:40;;;;;;;;3098:198;;;:::o;963:137:44:-;1030:4;-1:-1:-1;;;;;1039:8:44;1022:25;;1018:75;;1049:44;:31;:42;:44::i;:::-;963:137::o;28591:157:68:-;28669:10;;-1:-1:-1;;;;;5144:41:91;28698:1:68;28669:30;28665:76;;28701:40;:27;:38;:40::i;15596:342:62:-;15746:4;8814:10;-1:-1:-1;;;;;8814:27:62;;;8810:59;;1907:6:::1;16467:29:::0;;:34;15766:166:::1;;15824:97;15875:10;15887:3;15892:7;15901;15910:8;;15838:82;;;;;;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;15838:82:62;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;::::1;;::::0;::::1;::::0;;-1:-1:-1;;;;;15824:13:62;::::1;::::0;::::1;:97::i;:::-;;15766:166;15596:342:::0;;;;;;;:::o;21937:877:68:-;22076:15;;;;22026:18;;22076:15;;22105:14;;;22101:66;;22121:46;:33;:44;:46::i;:::-;22281:60;22298:18;:7;:16;:18::i;:::-;22296:21;;22321:18;:7;:16;:18::i;:::-;22319:21;;639:3:89;607:18;;;;631:19;627:34;;;604:58;;448:222;22281:60:68;22273:68;-1:-1:-1;22503:11:68;;22499:143;;22534:26;;;:93;;22564:63;;;258:35:59;1123:9:78;;1119:27;22534:93:68;;;22499:143;22659:11;;22655:143;;22690:26;;;:93;;22720:63;;;258:35:59;1123:9:78;;1119:27;22690:93:68;;;22655:143;22046:768;21937:877;;;;;:::o;16986:232:45:-;17109:13;;17095:53;;17124:15;:5;2107:3:89;2103:22;;1958:183;17124:15:45;17141:6;17095:13;:53::i;:::-;17158;17172:3;:13;;;17187:15;:5;2303:2:89;2292:28;;2147:189;16026:339:62;16175:4;8814:10;-1:-1:-1;;;;;8814:27:62;;;8810:59;;1965:6:::1;16467:29:::0;;:34;16195:164:::1;;16252:96;16302:10;16314:3;16319:7;16328;16337:8;;16266:81;;;;;;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;16266:81:62;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;::::1;;::::0;::::1;::::0;;-1:-1:-1;;;;;16252:13:62;::::1;::::0;::::1;:96::i;490:144:65:-:0;613:4;595:16;588:30;490:144::o;640:121::-;739:5;721:16;714:31;640:121::o;1833:122:63:-;1111:7;1893:12;;;1667:18;;1888:60;;1909:39;:22;:39;;;:33;:39::i;5235:154:68:-;5306:27;:4;:25;:27::i;:::-;5356:10;;3290:37:95;3286:51;3339:45;3343:13;3339:45;;;;3283:102;5356:26:68;5343:39;;;-1:-1:-1;5235:154:68:o;9759:615:62:-;9943:4;8814:10;-1:-1:-1;;;;;8814:27:62;;;8810:59;;9987:1:::1;9963:6;:21;;;:25;:74;;;;-1:-1:-1::0;1528:7:62::1;16467:29:::0;;:34;;9992:45:::1;9959:409;;;10053:93;10110:10;10122:3;10127:6;10135:8;;10067:78;;;;;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;10067:78:62;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;::::1;;::::0;::::1;::::0;;-1:-1:-1;;;;;10053:13:62;::::1;::::0;::::1;:93::i;:::-;;9959:409;;;10192:1;10167:6;:21;;;:26;;:78;;;;-1:-1:-1::0;1665:6:62::1;16467:29:::0;;:34;;10197:48:::1;10163:205;;;10261:96;10321:10;10333:3;10338:6;10346:8;;10275:81;;;;;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;10275:81:62;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;::::1;;::::0;::::1;::::0;;-1:-1:-1;;;;;10261:13:62;::::1;::::0;::::1;:96::i;10163:205::-;9759:615:::0;;;;;;:::o;1460:151:71:-;1542:1;1558:6;;;;;;1554:50;;1566:38;:25;:36;:38::i;6410:4400:68:-;6607:21;;;;6656:16;;;;6700;;;;6526:18;;;;6607:21;;6726:32;6656:16;6700;6726:10;:32::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6888:14:68;:19;;6906:1;6888:19;6884:1188;;7002:50;7013:4;7019:9;7030:14;7046:5;7002:10;:50::i;:::-;6927:125;;6948:30;;;6927:125;;;;;7125:49;7136:4;7142:9;7153:14;7169:4;7125:10;:49::i;:::-;7070:104;;7091:30;;;7070:104;;;7071:18;;;7070:104;-1:-1:-1;7279:19:68;;;;;7275:508;;7385:18;;;;7322:27;;28220:1;28209:26;1032:7:76;28300:27:68;;;-1:-1:-1;;28267:27:68;;;;28263:69;1317:6:76;28360:27:68;;;;28420:21;28443:1;28416:29;28472:19;28468:34;7322:82;;7463:19;7430:52;;:5;:30;;;:52;;;7426:159;;;7510:52;:30;7552:9;7510:41;:52::i;:::-;7643:19;7610:52;;:5;:30;;;:52;;;7606:159;;;7690:52;:30;7732:9;7690:41;:52::i;:::-;7300:483;7275:508;7805:18;;7801:120;;;7883:18;;;;7847:55;;:15;;;;7872:9;;7847:24;:55::i;:::-;7942:5;:18;;;7938:120;;;8020:18;;;;7984:55;;:15;;;;8009:9;;7984:24;:55::i;:::-;8105:28;8135;8187:46;8206:4;8212:9;8223;8187:18;:46::i;:::-;8305:12;;8341:11;;;;2503:4:69;2497:11;;2537:4;2528:14;;2521:28;;;;8286:14:68;2585::69;;;2578:33;;;2656:4;2647:14;;2640:33;;;2702:18;;;2790:4;2783;2774:14;;2764:31;-1:-1:-1;2879:14:69;;;2872:25;;;-1:-1:-1;2939:14:69;;;2932:25;;;3014:14;;;;1763:17;;;8286:14:68;;;1763:17:69;;;;;8104:129:68;;-1:-1:-1;8104:129:68;;-1:-1:-1;;8432:75:68;1763:17:69;8448:14:68;8104:129;;8432:15;:75::i;:::-;8371:136;;;;8608:58;8623:20;:9;:18;:20::i;:::-;8645;:9;:18;:20::i;:::-;631:19:89;627:34;639:3;607:18;;;;604:58;;448:222;8608:58:68;8597:69;;8086:595;;;;;8776:1;8759:14;:18;;;8755:255;;;8801:18;;8797:91;;;29012:16;;;;;;;;:10;;;:16;;;;;29005:23;;;;;;;;;;;;;8843:26;8909:5;:18;;;8905:91;;;29012:16;;;;;;;;:10;;;:16;;;;;29005:23;;;;;;;;;;;;;8951:26;6769:2251;9034:14;:19;;9052:1;9034:19;9030:1774;;9084:10;;9069:12;;9146:13;9084:10;1748:11:95;1744:25;1741:1;1730:40;;1607:179;9146:13:68;-1:-1:-1;;;;;5144:41:91;;9108:75:68;;;;9208:9;9201:16;;:4;:16;;;9197:1597;;;9477:259;9513:182;:171;9568:38;9596:9;9568:27;:38::i;:::-;9608;9636:9;9608:27;:38::i;:::-;9648:14;9513:29;:171::i;:::-;:180;:182::i;:::-;639:3:89;607:18;;448:222;9477:259:68;9469:267;;9197:1597;;;9768:9;9761:16;;:4;:16;;;9757:1037;;;9805:346;9841:135;:99;9871:12;9885:38;9913:9;9885:27;:38::i;9841:135::-;9998;:99;10028:38;10056:9;10028:27;:38::i;:::-;10068:12;10082:14;9998:29;:99::i;9805:346::-;10210:14;;;;9797:354;;-1:-1:-1;10187:54:68;;10210:14;;10226;10187:22;:54::i;:::-;10170:14;;;:71;;;;;;;;;;;;;;;9757:1037;;;10520:259;10556:1;10579:182;:171;10634:38;10662:9;10634:27;:38::i;:::-;10674;10702:9;10674:27;:38::i;:::-;10714:14;10579:29;:171::i;10520:259::-;10512:267;;9757:1037;9055:1749;;;9030:1774;6573:4237;;;6410:4400;;;;;:::o;672:396:89:-;731:12;834:3;896:11;;;830;;;;960;871:2;926:17;;;860;;;;988:11;1017:48;1032:15;960:11;1032:13;:15::i;:::-;1049;:4;:13;:15::i;1017:48::-;1010:55;672:396;-1:-1:-1;;;;;672:396:89:o;10471:1558:62:-;10714:24;;-1:-1:-1;;;;;10778:27:62;;:10;:27;10774:79;;-1:-1:-1;10815:5:62;;-1:-1:-1;1949:1:89;10807:46:62;;10774:79;10878:5;10864:19;;10921:1;10897:6;:21;;;:25;10893:1130;;;1594:7;16467:29;;:34;10938:518;;11057:311;11182:10;11194:3;11199:6;11207:5;11214:11;11227:8;;11111:151;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;11111:151:62;;;;;;;;;;;;;;;;;;;;2186:6;16467:29;;:34;;11288:58;-1:-1:-1;;;;;11057:28:62;;;:311;:28;:311::i;:::-;11006:380;;11418:23;:11;11432:9;11418:23;:::i;:::-;11404:37;;10938:518;10893:1130;;;1733:6;16467:29;;:34;11486:527;;11608:317;11736:10;11748:3;11753:6;11761:5;11768:11;11781:8;;11662:154;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;11662:154:62;;;;;;;;;;;;;;;;;;;;2268:6;16467:29;;:34;;11842:61;16371:137;11608:317;11557:386;;11975:23;:11;11989:9;11975:23;:::i;:::-;11961:37;;11486:527;10471:1558;;;;;;;;;;:::o;1357:223:58:-;1480:8;1477:1;1470:19;1529:5;1526:1;1515:20;1509:4;1502:34;1559:4;1556:1;1549:15;2915:418;3064:4;3058:11;3094:8;3089:3;3082:21;-1:-1:-1;;;;;3143:6:58;3139:55;3132:4;3127:3;3123:14;3116:79;-1:-1:-1;;;;;3235:6:58;3231:55;3224:4;3219:3;3215:14;3208:79;3312:4;3307:3;3300:17;5485:1119:62;5561:4;1791:6;16467:29;;:34;;;5703:91;;-1:-1:-1;2037:6:62;16467:29;;:34;;5744:50;5699:109;;;-1:-1:-1;5803:5:62;5796:12;;5699:109;1847:6;16467:29;;:34;;;5822:89;;-1:-1:-1;2107:6:62;16467:29;;:34;;5862:49;5818:107;;;-1:-1:-1;5920:5:62;5913:12;;5818:107;1594:7;16467:29;;:34;;;5939:107;;-1:-1:-1;2186:6:62;16467:29;;:34;;5988:58;5935:158;;;-1:-1:-1;6077:5:62;6070:12;;5935:158;1733:6;16467:29;;:34;;;6119:129;;-1:-1:-1;2268:6:62;16467:29;;:34;;6187:61;6102:169;;;-1:-1:-1;6266:5:62;6259:12;;6102:169;-1:-1:-1;;;;;6455:27:62;;;:142;;1325:13;6532:38;;:42;;;:64;;-1:-1:-1;552:8:63;6578:16:62;;;1379:24:63;6455:142:62;;6578:18;6455:142;;;-1:-1:-1;6498:16:62;;552:8:63;1379:24;6497:19:62;;6448:149;-1:-1:-1;5485:1119:62:o;1009:257:58:-;1133:8;1130:1;1123:19;-1:-1:-1;;;;;1172:4:58;1168:53;1162:4;1155:67;1245:4;1242:1;1235:15;2333:220:63;2394:6;552:8;2471:17;;;1379:24;2467:33;;-1:-1:-1;2499:1:63;;2333:220;-1:-1:-1;2333:220:63:o;2467:33::-;2510:15;:4;:13;;;:15::i;8968:283:62:-;9069:4;8814:10;-1:-1:-1;;;;;8814:27:62;;;8810:59;;1397:7:::1;16467:29:::0;;:34;9085:160:::1;;9147:87;9202:10;9214:3;9219:12;9161:72;;;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;9161:72:62;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;::::1;;::::0;::::1;::::0;;-1:-1:-1;;;;;9147:13:62;::::1;::::0;::::1;:87::i;4549:434:68:-:0;4669:10;;4643;;-1:-1:-1;;;;;5144:41:91;4669:30:68;4665:80;;4701:44;:31;:42;:44::i;:::-;4763:41;4791:12;4763:27;:41::i;:::-;4756:48;-1:-1:-1;3339:45:95;3343:13;3339:45;;;;-1:-1:-1;;;;;2429:33:95;;2686:11;2682:42;;;;;2628:97;3283:102;4881:95:68;;;-1:-1:-1;4549:434:68;;;-1:-1:-1;4549:434:68:o;9343:318:62:-;9471:4;8814:10;-1:-1:-1;;;;;8814:27:62;;;8810:59;;1460:7:::1;16467:29:::0;;:34;9491:164:::1;;9552:92;9606:10;9618:3;9623:12;9637:4;9566:77;;;;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;9566:77:62;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;::::1;;::::0;::::1;::::0;;-1:-1:-1;;;;;9552:13:62;::::1;::::0;::::1;:92::i;4989:178:68:-:0;5072:27;:4;:25;:27::i;:::-;5122:10;;2949:43:95;2945:57;3024;3028:19;3024:57;;;;2921:178;5122:38:68;2747:368:95;722:123:57;827:1;812:13;805:24;722:123::o;4351:276:91:-;4416:7;-1:-1:-1;;;;;4439:22:91;;4435:186;;-1:-1:-1;4486:21:91;;4351:276;-1:-1:-1;4351:276:91:o;4435:186::-;4545:65;;;;;4604:4;4545:65;;;12632:74:106;-1:-1:-1;;;;;4545:50:91;;;;;12605:18:106;;4545:65:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;851:265:57:-;-1:-1:-1;;;;;1002:8:57;998:57;983:13;976:80;1094:5;1076:16;1069:31;851:265;;:::o;12116:1967:62:-;12354:22;;;;12254:19;;-1:-1:-1;;;;;12390:27:62;;:10;:27;12386:104;;830:1:90;;-1:-1:-1;12419:71:62;;12386:104;1791:6;16467:29;;:34;12501:1576;;12557:19;12579:86;12588:4;12629:10;12641:3;12646:6;12654:8;;12594:70;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;12594:70:62;;;;;;;;;;;;;;;;;;;;12579:8;:86::i;:::-;12557:108;;12783:6;:13;12800:2;12783:19;12779:66;;12804:41;:28;:39;:41::i;:::-;13119:7;;;;:20;;552:8:63;1379:24;13115:61:62;;894:4:67;882:17;;876:24;13143:33:62;;13115:61;2037:6;16467:29;;:34;13262:805;;1175:4:67;1163:17;;1157:24;13336:60:62;;13505:25;13533:30;:10;2107:3:89;2103:22;;1958:183;13533:30:62;13505:58;;13725:18;:23;;13747:1;13725:23;13721:332;;13772:15;13790:16;;13828:34;;;;;13790:12;13828:34;:::i;:::-;;;13888:10;:48;;13935:1;13920:12;:16;13888:48;;;13916:1;13901:12;:16;13888:48;13884:151;;;13964:48;:35;:46;:48::i;:::-;13750:303;13721:332;13318:749;13262:805;12543:1534;12501:1576;12116:1967;;;;;;;;;:::o;11194:792:45:-;11334:12;;;;;11470:17;:4;11480:6;11470:9;:17::i;:::-;11362:125;;;;;;;;11565:1;11546:16;:20;11542:78;;;-1:-1:-1;;;;;2977:29:46;;;;;;:19;:29;;;;;:39;;;;;;11568:52:45;11769:10;11753:2;11735:221;11793:15;:5;2107:3:89;2103:22;;1958:183;11793:15:45;11822;:5;2303:2:89;2292:28;;2147:189;11822:15:45;11851:19;;11884:16;;;;;11914:11;;;;;11735:221;;25697:2:106;25686:22;;;25668:41;;25745:22;;;;25725:18;;;25718:50;-1:-1:-1;;;;;25804:55:106;;;25784:18;;;25777:83;25908:34;25896:47;25891:2;25876:18;;25869:75;25992:1;25981:21;;;;25975:3;25960:19;;25953:50;26052:8;26040:21;;26034:3;26019:19;;26012:50;25655:3;25640:19;11735:221:45;;;;;;;-1:-1:-1;11974:5:45;;11194:792;-1:-1:-1;;;;;;;11194:792:45:o;14169:1338:62:-;14406:12;;-1:-1:-1;;;;;14448:27:62;;:10;:27;14444:83;;-1:-1:-1;14485:9:62;;-1:-1:-1;1949:1:89;14477:50:62;;14444:83;14538:25;14566:40;:20;2107:3:89;2103:22;;1958:183;14566:40:62;14538:68;;14616:27;14646:42;:20;2303:2:89;2292:28;;2147:189;14646:42:62;14616:72;-1:-1:-1;1847:6:62;16467:29;;:34;14699:308;;14778:218;:207;14858:10;14870:3;14875:6;14883:9;14894:8;;14824:80;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;14824:80:62;;;;;;;;;;;;;;;;;;;;2107:6;16467:29;;:34;;-1:-1:-1;;;;;14778:28:62;;;:207;:28;:207::i;:218::-;14754:242;;;;:::i;:::-;;;14699:308;15017:22;15053:20;:25;;15077:1;15053:25;;:52;;;;15082:18;:23;;15104:1;15082:23;;15053:52;15049:413;;;15164:17;;15134:22;;;;15164:17;-1:-1:-1;15134:47:62;;;;15133:199;;631:19:89;627:34;;639:3;607:18;;;604:58;15133:199:62;;;631:19:89;627:34;;639:3;607:18;;;604:58;15201:56:62;15121:211;;15430:21;:9;15442;15430:21;:::i;:::-;15418:33;;15049:413;15479:9;;15490;;-1:-1:-1;14169:1338:62;;-1:-1:-1;;;;;;;;;14169:1338:62:o;530:425:41:-;627:10;-1:-1:-1;;;;;651:14:41;;;;;;;:43;;-1:-1:-1;;;;;;670:16:41;;;;;;;:10;:16;;;;;;;;:24;;;;;;;;;;;;669:25;651:43;647:269;;;-1:-1:-1;;;;;736:15:41;;;710:23;736:15;;;:9;:15;;;;;;;;:23;;;;;;;;;;;:27;;;;;;;800:17;781:36;;777:129;;867:24;885:6;867:15;:24;:::i;:::-;-1:-1:-1;;;;;837:15:41;;;;;;;:9;:15;;;;;;;;:23;;;;;;;;;;;:27;;;;;;:54;777:129;696:220;647:269;925:23;931:4;937:2;941:6;925:5;:23::i;1201:402:56:-;-1:-1:-1;;;;;596:55:56;;;1304:15;586:66;;;676:57;;;672:2;665:69;772:2;759:16;;1459:15;;;1304;1500:16;;;;;1459:15;1500:16;:::i;:::-;1493:23;;1582:4;1572:8;1565:22;1551:46;1201:402;;;;;;:::o;1231:226:66:-;1329:24;1323:31;1387:1;1380:5;1376:13;1367:22;;1435:5;1409:24;1402:39;;1231:226::o;723:::-;821:24;815:31;879:1;872:5;868:13;859:22;;927:5;901:24;894:39;;723:226::o;3508:1663:58:-;3953:4;3947:11;3710:21;4094:33;;;-1:-1:-1;;;;;4163:66:58;;4156:4;4147:14;;4140:90;4330:66;4299:98;;4276:4;4267:14;;4243:168;4483:4;4476;4467:14;;4460:28;3919:2;3909;3891:16;3887:25;3883:34;;;3879:43;4569:4;4565:26;;4558:4;4549:14;;4542:50;4662:16;4655:4;4646:14;;4639:40;3710:21;;4755:16;-1:-1:-1;4745:4:58;4736:14;;4721:51;4869:4;4850:15;4844:4;4840:26;4835:3;4831:36;4824:50;5022:66;5003:17;4999:90;4964:15;4958:4;4954:26;4949:3;4945:36;4921:182;5138:15;5132:4;5128:26;5123:3;5116:39;6780:1276:62;6848:19;6879:12;7005:1;7002;6995:4;6989:11;6982:4;6976;6972:15;6969:1;6963:4;6956:5;6951:56;6940:67;;7112:7;7107:102;;7121:88;7164:4;7171:12;7178:4;7171:12;:::i;:::-;7185:23;7121:34;:88::i;:::-;7406:4;7400:11;7390:21;;7574:4;7570:9;7563:4;7545:16;7541:27;7537:43;7529:6;7525:56;7519:4;7512:70;7648:16;7640:6;7633:32;7757:16;7754:1;7747:4;7739:6;7735:17;7720:54;7930:2;7914:6;:13;:18;:68;;;-1:-1:-1;632:4:67;620:17;;614:24;7936:46:62;;:22;:6;632:4:67;620:17;614:24;;394:260;7936:22:62;:46;;;;7914:68;7910:140;;;7998:41;:28;:39;:41::i;:::-;6869:1187;6780:1276;;;;:::o;4182:361:68:-;4276:9;4263:22;;:9;:22;;;4259:85;;4287:57;:24;4323:9;4334;4287:35;:57::i;:::-;1032:7:76;4358:29:68;;;;;4354:86;;;4389:51;:29;4430:9;4389:40;:51::i;:::-;1317:6:76;4454:29:68;;;;;4450:86;;;4485:51;:29;4526:9;4485:40;:51::i;25241:1930::-;25443:16;;;;25362:12;25443:16;;;:10;;;:16;;;;;25501:19;;25362:12;;25443:16;25501:19;;;;25558:17;;;;;25608:60;25501:19;25653:14;25608:22;:60::i;:::-;25720:25;25690:24;;;;25720:25;;;;;25689:57;;;;;;-1:-1:-1;25586:82:68;;-1:-1:-1;25744:1:68;25761:25;25757:357;;25926:10;;1748:11:95;1744:25;1741:1;1730:40;25918:25:68;;:4;:25;;;25914:190;;25992:25;;;;;25963:26;;;:54;26064:25;;;;;26035:26;;;:54;25914:190;26322:19;26344:5;:81;;26390:35;26411:14;26390:18;:35;:::i;:::-;26344:81;;;26352:35;26373:14;26352:18;:35;:::i;:::-;26322:103;;27110:12;27105:3;27101:22;26923:34;26902:19;26898:60;26780:361;26678:9;26654:501;26460:705;;;;25241:1930;;;;;;;:::o;2108:1410:75:-;2567:1;2556:19;;;;2603:26;2691:23;;;2688:307;;;2750:4;2744:11;2784:10;2779:3;2772:23;2879:4;2872;2867:3;2863:14;2856:28;2924:11;2917:4;2912:3;2908:14;2901:35;2976:4;2969;2964:3;2960:14;2953:28;2688:307;3027:11;3021:4;3016:23;3008:31;;3172:4;3169:1;3165:12;3162:1;3155:23;3204:9;3198:4;3191:23;3338:4;3335:1;3325:18;3498:1;3491:4;3485;3481:15;3477:23;3470:4;3464:11;3460:41;3454:4;3447:55;;2108:1410;;;:::o;23300:1203:68:-;23528:21;;;;23429:28;23528:21;;;:10;;;:21;;;;;;23584;;;;;;;;23635:10;;23429:28;;;;23528:21;;23584;;1748:11:95;1744:25;;;;1730:40;;;23691:23:68;;23687:800;;;23787:5;:27;;;23757:5;:27;;;:57;23734:80;;23885:5;:27;;;23855:5;:27;;;:57;23832:80;;23687:800;;;23952:9;23937:24;;:11;:24;;;23933:554;;24034:5;:27;;;24004:5;:27;;;:57;23981:80;;24132:5;:27;;;24102:5;:27;;;:57;24079:80;;23933:554;;;24299:5;:27;;;24269:5;:27;;;24241:4;:25;;;:55;:85;24198:128;;24445:5;:27;;;24415:5;:27;;;24387:4;:25;;;:55;:85;24344:128;;23933:554;23493:1010;;;23300:1203;;;;;;:::o;3702:1108:69:-;3945:14;;3877:17;;;;3945:14;;3974:19;;;;;;3970:270;;4069:9;:14;;4082:1;4069:14;4065:67;;4085:47;:34;:45;:47::i;:::-;3970:270;;;4180:49;4203:9;4214:14;4180:22;:49::i;:::-;4163:66;;;;;;;;;;;;3970:270;4395:100;4434:4;:29;;;4411:20;:52;4465:9;4395:100;;258:35:59;4395:15:69;:100::i;:::-;4367:128;;4537:100;4576:4;:29;;;4553:20;:52;4607:9;4537:100;;258:35:59;4537:15:69;:100::i;:::-;4689:29;;;:52;;;;-1:-1:-1;;4751:29:69;;;;:52;3702:1108;;;-1:-1:-1;3702:1108:69:o;3149:4018:76:-;3359:1;3348:19;3212:20;3458:3;3454:14;;;3726:15;;;3716:26;1317:6;3774:35;;3770:78;;;3811:37;:20;3843:4;3811:31;:37::i;:::-;4456:52;4523:3;4510:17;;4452:76;4460:11;4435:94;4570:3;4560:13;;:18;4556:83;;4597:34;4589:42;4636:3;4588:51;4556:83;4667:3;4657:13;;:18;4653:83;;4694:34;4686:42;4733:3;4685:51;4653:83;4764:3;4754:13;;:18;4750:83;;4791:34;4783:42;4830:3;4782:51;4750:83;4861:4;4851:14;;:19;4847:84;;4889:34;4881:42;4928:3;4880:51;4847:84;4959:4;4949:14;;:19;4945:84;;4987:34;4979:42;5026:3;4978:51;4945:84;5057:4;5047:14;;:19;5043:84;;5085:34;5077:42;5124:3;5076:51;5043:84;5155:4;5145:14;;:19;5141:84;;5183:34;5175:42;5222:3;5174:51;5141:84;5253:5;5243:15;;:20;5239:85;;5282:34;5274:42;5321:3;5273:51;5239:85;5352:5;5342:15;;:20;5338:85;;5381:34;5373:42;5420:3;5372:51;5338:85;5451:5;5441:15;;:20;5437:85;;5480:34;5472:42;5519:3;5471:51;5437:85;5550:5;5540:15;;:20;5536:85;;5579:34;5571:42;5618:3;5570:51;5536:85;5649:6;5639:16;;:21;5635:86;;5679:34;5671:42;5718:3;5670:51;5635:86;5749:6;5739:16;;:21;5735:86;;5779:34;5771:42;5818:3;5770:51;5735:86;5849:6;5839:16;;:21;5835:86;;5879:34;5871:42;5918:3;5870:51;5835:86;5949:6;5939:16;;:21;5935:86;;5979:34;5971:42;6018:3;5970:51;5935:86;6049:7;6039:17;;:22;6035:86;;6080:33;6072:41;6118:3;6071:50;6035:86;6149:7;6139:17;;:22;6135:85;;6180:32;6172:40;6217:3;6171:49;6135:85;6248:7;6238:17;;:22;6234:83;;6279:30;6271:38;6314:3;6270:47;6234:83;6345:7;6335:17;;:22;6331:78;;6376:25;6368:33;6406:3;6367:42;6331:78;6548:1;6542:4;6538:12;6535:47;;;6566:6;6562:18;6535:47;7117:18;7106:30;7125:2;7098:39;;3149:4018;-1:-1:-1;;;3149:4018:76:o;12876:424:72:-;13012:6;13077:1;13065:9;:13;;;:218;;13201:82;:71;13217:13;13232;13255:9;13267:4;13201:15;:71::i;:::-;:80;:82::i;:::-;13200:83;;13065:218;;;13097:84;:73;13113:13;13128;13152:9;13151:10;;13164:5;13097:15;:73::i;13649:424::-;13785:6;13850:1;13838:9;:13;;;:218;;13974:82;:71;13990:13;14005;14028:9;14040:4;13974:15;:71::i;13838:218::-;13870:84;:73;13886:13;13901;13925:9;13924:10;;13937:5;13870:15;:73::i;369:370:64:-;507:34;500:42;;555:2;544:17;;;496:66;582:3;578:11;;;575:148;;;663:10;660:1;653:21;704:4;698;691:18;8196:485:62;8297:6;8315:19;8337:20;8346:4;8352;8337:8;:20::i;:::-;8315:42;;8450:11;8445:26;;8470:1;8463:8;;;;;8445:26;8570:6;:13;8587:2;8570:19;8566:66;;8591:41;:28;:39;:41::i;:::-;1175:4:67;1163:17;1157:24;;8642:32:62;-1:-1:-1;;;;8196:485:62:o;1070:396:89:-;1129:12;1232:3;1294:11;;;1228;;;;1358;1269:2;1324:17;;;1258;;;;1386:11;1415:48;1430:15;1358:11;1430:13;:15::i;7627:4752:76:-;7700:10;2282:66;8183:29;;;-1:-1:-1;;;;;8182:79:76;;8178:168;;;8281:50;:25;8318:12;8281:36;:50::i;:::-;8376:27;8401:2;8376:27;;;;;8360:13;8463:29;8376:27;8463:26;:29::i;:::-;8449:43;;;;8518:3;8511;:10;8507:83;;8543:3;8537;:9;8527:5;:20;;8523:24;;8507:83;;;8586:3;8580;:9;8570:5;:20;;8566:24;;8507:83;8717:9;;;8712:3;8708:19;;;8753:11;;;;8833:9;;;;8926;;8917:19;;;8962:11;;;9042:9;9135;;9126:19;;;9171:11;;;9251:9;9344;;9335:19;;;9380:11;;;9460:9;9553;;9544:19;;;9589:11;;;9669:9;9762;;9753:19;;;9798:11;;;9878:9;9971;;9962:19;;;10007:11;;;10087:9;10180;;10171:19;;;10216:11;;;10296:9;10389;;10380:19;;;10425:11;;;10505:9;10598;;10589:19;;;10634:11;;;10714:9;10807;;10798:19;;;10843:11;;;10923:9;11016;;11007:19;;;11052:11;;;11132:9;11225;;11216:19;;;11261:11;;;;11341:9;;;;11434;;11425:19;;;;;8717:9;8621:17;;;8643:2;8620:25;8800:10;;;;;;;8790:21;9009:10;;;;;;;8999:21;;;;9218:10;;;;;;;9208:21;;;;9427:10;;;;;;;9417:21;;;;9636:10;;;;;;;9626:21;;;;9845:10;;;;;;;9835:21;;;;10054:10;;;;;;;10044:21;10263:10;;;;;;;10253:21;10472:10;;;;;;;10462:21;10681:10;;;;;;;10671:21;10890:10;;;;;;;10880:21;11099:10;;;;;;;11089:21;11308:10;;;;;;;11298:21;11517:10;;;;;;;11507:21;11587:24;11579:32;;11788:53;;;8635:3;11787:62;;;;12201:39;12185:55;;12184:64;;12271:17;;;;;;;;;:91;;12331:12;-1:-1:-1;;;;;12301:42:76;:26;12320:6;12301:18;:26::i;:::-;-1:-1:-1;;;;;12301:42:76;;;:61;;12355:7;12271:91;;12301:61;12346:6;12271:91;;;12291:7;12271:91;12264:98;7627:4752;-1:-1:-1;;;;;;;;;7627:4752:76:o;12231:9620:68:-;-1:-1:-1;;;;;;;;12325:22:68;-1:-1:-1;;;;;;;;;;;;;;;12325:22:68;;;;12450:10;;12488:17;;;;12431:16;12488:17;12550:102;;863:10:70;;;;;;12550:102:68;;;750:5:70;1959:19:95;1955:33;;;743:12:70;12563:43:68;12814:22;;-1:-1:-1;;;;;5144:41:91;;13015:47:68;;12516:136;;;;;;-1:-1:-1;12780:31:68;1748:11:95;1744:25;;;1741:1;1730:40;13114:31:68;;:11;;;:31;13221:14;;;;;;13202:16;;;:33;13451:20;;;;-1:-1:-1;;819:8:63;2836:24;13451:141:68;;2160:13:95;2156:27;;;2142:12;2138:46;13451:141:68;;;13503:52;:6;:20;;;:50;;;:52::i;:::-;13436:156;-1:-1:-1;13617:16:68;;:70;;2076:16:70;1921:5;1911:16;;1960:8;1949:20;;1999:16;;;2061:32;;;;2043:16;;2039:55;13617:70:68;;;13636:5;13617:70;13607:80;;13422:276;563:3:74;13847:7:68;:32;;;13843:200;;13929:22;;13954:1;-1:-1:-1;13925:108:68;;;13975:43;:30;:41;:43::i;:::-;14251:22;;;:27;14247:92;;1949:1:89;14320::68;14280:59;;;;;;;;;;;14247:92;14354:10;14350:1021;;;14384:24;;;;-1:-1:-1;;;;;5144:41:91;;;14384:53:68;;;14380:190;;14457:98;-1:-1:-1;;;;;5144:41:91;;14503:25:68;14530:24;;;;14457:34;;:98;:45;:98::i;:::-;1862:10:76;-1:-1:-1;;;;;14818:51:68;:6;:24;;;-1:-1:-1;;;;;14818:51:68;;14814:157;;14931:24;;;;14889:67;;:30;;:41;:67::i;:::-;14350:1021;;;15005:24;;;;-1:-1:-1;;;;;5144:41:91;;;15005:53:68;;;15001:190;;15078:98;-1:-1:-1;;;;;5144:41:91;;15124:25:68;5069:123:91;15078:98:68;2042:49:76;-1:-1:-1;;;;;15208:51:68;:6;:24;;;-1:-1:-1;;;;;15208:51:68;;15204:157;;15321:24;;;;15279:67;;:30;;:41;:67::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15446:10:68;:66;;15487:4;:25;;;15446:66;;;15459:4;:25;;;15446:66;15419:24;;;:93;15639:5244;15648:29;;;:80;;;15704:6;:24;;;-1:-1:-1;;;;;15681:47:68;:6;:19;;;-1:-1:-1;;;;;15681:47:68;;15648:80;15639:5244;;15770:19;;-1:-1:-1;;;;;15745:44:68;;;15905:11;;;;;15918:18;;;;15856:93;;:15;;;;15938:10;15856:48;:93::i;:::-;15804:145;;15820:16;;;15804:145;;;15805:13;;;15804:145;;;1032:7:76;-1:-1:-1;16077:106:68;;1032:7:76;16135:13:68;;;:33;16077:106;1317:6:76;16200:34:68;;:4;:13;;;:34;;;16196:106;;1317:6:76;16254:13:68;;;:33;16196:106;16387:42;16415:4;:13;;;16387:27;:42::i;:::-;-1:-1:-1;;;;;16363:66:68;;;:21;;;;:66;;;16676:19;;16776:24;;;;16634:282;;16676:19;;1921:66:74;;2113:40;;;-1:-1:-1;;;2080:3:74;2064:20;;2019:66;2211:25;;;;2188:49;16819:6:68;:16;;;16853:24;16895:7;16634:24;:282::i;:::-;16616:14;;;16563:353;16600:14;;;16563:353;16585:13;;;16563:353;-1:-1:-1;;;;;16563:353:68;;;16965:22;;16564:19;-1:-1:-1;16961:568:68;;;17071:25;:4;:14;;;:23;:25::i;:::-;17043:53;;;;17152:43;17169:4;:14;;;17153:4;:13;;;:30;;;;:::i;17152:43::-;17132:63;;;;:::i;:::-;;;16961:568;;;17390:43;17407:4;:14;;;17391:4;:13;;;:30;17390:41;:43::i;:::-;17362:71;;;;17489:25;:4;:14;;;:23;:25::i;:::-;17469:45;;;;:::i;:::-;;;16961:568;17664:15;;17660:951;;18143:13;18171:11;18160:7;:22;;;18159:242;;633:9:70;18352:11:68;18334:4;:14;;;18318:4;:13;;;:30;18317:46;:84;;;;;:::i;:::-;;18159:242;;;18210:4;:14;;;18159:242;18508:14;;;:23;;;;;;;18553:25;;;;;-1:-1:-1;17660:951:68;18670:16;;;;:20;;;18666:382;;18938:77;18962:4;:14;;;258:35:59;18998:6:68;:16;;;18938:77;;1123:9:78;;1119:27;;956:206;18938:77:68;18886:24;;;:129;;;;;;;18666:382;19511:4;:21;;;-1:-1:-1;;;;;19488:44:68;:6;:19;;;-1:-1:-1;;;;;19488:44:68;;19484:1389;;19627:4;:16;;;19623:835;;;19668:28;19698;19730:10;:170;;19848:4;:25;;;19875:4;:24;;;19730:170;;;19768:4;:24;;;19794:4;:25;;;19730:170;19667:233;;;;19922:19;19968:79;19983:4;19989;:13;;;20004:20;20026;29769:16;;;;29686:19;29769:16;;;:10;;;;:16;;;;;;29851:26;;;;;29828:49;;;29799:78;;;29943:26;;;;;29920:49;;;29891:78;;;29998:17;;;;;;;29541:491;19968:79;19922:125;;20281:10;20277:44;;;20308:13;;20277:44;20385:54;20408:6;:16;;;20426:12;20385:22;:54::i;:::-;20366:73;;:16;;;:73;-1:-1:-1;;;19623:835:68;20522:10;:46;;20555:4;:13;;;20522:46;;;20551:1;20535:4;:13;;;:17;20522:46;20508:60;;:11;;;:60;15639:5244;;19484:1389;20634:22;;20611:19;;-1:-1:-1;;;;;20611:45:68;;;;;;20607:266;;20838:19;;20810:48;;:27;:48::i;20607:266::-;15639:5244;;;20954:19;;20925:11;;;;20906:68;;20954:19;20906:31;;:10;;2686:11:95;2682:42;;;2635:35;2631:49;;;;2628:97;;2485:256;20906:31:68;2399:18:95;2395:32;-1:-1:-1;;;;;2429:33:95;;;2392:71;;2231:248;20906:68:68;20893:81;;21049:16;;;;21031:14;;;;:34;:14;;;:34;;;21027:73;;21084:16;;;;21067:14;;;:33;;;;;;;;;;;;;;21027:73;21152:10;21147:177;;21206:24;;;;21178:25;;;:52;21147:177;;;21289:24;;;;21261:25;;;:52;21147:177;21420:22;;21445:1;-1:-1:-1;21405:42:68;;;;21401:434;;21479:145;21515:27;:16;:25;:27::i;:::-;21544:62;21570:24;21545:6;:22;;;:49;21544:60;:62::i;21479:145::-;21467:157;;21401:434;;;21675:145;21711:62;21737:24;21712:6;:22;;;:49;21711:60;:62::i;:::-;21775:27;:16;:25;:27::i;21675:145::-;21663:157;;21401:434;12421:9430;;;;;;12231:9620;;;;;;;;:::o;3302:192:40:-;-1:-1:-1;;;;;3388:17:40;;;;;;:9;:17;;;;;;;;:21;;;;;;;;:31;;3413:6;;3388:17;:31;;3413:6;;3388:31;:::i;:::-;;;;-1:-1:-1;;3435:52:40;;;3444:10;16544:74:106;;16649:2;16634:18;;16627:34;;;3476:2:40;;3472:1;;-1:-1:-1;;;;;3435:52:40;;;;;16517:18:106;3435:52:40;16370:297:106;2003:346:58;2148:4;2142:11;2178:8;2173:3;2166:21;2237:6;2234:1;2223:21;2216:4;2211:3;2207:14;2200:45;2295:6;2292:1;2281:21;2274:4;2269:3;2265:14;2258:45;2328:4;2323:3;2316:17;741:4141:61;823:14;1212:5;;;823:14;1413:6;1216:1;1212;1400:20;1473:5;1469:2;1466:13;1458:5;1454:2;1450:14;1446:34;1437:43;;;1633:5;1619:11;:19;1611:28;;;;;;1720:5;1729:1;1720:10;1716:177;;-1:-1:-1;1807:23:61;;;;-1:-1:-1;1865:13:61;;1716:177;2193:17;2293:11;2290:1;2287;2280:25;2701:12;2717:15;;;2716:31;;2869:22;;;;;3776:1;3757;:15;;3756:21;;4019:17;;;4015:21;;4008:28;4081:17;;;4077:21;;4070:28;4144:17;;;4140:21;;4133:28;4207:17;;;4203:21;;4196:28;4270:17;;;4266:21;;4259:28;4334:17;;;4330:21;;;4323:28;3313:12;;;;3309:23;;;3334:1;3305:31;2454:20;;;2443:32;;;3372:12;;;;2501:21;;;;3029:16;;;;3363:21;;;;4827:11;;;;;-1:-1:-1;;741:4141:61;;;;;:::o;9398:1050:72:-;9549:7;9616:13;-1:-1:-1;;;;;9600:29:72;:13;-1:-1:-1;;;;;9600:29:72;;9596:98;;;9665:13;;9680;9596:98;-1:-1:-1;;;;;9840:13:72;9836:62;9826:205;;9932:10;9929:1;9922:21;10008:4;10002;9995:18;9826:205;10080:45;295:2:60;10080:45:72;;;;-1:-1:-1;;;;;10160:29:72;;;10139:50;10211:7;:220;;10418:13;-1:-1:-1;;;;;10361:70:72;:54;10377:10;10389;10401:13;-1:-1:-1;;;;;10361:54:72;:15;:54::i;:::-;:70;;;;;:::i;:::-;;10211:220;;;10237:105;10262:64;10288:10;10300;10312:13;-1:-1:-1;;;;;10262:64:72;:25;:64::i;:::-;10328:13;-1:-1:-1;;;;;10237:105:72;606:9:78;;;620;;617:16;;602:32;;469:181;10237:105:72;10204:227;9398:1050;-1:-1:-1;;;;;;;9398:1050:72:o;1776:151:71:-;1859:1;1828:8;1875:5;;1871:49;;;1882:38;:25;:36;:38::i;11589:938:72:-;11740:15;-1:-1:-1;;;;;10718:50:72;;;10666;;;10662:107;10849:3;10845:14;;;11099:15;;;11089:26;335:27:60;11907:18:72;;;12323:51;11907:18;11089:26;335:27:60;12323:15:72;:51::i;:::-;12313:61;;12502:7;12498:1;12484:11;12473:9;12461:10;12454:42;12451:49;12447:63;12438:7;12434:77;12423:88;;12409:112;;;11589:938;;;;;;:::o;653:664:55:-;715:7;746:1;742;:5;734:14;;;;;;-1:-1:-1;1233:66:55;1158:4;1179:34;813;810:41;-1:-1:-1;807:1:55;803:49;906:9;;;886:18;883:33;880:1;876:41;870:48;964:9;;;952:10;949:25;946:1;942:33;936:40;1018:9;;;1010:6;1007:21;1004:1;1000:29;994:36;1070:9;;;1064:4;1061:19;1058:1;1054:27;1048:34;1168:9;;;1164:50;1154:61;1149:151;1143:158;;653:664::o;3434:159:63:-;975:8;3147:27;;3572:14;3147:27;3572:12;:14::i;4256:2007:75:-;4440:10;;904:1;940:26;;;893:19;;;;1187:23;;;-1:-1:-1;;1034:23:75;;;1009:223;4565:1682;;;;1789:1;1778:19;;;1775:1;1771:27;4839:13;;;;4593;4839;;;;;;;;;;;4748:17;1831:4;1821:15;;;4770:33;;;;4748:56;;;;4839:20;;;5014:11;;;;-1:-1:-1;1821:15:75;;4748:56;5014:11;5164:194;;5347:11;5335:6;5328:14;;5309:10;:34;5308:50;5164:194;;;5274:11;5234:34;5261:6;5234:26;:34::i;:::-;5225:6;:43;5218:51;;5199:10;:71;5198:87;5164:194;5157:201;;4574:799;;;;4565:1682;;;5539:12;;;;1789:1;1778:19;;;1775:1;1771:27;5702:13;;;5499;5702;;;;;;;;;;;5649:17;1831:4;1821:15;;5650:11;;;5649:17;5647:20;5702;;;5869:11;;;;-1:-1:-1;5539:12:75;;1771:27;;5869:11;6019:213;;6221:11;6209:6;6191:15;:24;6184:32;;6165:10;:52;6164:68;6019:213;;;6130:11;6118:6;6080:35;6108:6;6080:27;:35::i;:::-;:44;6073:52;;6054:10;:72;6053:88;6019:213;6012:220;;5379:868;;;;4565:1682;4480:1777;4256:2007;;;;;;;:::o;3514:3451:74:-;3724:24;;;;3840:26;;;-1:-1:-1;;;;;3923:41:74;;;;;;;;3993:19;;;4027:2922;;;;4058:30;4111:81;4136:15;4135:16;;4169:8;563:3;4154:23;563:3;4111:15;:81::i;:::-;4058:134;;4221:10;:230;;4364:87;4394:19;4415:18;4435:9;4446:4;4364:29;:87::i;:::-;4221:230;;;4254:87;4284:18;4304:19;4325:9;4336:4;4254:29;:87::i;:::-;4210:241;;4499:8;4473:22;:34;4469:969;;4614:18;4595:37;;563:3;4666:8;:24;:256;;4852:70;4878:8;4888;4913;563:3;4898:23;4852:25;:70::i;:::-;4666:256;;;4717:8;4666:256;4654:268;;4469:969;;;5032:22;5021:33;;5095:153;5160:19;5181:9;5192:22;5216:10;5095:39;:153::i;:::-;5076:172;;5411:8;5392:15;5391:16;;5383:36;5371:48;;4469:969;5467:10;:228;;5609:86;5639:19;5660:16;5678:9;5689:5;5609:29;:86::i;:::-;5467:228;;;5500:86;5530:16;5548:19;5569:9;5580:5;5500:29;:86::i;:::-;5455:240;;4040:1670;4027:2922;;;5746:10;:232;;5890:88;5920:19;5941:18;5961:9;5972:5;5890:29;:88::i;:::-;5746:232;;;5779:88;5809:18;5829:19;5850:9;5861:5;5779:29;:88::i;:::-;5734:244;;6028:9;6008:15;6000:37;5996:516;;6145:18;6126:37;;5996:516;;;6317:15;6297:36;;6398:95;6439:19;6460:9;6471;6482:10;6398:40;:95::i;:::-;6355:138;;5996:516;6540:10;:226;;6681:85;6711:19;6732:16;6750:9;6761:4;6681:29;:85::i;:::-;6540:226;;;6573:85;6603:16;6621:19;6642:9;6653:4;6573:29;:85::i;:::-;6529:237;;6864:70;6890:8;6900;6925;563:3;6910:23;6864:25;:70::i;:::-;6852:82;;4027:2922;3816:3143;;;3514:3451;;;;;;;;;;:::o;5164:296:61:-;5256:14;5315:25;5322:1;5325;5328:11;5315:6;:25::i;:::-;5306:34;;5371:11;5358:25;;;;;:::i;:::-;5368:1;5365;5358:25;:30;5354:90;;5416:8;;:12;5408:21;;;;;1659:947:55;1722:7;1753:1;1749;:5;1741:14;;;;;;-1:-1:-1;2522:66:55;1871:1;1867:9;;;1860:17;;;2105:215;2251:66;2125:108;2164:66;2141:90;;2125:108;;;2121:197;2105:215;;;2487:9;;;2475:10;2471:26;2499:4;2467:37;2462:127;;;;2456:134;;1659:947::o;6460:909:72:-;6614:7;6898:34;6887:9;6883:50;6876:58;-1:-1:-1;;;;;6804:8:72;6800:57;6793:65;6773:175;6770:309;;;6977:10;6974:1;6967:21;7060:4;7054;7047:18;6770:309;7172:10;:190;;7286:76;7326:8;7336:9;7347:8;7357:4;7286:39;:76::i;:::-;7172:190;;;7197:74;7235:8;7245:9;7256:8;7266:4;7197:37;:74::i;7938:909::-;8094:7;8378:34;8367:9;8363:50;8356:58;-1:-1:-1;;;;;8284:8:72;8280:57;8273:65;8253:175;8250:309;;;8457:10;8454:1;8447:21;8540:4;8534;8527:18;8250:309;8646:10;:194;;8764:76;8802:8;8812:9;8823;8834:5;8764:37;:76::i;8646:194::-;8671:78;8711:8;8721:9;8732;8743:5;4438:1450;4597:7;4778:3;4774:1108;;;4797:16;-1:-1:-1;;;;;4834:27:72;;;:172;;4954:52;4970:6;335:27:60;4996:9:72;4954:52;;:15;:52::i;:::-;4834:172;;;4884:47;;;;295:2:60;4885:33:72;;;4884:47;:::i;:::-;4797:223;-1:-1:-1;5042:42:72;5043:28;4797:223;-1:-1:-1;;;;;5043:17:72;;:28;:::i;:::-;5042:40;:42::i;:::-;5035:49;;;;;4774:1108;5115:16;-1:-1:-1;;;;;5152:27:72;;;:205;;5295:62;5321:6;335:27:60;5347:9:72;5295:62;;:25;:62::i;:::-;5152:205;;;5202:70;295:2:60;5227:33:72;;;5202:70;;;606:9:78;;;620;;617:16;;602:32;;469:181;5202:70:72;5115:256;;5583:8;-1:-1:-1;;;;;5528:8:72;5524:57;5521:71;5511:220;;5626:10;5623:1;5616:21;5708:4;5702;5695:18;5511:220;-1:-1:-1;;;;;5837:19:72;;;;-1:-1:-1;5822:35:72;;1535:2065;1692:7;1831:6;1841:1;1831:11;1827:32;;-1:-1:-1;1851:8:72;1844:15;;1827:32;1890:45;295:2:60;1890:45:72;;;;1946:1648;;;;-1:-1:-1;;;;;2015:17:72;;;;;;:6;:17;:6;2054:16;;;;:::i;:::-;;:28;2050:345;;2128:20;;;2174:25;;;2170:207;;2293:60;2319:10;2331:8;-1:-1:-1;;;;;2293:60:72;2341:11;2293:25;:60::i;:::-;2278:76;;;;;;;2170:207;2084:311;2050:345;-1:-1:-1;2488:70:72;2513:10;2551:6;2526:21;-1:-1:-1;;;;;2526:21:72;;2513:10;2526:21;:::i;:::-;2525:32;;;;:::i;:::-;606:9:78;;;620;;617:16;;602:32;;469:181;1946:1648:72;-1:-1:-1;;;;;2636:17:72;;;;;;3069:20;;;3066:83;3179:23;;;3033:195;2998:397;;3287:10;3284:1;3277:21;3368:4;3362;3355:18;2998:397;3452:20;;;3497:72;:60;3452:10;-1:-1:-1;;;;;3497:60:72;;3452:20;3497:25;:60::i;460:155:71:-;546:1;-1:-1:-1;;;;;562:6:71;;;;558:50;;570:38;:25;:36;:38::i;14:154:106:-;-1:-1:-1;;;;;93:5:106;89:54;82:5;79:65;69:93;;158:1;155;148:12;173:367;241:6;249;302:2;290:9;281:7;277:23;273:32;270:52;;;318:1;315;308:12;270:52;357:9;344:23;376:31;401:5;376:31;:::i;:::-;426:5;504:2;489:18;;;;476:32;;-1:-1:-1;;;173:367:106:o;727:332::-;785:6;838:2;826:9;817:7;813:23;809:32;806:52;;;854:1;851;844:12;806:52;893:9;880:23;943:66;936:5;932:78;925:5;922:89;912:117;;1025:1;1022;1015:12;1256:487;1333:6;1341;1349;1402:2;1390:9;1381:7;1377:23;1373:32;1370:52;;;1418:1;1415;1408:12;1370:52;1457:9;1444:23;1476:31;1501:5;1476:31;:::i;:::-;1526:5;1604:2;1589:18;;1576:32;;-1:-1:-1;1707:2:106;1692:18;;;1679:32;;1256:487;-1:-1:-1;;;1256:487:106:o;1748:538::-;1855:6;1863;1871;1924:2;1912:9;1903:7;1899:23;1895:32;1892:52;;;1940:1;1937;1930:12;1892:52;1979:9;1966:23;1998:31;2023:5;1998:31;:::i;:::-;2048:5;-1:-1:-1;2105:2:106;2090:18;;2077:32;2118:33;2077:32;2118:33;:::i;:::-;1748:538;;2170:7;;-1:-1:-1;;;2250:2:106;2235:18;;;;2222:32;;1748:538::o;2291:226::-;2350:6;2403:2;2391:9;2382:7;2378:23;2374:32;2371:52;;;2419:1;2416;2409:12;2371:52;-1:-1:-1;2464:23:106;;2291:226;-1:-1:-1;2291:226:106:o;2704:184::-;2756:77;2753:1;2746:88;2853:4;2850:1;2843:15;2877:4;2874:1;2867:15;2893:253;2965:2;2959:9;3007:4;2995:17;;3042:18;3027:34;;3063:22;;;3024:62;3021:88;;;3089:18;;:::i;:::-;3125:2;3118:22;2893:253;:::o;3151:334::-;3222:2;3216:9;3278:2;3268:13;;-1:-1:-1;;3264:86:106;3252:99;;3381:18;3366:34;;3402:22;;;3363:62;3360:88;;;3428:18;;:::i;:::-;3464:2;3457:22;3151:334;;-1:-1:-1;3151:334:106:o;3490:161::-;3557:20;;3617:8;3606:20;;3596:31;;3586:59;;3641:1;3638;3631:12;3656:160;3722:20;;3782:1;3771:20;;;3761:31;;3751:59;;3806:1;3803;3796:12;3821:920;3875:5;3923:4;3911:9;3906:3;3902:19;3898:30;3895:50;;;3941:1;3938;3931:12;3895:50;3994:2;3988:9;4036:4;4024:17;;4071:18;4056:34;;4092:22;;;4053:62;4050:88;;;4118:18;;:::i;:::-;4154:2;4147:22;4187:6;-1:-1:-1;4187:6:106;4217:23;;4249:33;4217:23;4249:33;:::i;:::-;4291:23;;4366:2;4351:18;;4338:32;4379:33;4338:32;4379:33;:::i;:::-;4440:2;4428:15;;4421:32;4486:37;4519:2;4504:18;;4486:37;:::i;:::-;4481:2;4473:6;4469:15;4462:62;4557:36;4589:2;4578:9;4574:18;4557:36;:::i;:::-;4552:2;4544:6;4540:15;4533:61;4646:3;4635:9;4631:19;4618:33;4660;4685:7;4660:33;:::i;:::-;4721:3;4709:16;;;;4702:33;3821:920;;-1:-1:-1;;3821:920:106:o;4746:347::-;4797:8;4807:6;4861:3;4854:4;4846:6;4842:17;4838:27;4828:55;;4879:1;4876;4869:12;4828:55;-1:-1:-1;4902:20:106;;4945:18;4934:30;;4931:50;;;4977:1;4974;4967:12;4931:50;5014:4;5006:6;5002:17;4990:29;;5066:3;5059:4;5050:6;5042;5038:19;5034:30;5031:39;5028:59;;;5083:1;5080;5073:12;5028:59;4746:347;;;;;:::o;5098:763::-;5221:6;5229;5237;5245;5253;5306:3;5294:9;5285:7;5281:23;5277:33;5274:53;;;5323:1;5320;5313:12;5274:53;5346:45;5383:7;5372:9;5346:45;:::i;:::-;5336:55;-1:-1:-1;5460:3:106;5445:19;;5432:33;;-1:-1:-1;5562:3:106;5547:19;;5534:33;;-1:-1:-1;5644:3:106;5629:19;;5616:33;5672:18;5661:30;;5658:50;;;5704:1;5701;5694:12;5658:50;5743:58;5793:7;5784:6;5773:9;5769:22;5743:58;:::i;:::-;5098:763;;;;-1:-1:-1;5098:763:106;;-1:-1:-1;5820:8:106;;5717:84;5098:763;-1:-1:-1;;;5098:763:106:o;6081:247::-;6140:6;6193:2;6181:9;6172:7;6168:23;6164:32;6161:52;;;6209:1;6206;6199:12;6161:52;6248:9;6235:23;6267:31;6292:5;6267:31;:::i;6333:346::-;6401:6;6409;6462:2;6450:9;6441:7;6437:23;6433:32;6430:52;;;6478:1;6475;6468:12;6430:52;-1:-1:-1;;6523:23:106;;;6643:2;6628:18;;;6615:32;;-1:-1:-1;6333:346:106:o;6684:611::-;6874:2;6886:21;;;6956:13;;6859:18;;;6978:22;;;6826:4;;7057:15;;;7031:2;7016:18;;;6826:4;7100:169;7114:6;7111:1;7108:13;7100:169;;;7175:13;;7163:26;;7218:2;7244:15;;;;7209:12;;;;7136:1;7129:9;7100:169;;;-1:-1:-1;7286:3:106;;6684:611;-1:-1:-1;;;;;6684:611:106:o;7300:409::-;7370:6;7378;7431:2;7419:9;7410:7;7406:23;7402:32;7399:52;;;7447:1;7444;7437:12;7399:52;7487:9;7474:23;7520:18;7512:6;7509:30;7506:50;;;7552:1;7549;7542:12;7506:50;7591:58;7641:7;7632:6;7621:9;7617:22;7591:58;:::i;:::-;7668:8;;7565:84;;-1:-1:-1;7300:409:106;-1:-1:-1;;;;7300:409:106:o;7714:475::-;7861:2;7850:9;7843:21;7824:4;7893:6;7887:13;7936:6;7931:2;7920:9;7916:18;7909:34;7995:6;7990:2;7982:6;7978:15;7973:2;7962:9;7958:18;7952:50;8051:1;8046:2;8037:6;8026:9;8022:22;8018:31;8011:42;8180:2;-1:-1:-1;;8105:2:106;8097:6;8093:15;8089:88;8078:9;8074:104;8070:113;8062:121;;;7714:475;;;;:::o;8194:302::-;8287:6;8295;8348:3;8336:9;8327:7;8323:23;8319:33;8316:53;;;8365:1;8362;8355:12;8316:53;8388:45;8425:7;8414:9;8388:45;:::i;:::-;8378:55;;8452:38;8485:3;8474:9;8470:19;8452:38;:::i;:::-;8442:48;;8194:302;;;;;:::o;8501:160::-;8566:20;;8622:13;;8615:21;8605:32;;8595:60;;8651:1;8648;8641:12;8666:315;8731:6;8739;8792:2;8780:9;8771:7;8767:23;8763:32;8760:52;;;8808:1;8805;8798:12;8760:52;8847:9;8834:23;8866:31;8891:5;8866:31;:::i;:::-;8916:5;-1:-1:-1;8940:35:106;8971:2;8956:18;;8940:35;:::i;9499:1155::-;9653:6;9661;9669;9677;9721:9;9712:7;9708:23;9751:3;9747:2;9743:12;9740:32;;;9768:1;9765;9758:12;9740:32;9791:45;9828:7;9817:9;9791:45;:::i;:::-;9781:55;;9929:4;9860:66;9856:2;9852:75;9848:86;9845:106;;;9947:1;9944;9937:12;9845:106;;9973:22;;:::i;:::-;10018:37;10050:3;10039:9;10035:19;10018:37;:::i;:::-;10011:5;10004:52;10088:37;10120:3;10109:9;10105:19;10088:37;:::i;:::-;10083:2;10072:14;;10065:61;10199:3;10184:19;;10171:33;10231:2;10220:14;;10213:31;10317:3;10302:19;;10289:33;10349:2;10338:14;;10331:31;10076:5;-1:-1:-1;10437:3:106;10422:19;;10409:33;10465:18;10454:30;;10451:50;;;10497:1;10494;10487:12;10451:50;10536:58;10586:7;10577:6;10566:9;10562:22;10536:58;:::i;:::-;9499:1155;;;;-1:-1:-1;10613:8:106;-1:-1:-1;;;;9499:1155:106:o;10978:365::-;11072:6;11080;11133:3;11121:9;11112:7;11108:23;11104:33;11101:53;;;11150:1;11147;11140:12;11101:53;11173:45;11210:7;11199:9;11173:45;:::i;:::-;11163:55;;11268:3;11257:9;11253:19;11240:33;11282:31;11307:5;11282:31;:::i;:::-;11332:5;11322:15;;;10978:365;;;;;:::o;12999:610::-;13085:6;13093;13146:2;13134:9;13125:7;13121:23;13117:32;13114:52;;;13162:1;13159;13152:12;13114:52;13202:9;13189:23;13235:18;13227:6;13224:30;13221:50;;;13267:1;13264;13257:12;13221:50;13290:22;;13343:4;13335:13;;13331:27;-1:-1:-1;13321:55:106;;13372:1;13369;13362:12;13321:55;13412:2;13399:16;13438:18;13430:6;13427:30;13424:50;;;13470:1;13467;13460:12;13424:50;13523:7;13518:2;13508:6;13505:1;13501:14;13497:2;13493:23;13489:32;13486:45;13483:65;;;13544:1;13541;13534:12;13483:65;13575:2;13567:11;;;;;13597:6;;-1:-1:-1;12999:610:106;-1:-1:-1;;;12999:610:106:o;13614:388::-;13682:6;13690;13743:2;13731:9;13722:7;13718:23;13714:32;13711:52;;;13759:1;13756;13749:12;13711:52;13798:9;13785:23;13817:31;13842:5;13817:31;:::i;:::-;13867:5;-1:-1:-1;13924:2:106;13909:18;;13896:32;13937:33;13896:32;13937:33;:::i;14007:1272::-;14150:6;14158;14166;14174;14218:9;14209:7;14205:23;14248:3;14244:2;14240:12;14237:32;;;14265:1;14262;14255:12;14237:32;14288:45;14325:7;14314:9;14288:45;:::i;:::-;14278:55;;14426:4;14357:66;14353:2;14349:75;14345:86;14342:106;;;14444:1;14441;14434:12;14342:106;-1:-1:-1;14497:2:106;14491:9;14539:4;14527:17;;14574:18;14559:34;;14595:22;;;14556:62;14553:88;;;14621:18;;:::i;:::-;14657:2;14650:22;14696:36;14727:3;14712:19;;14696:36;:::i;:::-;14681:52;;14802:3;14787:19;;14774:33;14835:2;14823:15;;14816:30;14898:3;14883:19;;14870:33;14912;14870;14912;:::i;:::-;14973:2;14961:15;;14954:32;14965:6;-1:-1:-1;15062:3:106;15047:19;;15034:33;15090:18;15079:30;;15076:50;;;15122:1;15119;15112:12;15284:629;15370:6;15378;15386;15394;15447:3;15435:9;15426:7;15422:23;15418:33;15415:53;;;15464:1;15461;15454:12;15415:53;15503:9;15490:23;15522:31;15547:5;15522:31;:::i;:::-;15572:5;-1:-1:-1;15629:2:106;15614:18;;15601:32;15642:33;15601:32;15642:33;:::i;:::-;15284:629;;15694:7;;-1:-1:-1;;;;15774:2:106;15759:18;;15746:32;;15877:2;15862:18;15849:32;;15284:629::o;15918:184::-;15970:77;15967:1;15960:88;16067:4;16064:1;16057:15;16091:4;16088:1;16081:15;16107:128;16174:9;;;16195:11;;;16192:37;;;16209:18;;:::i;16240:125::-;16305:9;;;16326:10;;;16323:36;;;16339:18;;:::i;17266:325::-;17354:6;17349:3;17342:19;17406:6;17399:5;17392:4;17387:3;17383:14;17370:43;;17458:1;17451:4;17442:6;17437:3;17433:16;17429:27;17422:38;17324:3;17580:4;-1:-1:-1;;17505:2:106;17497:6;17493:15;17489:88;17484:3;17480:98;17476:109;17469:116;;17266:325;;;;:::o;17596:244::-;17753:2;17742:9;17735:21;17716:4;17773:61;17830:2;17819:9;17815:18;17807:6;17799;17773:61;:::i;17845:814::-;17924:6;17977:2;17965:9;17956:7;17952:23;17948:32;17945:52;;;17993:1;17990;17983:12;17945:52;18026:9;18020:16;18059:18;18051:6;18048:30;18045:50;;;18091:1;18088;18081:12;18045:50;18114:22;;18167:4;18159:13;;18155:27;-1:-1:-1;18145:55:106;;18196:1;18193;18186:12;18145:55;18229:2;18223:9;18255:18;18247:6;18244:30;18241:56;;;18277:18;;:::i;:::-;18319:116;18431:2;-1:-1:-1;;18355:4:106;18347:6;18343:17;18339:90;18335:99;18319:116;:::i;:::-;18458:6;18451:5;18444:21;18506:7;18501:2;18492:6;18488:2;18484:15;18480:24;18477:37;18474:57;;;18527:1;18524;18517:12;18474:57;18575:6;18570:2;18566;18562:11;18557:2;18550:5;18546:14;18540:42;18627:1;18602:18;;;18622:2;18598:27;18591:38;;;;18606:5;17845:814;-1:-1:-1;;;;17845:814:106:o;20390:653::-;-1:-1:-1;;;;;20715:6:106;20711:55;20700:9;20693:74;20776:53;20825:2;20814:9;20810:18;20802:6;-1:-1:-1;;;;;19975:5:106;19969:12;19965:61;19960:3;19953:74;-1:-1:-1;;;;;20080:4:106;20073:5;20069:16;20063:23;20059:72;20052:4;20047:3;20043:14;20036:96;20193:8;20185:4;20178:5;20174:16;20168:23;20164:38;20157:4;20152:3;20148:14;20141:62;20266:4;20259:5;20255:16;20249:23;20246:1;20235:38;20228:4;20223:3;20219:14;20212:62;-1:-1:-1;;;;;20327:4:106;20320:5;20316:16;20310:23;20306:72;20299:4;20294:3;20290:14;20283:96;;;19892:493;20776:53;20866:6;20860:3;20849:9;20845:19;20838:35;20910:6;20904:3;20893:9;20889:19;20882:35;20954:3;20948;20937:9;20933:19;20926:32;20674:4;20975:62;21032:3;21021:9;21017:19;21009:6;21001;20975:62;:::i;:::-;20967:70;20390:653;-1:-1:-1;;;;;;;;20390:653:106:o;21357:694::-;-1:-1:-1;;;;;21734:6:106;21730:55;21719:9;21712:74;21795:53;21844:2;21833:9;21829:18;21821:6;-1:-1:-1;;;;;19975:5:106;19969:12;19965:61;19960:3;19953:74;-1:-1:-1;;;;;20080:4:106;20073:5;20069:16;20063:23;20059:72;20052:4;20047:3;20043:14;20036:96;20193:8;20185:4;20178:5;20174:16;20168:23;20164:38;20157:4;20152:3;20148:14;20141:62;20266:4;20259:5;20255:16;20249:23;20246:1;20235:38;20228:4;20223:3;20219:14;20212:62;-1:-1:-1;;;;;20327:4:106;20320:5;20316:16;20310:23;20306:72;20299:4;20294:3;20290:14;20283:96;;;19892:493;21795:53;21149:12;;21146:1;21135:27;;;21920:3;21905:19;;21123:40;21226:4;21215:16;;21209:23;21195:38;;21179:14;;;21172:62;21283:4;21272:16;;21266:23;21250:14;;;21243:47;21339:4;21328:16;;21322:23;21306:14;;;21299:47;21962:3;21956;21945:9;21941:19;21934:32;21693:4;21983:62;22040:3;22029:9;22025:19;22017:6;22009;21983:62;:::i;22056:904::-;-1:-1:-1;;;;;22555:6:106;22551:55;22540:9;22533:74;22616:53;22665:2;22654:9;22650:18;22642:6;-1:-1:-1;;;;;19975:5:106;19969:12;19965:61;19960:3;19953:74;-1:-1:-1;;;;;20080:4:106;20073:5;20069:16;20063:23;20059:72;20052:4;20047:3;20043:14;20036:96;20193:8;20185:4;20178:5;20174:16;20168:23;20164:38;20157:4;20152:3;20148:14;20141:62;20266:4;20259:5;20255:16;20249:23;20246:1;20235:38;20228:4;20223:3;20219:14;20212:62;-1:-1:-1;;;;;20327:4:106;20320:5;20316:16;20310:23;20306:72;20299:4;20294:3;20290:14;20283:96;;;19892:493;22616:53;21149:12;;21146:1;21135:27;;;22741:3;22726:19;;21123:40;21226:4;21215:16;;21209:23;21195:38;;21179:14;;;21172:62;21283:4;21272:16;;21266:23;21250:14;;;21243:47;21339:4;21328:16;;21322:23;21306:14;;;21299:47;22783:6;22777:3;22766:9;22762:19;22755:35;22827:6;22821:3;22810:9;22806:19;22799:35;22871:3;22865;22854:9;22850:19;22843:32;22514:4;22892:62;22949:3;22938:9;22934:19;22926:6;22918;22892:62;:::i;22965:490::-;-1:-1:-1;;;;;23238:55:106;;23220:74;;23207:3;23192:19;;23303:53;23352:2;23337:18;;23329:6;-1:-1:-1;;;;;19975:5:106;19969:12;19965:61;19960:3;19953:74;-1:-1:-1;;;;;20080:4:106;20073:5;20069:16;20063:23;20059:72;20052:4;20047:3;20043:14;20036:96;20193:8;20185:4;20178:5;20174:16;20168:23;20164:38;20157:4;20152:3;20148:14;20141:62;20266:4;20259:5;20255:16;20249:23;20246:1;20235:38;20228:4;20223:3;20219:14;20212:62;-1:-1:-1;;;;;20327:4:106;20320:5;20316:16;20310:23;20306:72;20299:4;20294:3;20290:14;20283:96;;;19892:493;23303:53;-1:-1:-1;;;;;23397:6:106;23393:55;23387:3;23376:9;23372:19;23365:84;22965:490;;;;;;:::o;23460:573::-;-1:-1:-1;;;;;23757:55:106;;23739:74;;23726:3;23711:19;;23822:53;23871:2;23856:18;;23848:6;-1:-1:-1;;;;;19975:5:106;19969:12;19965:61;19960:3;19953:74;-1:-1:-1;;;;;20080:4:106;20073:5;20069:16;20063:23;20059:72;20052:4;20047:3;20043:14;20036:96;20193:8;20185:4;20178:5;20174:16;20168:23;20164:38;20157:4;20152:3;20148:14;20141:62;20266:4;20259:5;20255:16;20249:23;20246:1;20235:38;20228:4;20223:3;20219:14;20212:62;-1:-1:-1;;;;;20327:4:106;20320:5;20316:16;20310:23;20306:72;20299:4;20294:3;20290:14;20283:96;;;19892:493;23822:53;-1:-1:-1;;;;;23916:6:106;23912:55;23906:3;23895:9;23891:19;23884:84;24019:6;24016:1;24005:21;23999:3;23988:9;23984:19;23977:50;23460:573;;;;;;;:::o;24038:184::-;24108:6;24161:2;24149:9;24140:7;24136:23;24132:32;24129:52;;;24177:1;24174;24167:12;24129:52;-1:-1:-1;24200:16:106;;24038:184;-1:-1:-1;24038:184:106:o;24504:661::-;-1:-1:-1;;;;;24859:6:106;24855:55;24844:9;24837:74;24920:53;24969:2;24958:9;24954:18;24946:6;-1:-1:-1;;;;;19975:5:106;19969:12;19965:61;19960:3;19953:74;-1:-1:-1;;;;;20080:4:106;20073:5;20069:16;20063:23;20059:72;20052:4;20047:3;20043:14;20036:96;20193:8;20185:4;20178:5;20174:16;20168:23;20164:38;20157:4;20152:3;20148:14;20141:62;20266:4;20259:5;20255:16;20249:23;20246:1;20235:38;20228:4;20223:3;20219:14;20212:62;-1:-1:-1;;;;;20327:4:106;20320:5;20316:16;20310:23;20306:72;20299:4;20294:3;20290:14;20283:96;;;19892:493;24920:53;24317:12;;24310:20;24303:28;25034:3;25019:19;;24291:41;24381:4;24370:16;;24364:23;24348:14;;;24341:47;24441:4;24430:16;;24424:23;-1:-1:-1;;;;;24420:72:106;24404:14;;;24397:96;25076:3;25070;25059:9;25055:19;25048:32;24818:4;25097:62;25154:3;25143:9;25139:19;25131:6;25123;25097:62;:::i;25170:216::-;25234:9;;;25262:11;;;25209:3;25292:9;;25320:10;;25316:19;;25345:10;;25337:19;;25313:44;25310:70;;;25360:18;;:::i;26073:766::-;-1:-1:-1;;;;;26489:6:106;26485:55;26474:9;26467:74;26550:53;26599:2;26588:9;26584:18;26576:6;-1:-1:-1;;;;;19975:5:106;19969:12;19965:61;19960:3;19953:74;-1:-1:-1;;;;;20080:4:106;20073:5;20069:16;20063:23;20059:72;20052:4;20047:3;20043:14;20036:96;20193:8;20185:4;20178:5;20174:16;20168:23;20164:38;20157:4;20152:3;20148:14;20141:62;20266:4;20259:5;20255:16;20249:23;20246:1;20235:38;20228:4;20223:3;20219:14;20212:62;-1:-1:-1;;;;;20327:4:106;20320:5;20316:16;20310:23;20306:72;20299:4;20294:3;20290:14;20283:96;;;19892:493;26550:53;24317:12;;24310:20;24303:28;26664:3;26649:19;;24291:41;24381:4;24370:16;;24364:23;24348:14;;;24341:47;24441:4;24430:16;;24424:23;-1:-1:-1;;;;;24420:72:106;24404:14;;;24397:96;26706:6;26700:3;26689:9;26685:19;26678:35;26750:3;26744;26733:9;26729:19;26722:32;26448:4;26771:62;26828:3;26817:9;26813:19;26805:6;26797;26771:62;:::i;26844:272::-;26942:2;26912:17;;;26931;;;;26908:41;26973:34;26964:44;;27019:66;27010:76;;26961:126;26958:152;;;27090:18;;:::i;27121:514::-;27238:12;;27286:4;27275:16;;27269:23;27318:66;27310:75;;;27238:12;27408:1;27397:13;;27394:235;;;27552:66;27482;27472:6;27469:1;27465:14;27462:1;27458:22;27454:95;27450:2;27446:104;27442:177;27433:186;;27394:235;;;27121:514;;;:::o;27640:276::-;27740:2;27729:17;;;27710;;;;27706:41;27772:66;27762:77;;27851:34;27841:45;;27759:128;27756:154;;;27890:18;;:::i;27921:200::-;27987:9;;;27960:4;28015:9;;28043:10;;28055:12;;;28039:29;28078:12;;;28070:21;;28036:56;28033:82;;;28095:18;;:::i;28126:184::-;28178:77;28175:1;28168:88;28275:4;28272:1;28265:15;28299:4;28296:1;28289:15;28315:274;28355:1;28381;28371:189;;28416:77;28413:1;28406:88;28517:4;28514:1;28507:15;28545:4;28542:1;28535:15;28371:189;-1:-1:-1;28574:9:106;;28315:274::o",
        "linkReferences": {},
        "immutableReferences": {
            "44671": [
                {
                    "start": 7516,
                    "length": 32
                }
            ]
        }
    },
    "methodIdentifiers": {
        "allowance(address,address,uint256)": "598af9e7",
        "approve(address,uint256,uint256)": "426a8493",
        "balanceOf(address,uint256)": "00fdd58e",
        "burn(address,uint256,uint256)": "f5298aca",
        "clear(address,uint256)": "80f0b44c",
        "collectProtocolFees(address,address,uint256)": "8161b874",
        "donate((address,address,uint24,int24,address),uint256,uint256,bytes)": "234266d7",
        "extsload(bytes32)": "1e2eaeaf",
        "extsload(bytes32,uint256)": "35fd631a",
        "extsload(bytes32[])": "dbd035ff",
        "exttload(bytes32)": "f135baaa",
        "exttload(bytes32[])": "9bf6645f",
        "initialize((address,address,uint24,int24,address),uint160)": "6276cbbe",
        "isOperator(address,address)": "b6363cf2",
        "mint(address,uint256,uint256)": "156e29f6",
        "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": "5a6bcfda",
        "owner()": "8da5cb5b",
        "protocolFeeController()": "f02de3b2",
        "protocolFeesAccrued(address)": "97e8cd4e",
        "setOperator(address,bool)": "558a7297",
        "setProtocolFee((address,address,uint24,int24,address),uint24)": "7e87ce7d",
        "setProtocolFeeController(address)": "2d771389",
        "settle()": "11da60b4",
        "settleFor(address)": "3dd45adb",
        "supportsInterface(bytes4)": "01ffc9a7",
        "swap((address,address,uint24,int24,address),(bool,int256,uint160),bytes)": "f3cd914c",
        "sync(address)": "a5841194",
        "take(address,address,uint256)": "0b0d9c09",
        "transfer(address,uint256,uint256)": "095bcdb6",
        "transferFrom(address,address,uint256,uint256)": "fe99049a",
        "transferOwnership(address)": "f2fde38b",
        "unlock(bytes)": "48c89491",
        "updateDynamicLPFee((address,address,uint24,int24,address),uint24)": "52759651"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlreadyUnlocked\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency1\",\"type\":\"address\"}],\"name\":\"CurrenciesOutOfOrderOrEqual\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CurrencyNotSettled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DelegateCallNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ManagerLocked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MustClearExactPositiveDelta\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NonzeroNativeValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PoolNotInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProtocolFeeCurrencySynced\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"ProtocolFeeTooLarge\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SwapAmountCannotBeZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"TickSpacingTooLarge\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"TickSpacingTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnauthorizedDynamicLPFeeUpdate\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Donate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"ModifyLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"OperatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"protocolFeeController\",\"type\":\"address\"}],\"name\":\"ProtocolFeeControllerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"protocolFee\",\"type\":\"uint24\"}],\"name\":\"ProtocolFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int128\",\"name\":\"amount0\",\"type\":\"int128\"},{\"indexed\":false,\"internalType\":\"int128\",\"name\":\"amount1\",\"type\":\"int128\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Currency\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"clear\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"collectProtocolFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountCollected\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"donate\",\"outputs\":[{\"internalType\":\"BalanceDelta\",\"name\":\"delta\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"extsload\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"startSlot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"nSlots\",\"type\":\"uint256\"}],\"name\":\"extsload\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"slots\",\"type\":\"bytes32[]\"}],\"name\":\"extsload\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"slots\",\"type\":\"bytes32[]\"}],\"name\":\"exttload\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"exttload\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOperator\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct ModifyLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"modifyLiquidity\",\"outputs\":[{\"internalType\":\"BalanceDelta\",\"name\":\"callerDelta\",\"type\":\"int256\"},{\"internalType\":\"BalanceDelta\",\"name\":\"feesAccrued\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFeeController\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Currency\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"protocolFeesAccrued\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint24\",\"name\":\"newProtocolFee\",\"type\":\"uint24\"}],\"name\":\"setProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"setProtocolFeeController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"settle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"settleFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct SwapParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"BalanceDelta\",\"name\":\"swapDelta\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Currency\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Currency\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"take\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"unlock\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint24\",\"name\":\"newDynamicLPFee\",\"type\":\"uint24\"}],\"name\":\"updateDynamicLPFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Donate(bytes32,address,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount donated in currency0\",\"amount1\":\"The amount donated in currency1\",\"id\":\"The abi encoded hash of the pool key struct for the pool that was donated to\",\"sender\":\"The address that initiated the donate call\"}},\"Initialize(bytes32,address,address,uint24,int24,address,uint160,int24)\":{\"params\":{\"currency0\":\"The first currency of the pool by address sort order\",\"currency1\":\"The second currency of the pool by address sort order\",\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"hooks\":\"The hooks contract address for the pool, or address(0) if none\",\"id\":\"The abi encoded hash of the pool key struct for the new pool\",\"sqrtPriceX96\":\"The price of the pool on initialization\",\"tick\":\"The initial tick of the pool corresponding to the initialized price\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks\"}},\"ModifyLiquidity(bytes32,address,int24,int24,int256,bytes32)\":{\"params\":{\"id\":\"The abi encoded hash of the pool key struct for the pool that was modified\",\"liquidityDelta\":\"The amount of liquidity that was added or removed\",\"salt\":\"The extra data to make positions unique\",\"sender\":\"The address that modified the pool\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Swap(bytes32,address,int128,int128,uint160,uint128,int24,uint24)\":{\"params\":{\"amount0\":\"The delta of the currency0 balance of the pool\",\"amount1\":\"The delta of the currency1 balance of the pool\",\"fee\":\"The swap fee in hundredths of a bip\",\"id\":\"The abi encoded hash of the pool key struct for the pool that was modified\",\"liquidity\":\"The liquidity of the pool after the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of the price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of the token.\",\"id\":\"The id of the token.\",\"spender\":\"The address of the spender.\"},\"returns\":{\"_0\":\"bool True, always\"}},\"burn(address,uint256,uint256)\":{\"details\":\"The id is converted to a uint160 to correspond to a currency address If the upper 12 bytes are not 0, they will be 0-ed out\",\"params\":{\"amount\":\"The amount of currency to burn\",\"from\":\"The address to burn the tokens from\",\"id\":\"The currency address to burn from ERC6909s, as a uint256\"}},\"clear(address,uint256)\":{\"details\":\"This could be used to clear a balance that is considered dust. Additionally, the amount must be the exact positive balance. This is to enforce that the caller is aware of the amount being cleared.\"},\"collectProtocolFees(address,address,uint256)\":{\"details\":\"This will revert if the contract is unlocked\",\"params\":{\"amount\":\"The amount of currency to withdraw\",\"currency\":\"The currency to withdraw\",\"recipient\":\"The address to receive the protocol fees\"},\"returns\":{\"amountCollected\":\"The amount of currency successfully withdrawn\"}},\"donate((address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"details\":\"Calls to donate can be frontrun adding just-in-time liquidity, with the aim of receiving a portion donated funds. Donors should keep this in mind when designing donation mechanisms.This function donates to in-range LPs at slot0.tick. In certain edge-cases of the swap algorithm, the `sqrtPrice` of a pool can be at the lower boundary of tick `n`, but the `slot0.tick` of the pool is already `n - 1`. In this case a call to `donate` would donate to tick `n - 1` (slot0.tick) not tick `n` (getTickAtSqrtPrice(slot0.sqrtPriceX96)). Read the comments in `Pool.swap()` for more information about this.\",\"params\":{\"amount0\":\"The amount of currency0 to donate\",\"amount1\":\"The amount of currency1 to donate\",\"hookData\":\"The data to pass through to the donate hooks\",\"key\":\"The key of the pool to donate to\"},\"returns\":{\"delta\":\"BalanceDelta The delta of the caller after the donate\"}},\"extsload(bytes32)\":{\"params\":{\"slot\":\"Key of slot to sload\"},\"returns\":{\"_0\":\"The value of the slot as bytes32\"}},\"extsload(bytes32,uint256)\":{\"params\":{\"nSlots\":\"Number of slots to load into return value\",\"startSlot\":\"Key of slot to start sloading from\"},\"returns\":{\"_0\":\"List of loaded values.\"}},\"extsload(bytes32[])\":{\"params\":{\"slots\":\"List of slots to SLOAD from.\"},\"returns\":{\"_0\":\"List of loaded values.\"}},\"exttload(bytes32)\":{\"params\":{\"slot\":\"Key of slot to tload\"},\"returns\":{\"_0\":\"The value of the slot as bytes32\"}},\"exttload(bytes32[])\":{\"params\":{\"slots\":\"List of slots to tload\"},\"returns\":{\"_0\":\"List of loaded values\"}},\"initialize((address,address,uint24,int24,address),uint160)\":{\"details\":\"A swap fee totaling MAX_SWAP_FEE (100%) makes exact output swaps impossible since the input is entirely consumed by the fee\",\"params\":{\"key\":\"The pool key for the pool to initialize\",\"sqrtPriceX96\":\"The initial square root price\"},\"returns\":{\"tick\":\"The initial tick of the pool\"}},\"mint(address,uint256,uint256)\":{\"details\":\"The id is converted to a uint160 to correspond to a currency address If the upper 12 bytes are not 0, they will be 0-ed out\",\"params\":{\"amount\":\"The amount of currency to mint\",\"id\":\"The currency address to mint to ERC6909s, as a uint256\",\"to\":\"The address to mint the tokens to\"}},\"modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"details\":\"Poke by calling with a zero liquidityDeltaNote that feesAccrued can be artificially inflated by a malicious actor and integrators should be careful using the value For pools with a single liquidity position, actors can donate to themselves to inflate feeGrowthGlobal (and consequently feesAccrued) atomically donating and collecting fees in the same unlockCallback may make the inflated value more extreme\",\"params\":{\"hookData\":\"The data to pass through to the add/removeLiquidity hooks\",\"key\":\"The pool to modify liquidity in\",\"params\":\"The parameters for modifying the liquidity\"},\"returns\":{\"callerDelta\":\"The balance delta of the caller of modifyLiquidity. This is the total of both principal, fee deltas, and hook deltas if applicable\",\"feesAccrued\":\"The balance delta of the fees generated in the liquidity range. Returned for informational purposes\"}},\"setOperator(address,bool)\":{\"params\":{\"approved\":\"The approval status.\",\"operator\":\"The address of the operator.\"},\"returns\":{\"_0\":\"bool True, always\"}},\"setProtocolFee((address,address,uint24,int24,address),uint24)\":{\"params\":{\"key\":\"The key of the pool to set a protocol fee for\",\"newProtocolFee\":\"The fee to set\"}},\"setProtocolFeeController(address)\":{\"params\":{\"controller\":\"The new protocol fee controller\"}},\"settle()\":{\"returns\":{\"_0\":\"The amount of currency settled\"}},\"settleFor(address)\":{\"params\":{\"recipient\":\"The address to credit for the payment\"},\"returns\":{\"_0\":\"The amount of currency settled\"}},\"swap((address,address,uint24,int24,address),(bool,int256,uint160),bytes)\":{\"details\":\"Swapping on low liquidity pools may cause unexpected swap amounts when liquidity available is less than amountSpecified. Additionally note that if interacting with hooks that have the BEFORE_SWAP_RETURNS_DELTA_FLAG or AFTER_SWAP_RETURNS_DELTA_FLAG the hook may alter the swap input/output. Integrators should perform checks on the returned swapDelta.\",\"params\":{\"hookData\":\"The data to pass through to the swap hooks\",\"key\":\"The pool to swap in\",\"params\":\"The parameters for swapping\"},\"returns\":{\"swapDelta\":\"The balance delta of the address swapping\"}},\"sync(address)\":{\"details\":\"This MUST be called before any ERC20 tokens are sent into the contract, but can be skipped for native tokens because the amount to settle is determined by the sent value. However, if an ERC20 token has been synced and not settled, and the caller instead wants to settle native funds, this function can be called with the native currency to then be able to settle the native currency\"},\"take(address,address,uint256)\":{\"details\":\"Will revert if the requested amount is not available, consider using `mint` insteadCan also be used as a mechanism for free flash loans\",\"params\":{\"amount\":\"The amount of currency to withdraw\",\"currency\":\"The currency to withdraw from the pool manager\",\"to\":\"The address to withdraw to\"}},\"transfer(address,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of the token.\",\"id\":\"The id of the token.\",\"receiver\":\"The address of the receiver.\"},\"returns\":{\"_0\":\"bool True, always, unless the function reverts\"}},\"transferFrom(address,address,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of the token.\",\"id\":\"The id of the token.\",\"receiver\":\"The address of the receiver.\",\"sender\":\"The address of the sender.\"},\"returns\":{\"_0\":\"bool True, always, unless the function reverts\"}},\"unlock(bytes)\":{\"details\":\"The only functions callable without an unlocking are `initialize` and `updateDynamicLPFee`\",\"params\":{\"data\":\"Any data to pass to the callback, via `IUnlockCallback(msg.sender).unlockCallback(data)`\"},\"returns\":{\"result\":\"The data returned by the call to `IUnlockCallback(msg.sender).unlockCallback(data)`\"}},\"updateDynamicLPFee((address,address,uint24,int24,address),uint24)\":{\"details\":\"A swap fee totaling MAX_SWAP_FEE (100%) makes exact output swaps impossible since the input is entirely consumed by the fee\",\"params\":{\"key\":\"The key of the pool to update dynamic LP fees for\",\"newDynamicLPFee\":\"The new dynamic pool LP fee\"}}},\"title\":\"PoolManager\",\"version\":1},\"userdoc\":{\"errors\":{\"AlreadyUnlocked()\":[{\"notice\":\"Thrown when unlock is called, but the contract is already unlocked\"}],\"CurrenciesOutOfOrderOrEqual(address,address)\":[{\"notice\":\"PoolKey must have currencies where address(currency0) < address(currency1)\"}],\"CurrencyNotSettled()\":[{\"notice\":\"Thrown when a currency is not netted out after the contract is unlocked\"}],\"InvalidCaller()\":[{\"notice\":\"Thrown when collectProtocolFees or setProtocolFee is not called by the controller.\"}],\"ManagerLocked()\":[{\"notice\":\"Thrown when a function is called that requires the contract to be unlocked, but it is not\"}],\"MustClearExactPositiveDelta()\":[{\"notice\":\"Thrown when `clear` is called with an amount that is not exactly equal to the open currency delta.\"}],\"NonzeroNativeValue()\":[{\"notice\":\"Thrown when native currency is passed to a non native settlement\"}],\"PoolNotInitialized()\":[{\"notice\":\"Thrown when trying to interact with a non-initialized pool\"}],\"ProtocolFeeCurrencySynced()\":[{\"notice\":\"Thrown when collectProtocolFees is attempted on a token that is synced.\"}],\"ProtocolFeeTooLarge(uint24)\":[{\"notice\":\"Thrown when protocol fee is set too high\"}],\"SwapAmountCannotBeZero()\":[{\"notice\":\"Thrown when trying to swap amount of 0\"}],\"TickSpacingTooLarge(int24)\":[{\"notice\":\"Pools are limited to type(int16).max tickSpacing in #initialize, to prevent overflow\"}],\"TickSpacingTooSmall(int24)\":[{\"notice\":\"Pools must have a positive non-zero tickSpacing passed to #initialize\"}],\"UnauthorizedDynamicLPFeeUpdate()\":[{\"notice\":\"Thrown when a call to updateDynamicLPFee is made by an address that is not the hook, or on a pool that does not have a dynamic swap fee.\"}]},\"events\":{\"Donate(bytes32,address,uint256,uint256)\":{\"notice\":\"Emitted for donations\"},\"Initialize(bytes32,address,address,uint24,int24,address,uint160,int24)\":{\"notice\":\"Emitted when a new pool is initialized\"},\"ModifyLiquidity(bytes32,address,int24,int24,int256,bytes32)\":{\"notice\":\"Emitted when a liquidity position is modified\"},\"ProtocolFeeControllerUpdated(address)\":{\"notice\":\"Emitted when the protocol fee controller address is updated in setProtocolFeeController.\"},\"ProtocolFeeUpdated(bytes32,uint24)\":{\"notice\":\"Emitted when the protocol fee is updated for a pool.\"},\"Swap(bytes32,address,int128,int128,uint160,uint128,int24,uint24)\":{\"notice\":\"Emitted for swaps between currency0 and currency1\"}},\"kind\":\"user\",\"methods\":{\"allowance(address,address,uint256)\":{\"notice\":\"Spender allowance of an id.\"},\"approve(address,uint256,uint256)\":{\"notice\":\"Approves an amount of an id to a spender.\"},\"balanceOf(address,uint256)\":{\"notice\":\"Owner balance of an id.\"},\"burn(address,uint256,uint256)\":{\"notice\":\"Called by the user to move value from ERC6909 balance\"},\"clear(address,uint256)\":{\"notice\":\"WARNING - Any currency that is cleared, will be non-retrievable, and locked in the contract permanently. A call to clear will zero out a positive balance WITHOUT a corresponding transfer.\"},\"collectProtocolFees(address,address,uint256)\":{\"notice\":\"Collects the protocol fees for a given recipient and currency, returning the amount collected\"},\"donate((address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"notice\":\"Donate the given currency amounts to the in-range liquidity providers of a pool\"},\"extsload(bytes32)\":{\"notice\":\"Called by external contracts to access granular pool state\"},\"extsload(bytes32,uint256)\":{\"notice\":\"Called by external contracts to access granular pool state\"},\"extsload(bytes32[])\":{\"notice\":\"Called by external contracts to access sparse pool state\"},\"exttload(bytes32)\":{\"notice\":\"Called by external contracts to access transient storage of the contract\"},\"exttload(bytes32[])\":{\"notice\":\"Called by external contracts to access sparse transient pool state\"},\"initialize((address,address,uint24,int24,address),uint160)\":{\"notice\":\"Initialize the state for a given pool ID\"},\"isOperator(address,address)\":{\"notice\":\"Checks if a spender is approved by an owner as an operator\"},\"mint(address,uint256,uint256)\":{\"notice\":\"Called by the user to move value into ERC6909 balance\"},\"modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"notice\":\"Modify the liquidity for the given pool\"},\"protocolFeeController()\":{\"notice\":\"Returns the current protocol fee controller address\"},\"protocolFeesAccrued(address)\":{\"notice\":\"Given a currency address, returns the protocol fees accrued in that currency\"},\"setOperator(address,bool)\":{\"notice\":\"Sets or removes an operator for the caller.\"},\"setProtocolFee((address,address,uint24,int24,address),uint24)\":{\"notice\":\"Sets the protocol fee for the given pool\"},\"setProtocolFeeController(address)\":{\"notice\":\"Sets the protocol fee controller\"},\"settle()\":{\"notice\":\"Called by the user to pay what is owed\"},\"settleFor(address)\":{\"notice\":\"Called by the user to pay on behalf of another address\"},\"swap((address,address,uint24,int24,address),(bool,int256,uint160),bytes)\":{\"notice\":\"Swap against the given pool\"},\"sync(address)\":{\"notice\":\"Writes the current ERC20 balance of the specified currency to transient storage This is used to checkpoint balances for the manager and derive deltas for the caller.\"},\"take(address,address,uint256)\":{\"notice\":\"Called by the user to net out some value owed to the user\"},\"transfer(address,uint256,uint256)\":{\"notice\":\"Transfers an amount of an id from the caller to a receiver.\"},\"transferFrom(address,address,uint256,uint256)\":{\"notice\":\"Transfers an amount of an id from a sender to a receiver.\"},\"unlock(bytes)\":{\"notice\":\"All interactions on the contract that account deltas require unlocking. A caller that calls `unlock` must implement `IUnlockCallback(msg.sender).unlockCallback(data)`, where they interact with the remaining functions on this contract.\"},\"updateDynamicLPFee((address,address,uint24,int24,address),uint24)\":{\"notice\":\"Updates the pools lp fees for the a pool that has enabled dynamic lp fees.\"}},\"notice\":\"Holds the state for all pools\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/uniswap-hooks/lib/v4-core/src/PoolManager.sol\":\"PoolManager\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@ensdomains/=lib/uniswap-hooks/lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts/=lib/uniswap-hooks/lib/v4-core/lib/openzeppelin-contracts/contracts/\",\":@openzeppelin/uniswap-hooks/=lib/uniswap-hooks/\",\":@uniswap/v4-core/=lib/uniswap-hooks/lib/v4-core/\",\":@uniswap/v4-periphery/=lib/uniswap-hooks/lib/v4-periphery/\",\":ds-test/=lib/uniswap-hooks/lib/v4-core/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/uniswap-hooks/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/uniswap-hooks/lib/v4-periphery/lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/uniswap-hooks/lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":hardhat/=lib/uniswap-hooks/lib/v4-core/node_modules/hardhat/\",\":hookmate/=lib/hookmate/src/\",\":openzeppelin-contracts/=lib/uniswap-hooks/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/uniswap-hooks/lib/openzeppelin-contracts/contracts/\",\":permit2/=lib/uniswap-hooks/lib/v4-periphery/lib/permit2/\",\":solmate/=lib/uniswap-hooks/lib/v4-core/lib/solmate/\",\":uniswap-hooks/=lib/uniswap-hooks/src/\",\":v4-core/=lib/uniswap-hooks/lib/v4-core/\",\":v4-periphery/=lib/uniswap-hooks/lib/v4-periphery/\"]},\"sources\":{\"lib/uniswap-hooks/lib/v4-core/lib/solmate/src/auth/Owned.sol\":{\"keccak256\":\"0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://1ff52bbee698b9cf9e4574615e6550be0887ccf355f6571e23d6f25b332e79b4\",\"dweb:/ipfs/QmVorA2apojVRStzS7h8aFccR3Uv32G6HVtBtFHZrE7YXx\"]},\"lib/uniswap-hooks/lib/v4-core/src/ERC6909.sol\":{\"keccak256\":\"0x22476a1c183be1b547a509b3e6906abaccb6408375f798fce805ff7877aca09f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e85580e1563ea0556705132fb6bd038ca4aa355749039923853ebcb76b7c84e6\",\"dweb:/ipfs/QmVoxPrbagRKpFdRWoaCSKmStYLZrhNFuedcuyGycSGR7q\"]},\"lib/uniswap-hooks/lib/v4-core/src/ERC6909Claims.sol\":{\"keccak256\":\"0xf496ef3a5a9bf4f4aa2eec951dbeff09a01ef058bb9f64b1664cf46c9e85cd49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2a0a97c359a7a4c526ba9fc4ceb20af8050f9cf7886ea7e1f38c9c10b4a3750c\",\"dweb:/ipfs/QmPy6pCQbvzCdJRqG1thHRSwEZoLBAaLo3KQnueL3wxb8i\"]},\"lib/uniswap-hooks/lib/v4-core/src/Extsload.sol\":{\"keccak256\":\"0x784074bd04a1541c7c6ace074e30245746133fd37c3ba16b025dce394db986ce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35f1f4fb306bf01e98b7eca012b85f3ab978b39fa5136193363e2519c4435e51\",\"dweb:/ipfs/QmeGrjGMt71dJymVhkEadh5CuCW5GxRqNEZLi5AJxvC5tU\"]},\"lib/uniswap-hooks/lib/v4-core/src/Exttload.sol\":{\"keccak256\":\"0x769ee2733a08112c652274f4b972c45fb56cc46109f233b9a30f81561b15dd54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd19e88d50ae77c1ed5581baca1c75b3fb828d0b58cded90188d55c4e336266c\",\"dweb:/ipfs/Qmc8YM6Tfpwwa4qivHHzRxNdhZzdzGiD7VexWsDvkaQTxG\"]},\"lib/uniswap-hooks/lib/v4-core/src/NoDelegateCall.sol\":{\"keccak256\":\"0xacb81aecb7c74c86650a035462dae38c313b4b7b5842e14b645f864f61da2b51\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://363a0e15fc30ea68a5d52a78772facecde6433ea156e3ec2ce25068c97cd5ad6\",\"dweb:/ipfs/QmYhWaF3wH71SDx5TZr9qEXXQf5FYQvdjoo3B2qWiAbm18\"]},\"lib/uniswap-hooks/lib/v4-core/src/PoolManager.sol\":{\"keccak256\":\"0xf9ff5d5e261a21a5e72a01c5badd988beeff437e0f6b82fd56f80be42d727c07\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://4a92a25102c73245e1343f0dbc8400b8bac3c464ba064aa5574b9584a12e6c72\",\"dweb:/ipfs/QmfCcvspZ8XzDeQjEd2FfM76wzkfE9KDgBoqAcqhf3nsnu\"]},\"lib/uniswap-hooks/lib/v4-core/src/ProtocolFees.sol\":{\"keccak256\":\"0x81362ef1d19670b41cefc2b6f2dc0333b6743fe39a1929edd36bd9b6a1111755\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de483bbd8bf9a53b9644d7f9a6a6fe77ae527b755cf29e1db8725de89e70c7aa\",\"dweb:/ipfs/Qmex3PcgJGbYsuDNaMXc8mg5fW1DNaPGiNToPpAAzz6GEq\"]},\"lib/uniswap-hooks/lib/v4-core/src/interfaces/IExtsload.sol\":{\"keccak256\":\"0x80b53ca4907d6f0088c3b931f2b72cad1dc4615a95094d96bd0fb8dff8d5ba43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://375c69148622aab7a3537d5fd37d373a8e9731022c8d87bdaee46233b0a99fe1\",\"dweb:/ipfs/QmXFjdoYRxsA5B1kyuxEXgNf3FBoL1zPvy26Qy8EtpdFRN\"]},\"lib/uniswap-hooks/lib/v4-core/src/interfaces/IExttload.sol\":{\"keccak256\":\"0xc6b68283ebd8d1c789df536756726eed51c589134bb20821b236a0d22a135937\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://294394f72dfc219689209f4130d85601dfd0d63c8d47578050d312db70f9b6c8\",\"dweb:/ipfs/QmTDMQ3oxCGHgEBU48a3Lp4S1rRjc8vVCxkhE5ZNej1bsY\"]},\"lib/uniswap-hooks/lib/v4-core/src/interfaces/IHooks.sol\":{\"keccak256\":\"0xc131ffa2d04c10a012fe715fe2c115811526b7ea34285cf0a04ce7ce8320da8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b212358897db5d99c21244d88f97b2e788527552cb430629b472a8cc6289aec\",\"dweb:/ipfs/QmQtwV4dDe2RYk2ErLpaAX7U82jWh1L6Lw2HRuKDvBi84G\"]},\"lib/uniswap-hooks/lib/v4-core/src/interfaces/IPoolManager.sol\":{\"keccak256\":\"0xbdab3544da3d32dfdf7457baa94e17d5a3012952428559e013ffac45d067038e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce95ff864468e37c76adf71df061d4f3d6f3a5ec1f9bc3aea090463bc72798f4\",\"dweb:/ipfs/QmSbWh1pLbz51yQF4HEu5NRhr8XVv9JYGEw1hq1HudAnCi\"]},\"lib/uniswap-hooks/lib/v4-core/src/interfaces/IProtocolFees.sol\":{\"keccak256\":\"0x32a666e588a2f66334430357bb1e2424fe7eebeb98a3364b1dd16eb6ccca9848\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85751d302125881f72e5f8af051c2d5d9b1f606ebaea8ca7d04fccdd27cc252d\",\"dweb:/ipfs/QmeRwomeh9NWm6A6fgNA4KZPQZHPpdKsPQyYsHSFmvud7J\"]},\"lib/uniswap-hooks/lib/v4-core/src/interfaces/callback/IUnlockCallback.sol\":{\"keccak256\":\"0x58c82f2bd9d7c097ed09bd0991fedc403b0ec270eb3d0158bfb095c06a03d719\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91168ca26a10980df2cdc3fbfe8ddf372c002b7ef19e3c59a0c9870d64198f1b\",\"dweb:/ipfs/QmUSpaM825vd1SwvF38esgbdLgYiPwefKaFERTWvUi6uSK\"]},\"lib/uniswap-hooks/lib/v4-core/src/interfaces/external/IERC20Minimal.sol\":{\"keccak256\":\"0xeccadf1bf69ba2eb51f2fe4fa511bc7bb05bbd6b9f9a3cb8e5d83d9582613e0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://118757369892687b99ef46ce28d6861f62c098285bd7687a4f17f7e44e5f81de\",\"dweb:/ipfs/QmUxqbYqQtcEwwFbb9e6BBMePEaSgN8C45v6RKubD4ib8d\"]},\"lib/uniswap-hooks/lib/v4-core/src/interfaces/external/IERC6909Claims.sol\":{\"keccak256\":\"0xa586f345739e52b0488a0fe40b6e375cce67fdd25758408b0efcb5133ad96a48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8c557b7e52abdbbd82e415a1acc27921446a7fd090b7d4877e52be72619547f\",\"dweb:/ipfs/QmXE2KNPbXmGX8BQF3ei6zhzRTnhoTQg39XmqMnkhbr6QK\"]},\"lib/uniswap-hooks/lib/v4-core/src/libraries/BitMath.sol\":{\"keccak256\":\"0x51b9be4f5c4fd3e80cbc9631a65244a2eb2be250b6b7f128a2035080e18aee8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe98bbd5498e912146b9319827fc63621eb66ff55d5baae0fa02a7a972ab8d1e\",\"dweb:/ipfs/QmY5hCuyrtgsJtk4AavrxcvBkRrChfr4N6ZnhdC8roPpNi\"]},\"lib/uniswap-hooks/lib/v4-core/src/libraries/CurrencyDelta.sol\":{\"keccak256\":\"0x80dbd898cf0f90c5c27192689b16c34edc765d6ab21b8358e3bb792c7fef238c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://107698da024313f132d9fe28deb920b5c03d14624889c3ce5720e588f03635bb\",\"dweb:/ipfs/QmQteUbhj5SsWbvSF6U8niBUSrETqVbEwULc8E7vS4Kbnn\"]},\"lib/uniswap-hooks/lib/v4-core/src/libraries/CurrencyReserves.sol\":{\"keccak256\":\"0x1576616129933fcdf3b684cea33cffd9c95e18fafbd2832a8c48ac3d8526d4c3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://33b050efb9b81803b18f562271e7cca2ec5362c4d505860d6419b4a345636725\",\"dweb:/ipfs/QmQtFtTwKZ5pFVGD2ENDUXvp7ECFvzqeCuJ1miJcUHdmiX\"]},\"lib/uniswap-hooks/lib/v4-core/src/libraries/CustomRevert.sol\":{\"keccak256\":\"0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd\",\"dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt\"]},\"lib/uniswap-hooks/lib/v4-core/src/libraries/FixedPoint128.sol\":{\"keccak256\":\"0xad236e10853f4b4b20a35a9bb52b857c4fc79874846b7e444e06ead7f2630542\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0de1f9a06520b1a689660943faa14fc0b8344ab41fab9e6012ea34bff4b9b3eb\",\"dweb:/ipfs/QmRNMPTyko7W6d6KxuTsnDBa9oZgDK4xiwRRq3H9ASTbwy\"]},\"lib/uniswap-hooks/lib/v4-core/src/libraries/FixedPoint96.sol\":{\"keccak256\":\"0xef5c3fd41aee26bb12aa1c32873cfee88e67eddfe7c2b32283786265ac669741\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4de298d02f662a1c36c7be0a150f18c2a161408a5d3e48432e707efd01fac9a4\",\"dweb:/ipfs/QmSiM4oeMmLVKmAtJXz2feYkv4R9ZcyBpkTRW5Nhw5KDyJ\"]},\"lib/uniswap-hooks/lib/v4-core/src/libraries/FullMath.sol\":{\"keccak256\":\"0x4fc73a00817193fd3cac1cc03d8167d21af97d75f1815a070ee31a90c702b4c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3b2d66d36b1ad56b1ab6e2eb8a816740877b40b461c93f125e88621c8378e52\",\"dweb:/ipfs/QmPGvMZzKQvNiWKd8aRzzdW7oAizwrMgcMtnaworDkVHFC\"]},\"lib/uniswap-hooks/lib/v4-core/src/libraries/Hooks.sol\":{\"keccak256\":\"0xd679b4b2d429689bc44f136050ebc958fb2d7d0d3a3c7b3e48c08ab4fba09aaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287190cb72840e5eb63cc7a8a1d0b9150af17d8e4ea0323f47c7e7928f2033cb\",\"dweb:/ipfs/QmVfqWBnAQM2jUcuREDdvjcP21gNuLU35CoL3NG5CEhNcx\"]},\"lib/uniswap-hooks/lib/v4-core/src/libraries/LPFeeLibrary.sol\":{\"keccak256\":\"0xbf6914e01014e7c1044111feb7df7a3d96bb503b3da827ad8464b1955580d13b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33823c20a91882c9aacdcbb02f0558c05209f4d5954aa6dd4fa17c95664db475\",\"dweb:/ipfs/QmR7owkFgpfztpp1QUg3ut3nw9iPVQqLGP4hzgmZtRUQ2J\"]},\"lib/uniswap-hooks/lib/v4-core/src/libraries/LiquidityMath.sol\":{\"keccak256\":\"0x000ef2eadcc1eb7b2c18a77655f94e76e0e860f605783484657ef65fd6eda353\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a766b620a7a22798b43c6c1f23b5c6cff0ebf588deb89842bad05208d448cd99\",\"dweb:/ipfs/QmVKjaFJdzkqA3ey2Byum8iTCMssWVD8MmVC8rw62Tj5WD\"]},\"lib/uniswap-hooks/lib/v4-core/src/libraries/Lock.sol\":{\"keccak256\":\"0x9338be4b5695f1da5f3d3f7a3eeaf7a356c1045458289586ac0cbe9cef77c6d5\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://485ec42ed6155469d612a9a0c18068ebfbad74448792a338a435503de3ef1b2c\",\"dweb:/ipfs/QmVnnv5u74MYatfRmBgrcfFYQcsMAJMG9jQ6ju8UiydKNF\"]},\"lib/uniswap-hooks/lib/v4-core/src/libraries/NonzeroDeltaCount.sol\":{\"keccak256\":\"0x0666ebd5d3528d7d52c48538296367a4cff97a578cf13365c51983fae3219b87\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d27f1be3bd09d85c53d3e6a539dd6529ddd8b2b764ccb47fd7765fc81f9add59\",\"dweb:/ipfs/QmQdZujNXhKEXQBkKtF5jbdvo1yXMqPDUoBBaF9S5u3Kpm\"]},\"lib/uniswap-hooks/lib/v4-core/src/libraries/ParseBytes.sol\":{\"keccak256\":\"0x7533b13f53ee2c2c55500100b22ffd6e37e7523c27874edc98663d53a8672b15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82449058634fde28a085f3c59a6a5f412550c02181590593fd84c3e8b329aa17\",\"dweb:/ipfs/Qmev4E9Au6SsE4wsArChCwfg94KhHc5gYsEsZUnjF5sRLa\"]},\"lib/uniswap-hooks/lib/v4-core/src/libraries/Pool.sol\":{\"keccak256\":\"0xb8191707c5913f5e2f589cec5167e3fac4a5b86bd84f61fdba0fbe6a8ce8a3a0\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a609f9c365f05becf61877d9dc767e7825bce8c34607dbfc0f0437a71f6ff407\",\"dweb:/ipfs/QmThDUzLePs2Hbp6XTpRSHT67rdsjQLhdmS6krm8cpKSey\"]},\"lib/uniswap-hooks/lib/v4-core/src/libraries/Position.sol\":{\"keccak256\":\"0xddab2a831f1befb6abf5567e77c4582169ca8156cf69eb4f22d8e87f7226a3f9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c79fe61b50f3b70cff503abfa6f5643fcbefb9b794855bee1019b1e6d9c083b2\",\"dweb:/ipfs/QmbKmYNQesaMz8bo1b7TMHQcAwaDd3eDPrE5pAdPPZTtk5\"]},\"lib/uniswap-hooks/lib/v4-core/src/libraries/ProtocolFeeLibrary.sol\":{\"keccak256\":\"0xf483001899229ab10f5a626fe1c5866134d9e965b48ce6cf55ce0d7f74f7d8ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ba9211a7f69bbb44649c35211eb29d193c09032ec600064ef9d04b4625dd8ba\",\"dweb:/ipfs/QmQSjQvtguYgMJSkkKRhHjxasfX9xfTbrbcZ1QmjUVb787\"]},\"lib/uniswap-hooks/lib/v4-core/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x42c4a24f996a14d358be397b71f7ec9d7daf666aaec78002c63315a6ee67aa86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3db86e2ba3679105fc32edec656c70282e1fede6cab11217702443f6c26fa59\",\"dweb:/ipfs/QmX4yaaSPdKQzYNRsezjTvZKsubzS8JRTEGFD3fPpTTCcj\"]},\"lib/uniswap-hooks/lib/v4-core/src/libraries/SqrtPriceMath.sol\":{\"keccak256\":\"0xf8079fe6e3460db495451d06b1705e18f1c4075c1af96a31ad313545f7082982\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://582fc51546723a0a8acccf782f69b530bacf9b3ef929458e82569b7121f0b138\",\"dweb:/ipfs/QmSBXcmqZdFsM7M4sRaiyQAxykCeMNFKyKgBcwSMTw1bcF\"]},\"lib/uniswap-hooks/lib/v4-core/src/libraries/SwapMath.sol\":{\"keccak256\":\"0x6baa782ae523269c079cc763639a9b91a25fcfa1743c049c76e43741ef494bd9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://035c337e62e05262a5bd5d3bc85bc9a383c1013001216b429f49cf1e129a0812\",\"dweb:/ipfs/QmU7s4h58Fh2A6mM8yeorZ2ygwEJMQw8zdZLLkHeDoSWxD\"]},\"lib/uniswap-hooks/lib/v4-core/src/libraries/TickBitmap.sol\":{\"keccak256\":\"0x6779f89e28a0b4af6e09d518caf014b7e8fc627400f5561f86fed11635b1458a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a64dee983106de3be3f968be94368c1e37592f5418aa2a39e8dd358d5a962b0d\",\"dweb:/ipfs/QmYuECZTiEeQVxDLYx6pBSSnVrg56Apw75bugQiM3FmGwy\"]},\"lib/uniswap-hooks/lib/v4-core/src/libraries/TickMath.sol\":{\"keccak256\":\"0x4e1a11e154eb06106cb1c4598f06cca5f5ca16eaa33494ba2f0e74981123eca8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a79a57f7b240783b045168d1c4f774ac1812caf8f9a83cb6959a86b0b07b6c70\",\"dweb:/ipfs/QmTb5kvxwDNW8jDuQaqdJ445cCFejNkUqEB17Bjo8UBiva\"]},\"lib/uniswap-hooks/lib/v4-core/src/libraries/UnsafeMath.sol\":{\"keccak256\":\"0xa6e55e0a43a15df2df471d9972cd48f613d07c663ecb8bbeaf7623f6f99bcce4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02ea6e13879fc5a5f35149a2f1cd8af3a1f0877ff69101dad53841d16f515572\",\"dweb:/ipfs/QmcpL4gdG6hL2w1wqs2Vw4J1EFCwBs9T1Qd4p16CtECQkn\"]},\"lib/uniswap-hooks/lib/v4-core/src/types/BalanceDelta.sol\":{\"keccak256\":\"0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9\",\"dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H\"]},\"lib/uniswap-hooks/lib/v4-core/src/types/BeforeSwapDelta.sol\":{\"keccak256\":\"0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782\",\"dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K\"]},\"lib/uniswap-hooks/lib/v4-core/src/types/Currency.sol\":{\"keccak256\":\"0x4a0b84b282577ff6f8acf13ec9f4d32dbb9348748b49611d00e68bee96609c93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45f9d62ab3d51b52957279e353853ba1547c3182c9a1e3d1846ada4a90263b01\",\"dweb:/ipfs/QmS8NG84ccQS1yXVD8cv3eKX7J1UKxuJhbUfHTQR2opKF5\"]},\"lib/uniswap-hooks/lib/v4-core/src/types/PoolId.sol\":{\"keccak256\":\"0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918\",\"dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y\"]},\"lib/uniswap-hooks/lib/v4-core/src/types/PoolKey.sol\":{\"keccak256\":\"0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639\",\"dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi\"]},\"lib/uniswap-hooks/lib/v4-core/src/types/PoolOperation.sol\":{\"keccak256\":\"0x7a1a107fc1f2208abb2c9364c8c54e56e98dca27673e9441bed2b949b6382162\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ad2470383bc5595d5af17840c64971f457adac68895a4db41ba5c71a4478e07\",\"dweb:/ipfs/QmdwKhBHDZFuqXrR2BfDBD9r7rB2ULGQBznsajRTkTmL4c\"]},\"lib/uniswap-hooks/lib/v4-core/src/types/Slot0.sol\":{\"keccak256\":\"0x8b4912fac7e25ea680056748121113f902d56f8b2640f421d5c38d438db11c1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c19b1ff5b951fb54129268d2be37d82c8bb3ea6e29ac9bc78a8a37794fc082b8\",\"dweb:/ipfs/QmTAQ2mUoiT77hoWJAfn9pyoGy47qaevn45QHrbyovGt2C\"]}},\"version\":1}",
    "metadata": {
        "compiler": {
            "version": "0.8.26+commit.8a97fa7a"
        },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "initialOwner",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "constructor"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "AlreadyUnlocked"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "currency0",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "currency1",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "CurrenciesOutOfOrderOrEqual"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "CurrencyNotSettled"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "DelegateCallNotAllowed"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidCaller"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "ManagerLocked"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "MustClearExactPositiveDelta"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NonzeroNativeValue"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "PoolNotInitialized"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "ProtocolFeeCurrencySynced"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint24",
                            "name": "fee",
                            "type": "uint24"
                        }
                    ],
                    "type": "error",
                    "name": "ProtocolFeeTooLarge"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "SwapAmountCannotBeZero"
                },
                {
                    "inputs": [
                        {
                            "internalType": "int24",
                            "name": "tickSpacing",
                            "type": "int24"
                        }
                    ],
                    "type": "error",
                    "name": "TickSpacingTooLarge"
                },
                {
                    "inputs": [
                        {
                            "internalType": "int24",
                            "name": "tickSpacing",
                            "type": "int24"
                        }
                    ],
                    "type": "error",
                    "name": "TickSpacingTooSmall"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "UnauthorizedDynamicLPFeeUpdate"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "spender",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "id",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Approval",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "PoolId",
                            "name": "id",
                            "type": "bytes32",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "sender",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount0",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount1",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Donate",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "PoolId",
                            "name": "id",
                            "type": "bytes32",
                            "indexed": true
                        },
                        {
                            "internalType": "Currency",
                            "name": "currency0",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "Currency",
                            "name": "currency1",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint24",
                            "name": "fee",
                            "type": "uint24",
                            "indexed": false
                        },
                        {
                            "internalType": "int24",
                            "name": "tickSpacing",
                            "type": "int24",
                            "indexed": false
                        },
                        {
                            "internalType": "contract IHooks",
                            "name": "hooks",
                            "type": "address",
                            "indexed": false
                        },
                        {
                            "internalType": "uint160",
                            "name": "sqrtPriceX96",
                            "type": "uint160",
                            "indexed": false
                        },
                        {
                            "internalType": "int24",
                            "name": "tick",
                            "type": "int24",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Initialize",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "PoolId",
                            "name": "id",
                            "type": "bytes32",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "sender",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "int24",
                            "name": "tickLower",
                            "type": "int24",
                            "indexed": false
                        },
                        {
                            "internalType": "int24",
                            "name": "tickUpper",
                            "type": "int24",
                            "indexed": false
                        },
                        {
                            "internalType": "int256",
                            "name": "liquidityDelta",
                            "type": "int256",
                            "indexed": false
                        },
                        {
                            "internalType": "bytes32",
                            "name": "salt",
                            "type": "bytes32",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "ModifyLiquidity",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "bool",
                            "name": "approved",
                            "type": "bool",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "OperatorSet",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "user",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "newOwner",
                            "type": "address",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "OwnershipTransferred",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "protocolFeeController",
                            "type": "address",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "ProtocolFeeControllerUpdated",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "PoolId",
                            "name": "id",
                            "type": "bytes32",
                            "indexed": true
                        },
                        {
                            "internalType": "uint24",
                            "name": "protocolFee",
                            "type": "uint24",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "ProtocolFeeUpdated",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "PoolId",
                            "name": "id",
                            "type": "bytes32",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "sender",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "int128",
                            "name": "amount0",
                            "type": "int128",
                            "indexed": false
                        },
                        {
                            "internalType": "int128",
                            "name": "amount1",
                            "type": "int128",
                            "indexed": false
                        },
                        {
                            "internalType": "uint160",
                            "name": "sqrtPriceX96",
                            "type": "uint160",
                            "indexed": false
                        },
                        {
                            "internalType": "uint128",
                            "name": "liquidity",
                            "type": "uint128",
                            "indexed": false
                        },
                        {
                            "internalType": "int24",
                            "name": "tick",
                            "type": "int24",
                            "indexed": false
                        },
                        {
                            "internalType": "uint24",
                            "name": "fee",
                            "type": "uint24",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Swap",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "caller",
                            "type": "address",
                            "indexed": false
                        },
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "id",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Transfer",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "spender",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "id",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "allowance",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "spender",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "id",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "approve",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "id",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "balanceOf",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "balance",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "id",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "burn"
                },
                {
                    "inputs": [
                        {
                            "internalType": "Currency",
                            "name": "currency",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "clear"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "recipient",
                            "type": "address"
                        },
                        {
                            "internalType": "Currency",
                            "name": "currency",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "collectProtocolFees",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "amountCollected",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct PoolKey",
                            "name": "key",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount0",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount1",
                            "type": "uint256"
                        },
                        {
                            "internalType": "bytes",
                            "name": "hookData",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "donate",
                    "outputs": [
                        {
                            "internalType": "BalanceDelta",
                            "name": "delta",
                            "type": "int256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "slot",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "extsload",
                    "outputs": [
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "startSlot",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "uint256",
                            "name": "nSlots",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "extsload",
                    "outputs": [
                        {
                            "internalType": "bytes32[]",
                            "name": "",
                            "type": "bytes32[]"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32[]",
                            "name": "slots",
                            "type": "bytes32[]"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "extsload",
                    "outputs": [
                        {
                            "internalType": "bytes32[]",
                            "name": "",
                            "type": "bytes32[]"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32[]",
                            "name": "slots",
                            "type": "bytes32[]"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "exttload",
                    "outputs": [
                        {
                            "internalType": "bytes32[]",
                            "name": "",
                            "type": "bytes32[]"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "slot",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "exttload",
                    "outputs": [
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct PoolKey",
                            "name": "key",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "uint160",
                            "name": "sqrtPriceX96",
                            "type": "uint160"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "initialize",
                    "outputs": [
                        {
                            "internalType": "int24",
                            "name": "tick",
                            "type": "int24"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "isOperator",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "isOperator",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "id",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "mint"
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct PoolKey",
                            "name": "key",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct ModifyLiquidityParams",
                            "name": "params",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "int24",
                                    "name": "tickLower",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickUpper",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "int256",
                                    "name": "liquidityDelta",
                                    "type": "int256"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "salt",
                                    "type": "bytes32"
                                }
                            ]
                        },
                        {
                            "internalType": "bytes",
                            "name": "hookData",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "modifyLiquidity",
                    "outputs": [
                        {
                            "internalType": "BalanceDelta",
                            "name": "callerDelta",
                            "type": "int256"
                        },
                        {
                            "internalType": "BalanceDelta",
                            "name": "feesAccrued",
                            "type": "int256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "owner",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "protocolFeeController",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "Currency",
                            "name": "currency",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "protocolFeesAccrued",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "operator",
                            "type": "address"
                        },
                        {
                            "internalType": "bool",
                            "name": "approved",
                            "type": "bool"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "setOperator",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct PoolKey",
                            "name": "key",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "uint24",
                            "name": "newProtocolFee",
                            "type": "uint24"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "setProtocolFee"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "controller",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "setProtocolFeeController"
                },
                {
                    "inputs": [],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "settle",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "recipient",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "settleFor",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes4",
                            "name": "interfaceId",
                            "type": "bytes4"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "supportsInterface",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct PoolKey",
                            "name": "key",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct SwapParams",
                            "name": "params",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bool",
                                    "name": "zeroForOne",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "int256",
                                    "name": "amountSpecified",
                                    "type": "int256"
                                },
                                {
                                    "internalType": "uint160",
                                    "name": "sqrtPriceLimitX96",
                                    "type": "uint160"
                                }
                            ]
                        },
                        {
                            "internalType": "bytes",
                            "name": "hookData",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "swap",
                    "outputs": [
                        {
                            "internalType": "BalanceDelta",
                            "name": "swapDelta",
                            "type": "int256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "Currency",
                            "name": "currency",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "sync"
                },
                {
                    "inputs": [
                        {
                            "internalType": "Currency",
                            "name": "currency",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "take"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "receiver",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "id",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "transfer",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "sender",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "receiver",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "id",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "transferFrom",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "newOwner",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "transferOwnership"
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes",
                            "name": "data",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "unlock",
                    "outputs": [
                        {
                            "internalType": "bytes",
                            "name": "result",
                            "type": "bytes"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct PoolKey",
                            "name": "key",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "uint24",
                            "name": "newDynamicLPFee",
                            "type": "uint24"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "updateDynamicLPFee"
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {
                    "approve(address,uint256,uint256)": {
                        "params": {
                            "amount": "The amount of the token.",
                            "id": "The id of the token.",
                            "spender": "The address of the spender."
                        },
                        "returns": {
                            "_0": "bool True, always"
                        }
                    },
                    "burn(address,uint256,uint256)": {
                        "details": "The id is converted to a uint160 to correspond to a currency address If the upper 12 bytes are not 0, they will be 0-ed out",
                        "params": {
                            "amount": "The amount of currency to burn",
                            "from": "The address to burn the tokens from",
                            "id": "The currency address to burn from ERC6909s, as a uint256"
                        }
                    },
                    "clear(address,uint256)": {
                        "details": "This could be used to clear a balance that is considered dust. Additionally, the amount must be the exact positive balance. This is to enforce that the caller is aware of the amount being cleared."
                    },
                    "collectProtocolFees(address,address,uint256)": {
                        "details": "This will revert if the contract is unlocked",
                        "params": {
                            "amount": "The amount of currency to withdraw",
                            "currency": "The currency to withdraw",
                            "recipient": "The address to receive the protocol fees"
                        },
                        "returns": {
                            "amountCollected": "The amount of currency successfully withdrawn"
                        }
                    },
                    "donate((address,address,uint24,int24,address),uint256,uint256,bytes)": {
                        "details": "Calls to donate can be frontrun adding just-in-time liquidity, with the aim of receiving a portion donated funds. Donors should keep this in mind when designing donation mechanisms.This function donates to in-range LPs at slot0.tick. In certain edge-cases of the swap algorithm, the `sqrtPrice` of a pool can be at the lower boundary of tick `n`, but the `slot0.tick` of the pool is already `n - 1`. In this case a call to `donate` would donate to tick `n - 1` (slot0.tick) not tick `n` (getTickAtSqrtPrice(slot0.sqrtPriceX96)). Read the comments in `Pool.swap()` for more information about this.",
                        "params": {
                            "amount0": "The amount of currency0 to donate",
                            "amount1": "The amount of currency1 to donate",
                            "hookData": "The data to pass through to the donate hooks",
                            "key": "The key of the pool to donate to"
                        },
                        "returns": {
                            "delta": "BalanceDelta The delta of the caller after the donate"
                        }
                    },
                    "extsload(bytes32)": {
                        "params": {
                            "slot": "Key of slot to sload"
                        },
                        "returns": {
                            "_0": "The value of the slot as bytes32"
                        }
                    },
                    "extsload(bytes32,uint256)": {
                        "params": {
                            "nSlots": "Number of slots to load into return value",
                            "startSlot": "Key of slot to start sloading from"
                        },
                        "returns": {
                            "_0": "List of loaded values."
                        }
                    },
                    "extsload(bytes32[])": {
                        "params": {
                            "slots": "List of slots to SLOAD from."
                        },
                        "returns": {
                            "_0": "List of loaded values."
                        }
                    },
                    "exttload(bytes32)": {
                        "params": {
                            "slot": "Key of slot to tload"
                        },
                        "returns": {
                            "_0": "The value of the slot as bytes32"
                        }
                    },
                    "exttload(bytes32[])": {
                        "params": {
                            "slots": "List of slots to tload"
                        },
                        "returns": {
                            "_0": "List of loaded values"
                        }
                    },
                    "initialize((address,address,uint24,int24,address),uint160)": {
                        "details": "A swap fee totaling MAX_SWAP_FEE (100%) makes exact output swaps impossible since the input is entirely consumed by the fee",
                        "params": {
                            "key": "The pool key for the pool to initialize",
                            "sqrtPriceX96": "The initial square root price"
                        },
                        "returns": {
                            "tick": "The initial tick of the pool"
                        }
                    },
                    "mint(address,uint256,uint256)": {
                        "details": "The id is converted to a uint160 to correspond to a currency address If the upper 12 bytes are not 0, they will be 0-ed out",
                        "params": {
                            "amount": "The amount of currency to mint",
                            "id": "The currency address to mint to ERC6909s, as a uint256",
                            "to": "The address to mint the tokens to"
                        }
                    },
                    "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
                        "details": "Poke by calling with a zero liquidityDeltaNote that feesAccrued can be artificially inflated by a malicious actor and integrators should be careful using the value For pools with a single liquidity position, actors can donate to themselves to inflate feeGrowthGlobal (and consequently feesAccrued) atomically donating and collecting fees in the same unlockCallback may make the inflated value more extreme",
                        "params": {
                            "hookData": "The data to pass through to the add/removeLiquidity hooks",
                            "key": "The pool to modify liquidity in",
                            "params": "The parameters for modifying the liquidity"
                        },
                        "returns": {
                            "callerDelta": "The balance delta of the caller of modifyLiquidity. This is the total of both principal, fee deltas, and hook deltas if applicable",
                            "feesAccrued": "The balance delta of the fees generated in the liquidity range. Returned for informational purposes"
                        }
                    },
                    "setOperator(address,bool)": {
                        "params": {
                            "approved": "The approval status.",
                            "operator": "The address of the operator."
                        },
                        "returns": {
                            "_0": "bool True, always"
                        }
                    },
                    "setProtocolFee((address,address,uint24,int24,address),uint24)": {
                        "params": {
                            "key": "The key of the pool to set a protocol fee for",
                            "newProtocolFee": "The fee to set"
                        }
                    },
                    "setProtocolFeeController(address)": {
                        "params": {
                            "controller": "The new protocol fee controller"
                        }
                    },
                    "settle()": {
                        "returns": {
                            "_0": "The amount of currency settled"
                        }
                    },
                    "settleFor(address)": {
                        "params": {
                            "recipient": "The address to credit for the payment"
                        },
                        "returns": {
                            "_0": "The amount of currency settled"
                        }
                    },
                    "swap((address,address,uint24,int24,address),(bool,int256,uint160),bytes)": {
                        "details": "Swapping on low liquidity pools may cause unexpected swap amounts when liquidity available is less than amountSpecified. Additionally note that if interacting with hooks that have the BEFORE_SWAP_RETURNS_DELTA_FLAG or AFTER_SWAP_RETURNS_DELTA_FLAG the hook may alter the swap input/output. Integrators should perform checks on the returned swapDelta.",
                        "params": {
                            "hookData": "The data to pass through to the swap hooks",
                            "key": "The pool to swap in",
                            "params": "The parameters for swapping"
                        },
                        "returns": {
                            "swapDelta": "The balance delta of the address swapping"
                        }
                    },
                    "sync(address)": {
                        "details": "This MUST be called before any ERC20 tokens are sent into the contract, but can be skipped for native tokens because the amount to settle is determined by the sent value. However, if an ERC20 token has been synced and not settled, and the caller instead wants to settle native funds, this function can be called with the native currency to then be able to settle the native currency"
                    },
                    "take(address,address,uint256)": {
                        "details": "Will revert if the requested amount is not available, consider using `mint` insteadCan also be used as a mechanism for free flash loans",
                        "params": {
                            "amount": "The amount of currency to withdraw",
                            "currency": "The currency to withdraw from the pool manager",
                            "to": "The address to withdraw to"
                        }
                    },
                    "transfer(address,uint256,uint256)": {
                        "params": {
                            "amount": "The amount of the token.",
                            "id": "The id of the token.",
                            "receiver": "The address of the receiver."
                        },
                        "returns": {
                            "_0": "bool True, always, unless the function reverts"
                        }
                    },
                    "transferFrom(address,address,uint256,uint256)": {
                        "params": {
                            "amount": "The amount of the token.",
                            "id": "The id of the token.",
                            "receiver": "The address of the receiver.",
                            "sender": "The address of the sender."
                        },
                        "returns": {
                            "_0": "bool True, always, unless the function reverts"
                        }
                    },
                    "unlock(bytes)": {
                        "details": "The only functions callable without an unlocking are `initialize` and `updateDynamicLPFee`",
                        "params": {
                            "data": "Any data to pass to the callback, via `IUnlockCallback(msg.sender).unlockCallback(data)`"
                        },
                        "returns": {
                            "result": "The data returned by the call to `IUnlockCallback(msg.sender).unlockCallback(data)`"
                        }
                    },
                    "updateDynamicLPFee((address,address,uint24,int24,address),uint24)": {
                        "details": "A swap fee totaling MAX_SWAP_FEE (100%) makes exact output swaps impossible since the input is entirely consumed by the fee",
                        "params": {
                            "key": "The key of the pool to update dynamic LP fees for",
                            "newDynamicLPFee": "The new dynamic pool LP fee"
                        }
                    }
                },
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {
                    "allowance(address,address,uint256)": {
                        "notice": "Spender allowance of an id."
                    },
                    "approve(address,uint256,uint256)": {
                        "notice": "Approves an amount of an id to a spender."
                    },
                    "balanceOf(address,uint256)": {
                        "notice": "Owner balance of an id."
                    },
                    "burn(address,uint256,uint256)": {
                        "notice": "Called by the user to move value from ERC6909 balance"
                    },
                    "clear(address,uint256)": {
                        "notice": "WARNING - Any currency that is cleared, will be non-retrievable, and locked in the contract permanently. A call to clear will zero out a positive balance WITHOUT a corresponding transfer."
                    },
                    "collectProtocolFees(address,address,uint256)": {
                        "notice": "Collects the protocol fees for a given recipient and currency, returning the amount collected"
                    },
                    "donate((address,address,uint24,int24,address),uint256,uint256,bytes)": {
                        "notice": "Donate the given currency amounts to the in-range liquidity providers of a pool"
                    },
                    "extsload(bytes32)": {
                        "notice": "Called by external contracts to access granular pool state"
                    },
                    "extsload(bytes32,uint256)": {
                        "notice": "Called by external contracts to access granular pool state"
                    },
                    "extsload(bytes32[])": {
                        "notice": "Called by external contracts to access sparse pool state"
                    },
                    "exttload(bytes32)": {
                        "notice": "Called by external contracts to access transient storage of the contract"
                    },
                    "exttload(bytes32[])": {
                        "notice": "Called by external contracts to access sparse transient pool state"
                    },
                    "initialize((address,address,uint24,int24,address),uint160)": {
                        "notice": "Initialize the state for a given pool ID"
                    },
                    "isOperator(address,address)": {
                        "notice": "Checks if a spender is approved by an owner as an operator"
                    },
                    "mint(address,uint256,uint256)": {
                        "notice": "Called by the user to move value into ERC6909 balance"
                    },
                    "modifyLiquidity((address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
                        "notice": "Modify the liquidity for the given pool"
                    },
                    "protocolFeeController()": {
                        "notice": "Returns the current protocol fee controller address"
                    },
                    "protocolFeesAccrued(address)": {
                        "notice": "Given a currency address, returns the protocol fees accrued in that currency"
                    },
                    "setOperator(address,bool)": {
                        "notice": "Sets or removes an operator for the caller."
                    },
                    "setProtocolFee((address,address,uint24,int24,address),uint24)": {
                        "notice": "Sets the protocol fee for the given pool"
                    },
                    "setProtocolFeeController(address)": {
                        "notice": "Sets the protocol fee controller"
                    },
                    "settle()": {
                        "notice": "Called by the user to pay what is owed"
                    },
                    "settleFor(address)": {
                        "notice": "Called by the user to pay on behalf of another address"
                    },
                    "swap((address,address,uint24,int24,address),(bool,int256,uint160),bytes)": {
                        "notice": "Swap against the given pool"
                    },
                    "sync(address)": {
                        "notice": "Writes the current ERC20 balance of the specified currency to transient storage This is used to checkpoint balances for the manager and derive deltas for the caller."
                    },
                    "take(address,address,uint256)": {
                        "notice": "Called by the user to net out some value owed to the user"
                    },
                    "transfer(address,uint256,uint256)": {
                        "notice": "Transfers an amount of an id from the caller to a receiver."
                    },
                    "transferFrom(address,address,uint256,uint256)": {
                        "notice": "Transfers an amount of an id from a sender to a receiver."
                    },
                    "unlock(bytes)": {
                        "notice": "All interactions on the contract that account deltas require unlocking. A caller that calls `unlock` must implement `IUnlockCallback(msg.sender).unlockCallback(data)`, where they interact with the remaining functions on this contract."
                    },
                    "updateDynamicLPFee((address,address,uint24,int24,address),uint24)": {
                        "notice": "Updates the pools lp fees for the a pool that has enabled dynamic lp fees."
                    }
                },
                "version": 1
            }
        },
        "settings": {
            "remappings": [
                "@ensdomains/=lib/uniswap-hooks/lib/v4-core/node_modules/@ensdomains/",
                "@openzeppelin/contracts/=lib/uniswap-hooks/lib/v4-core/lib/openzeppelin-contracts/contracts/",
                "@openzeppelin/uniswap-hooks/=lib/uniswap-hooks/",
                "@uniswap/v4-core/=lib/uniswap-hooks/lib/v4-core/",
                "@uniswap/v4-periphery/=lib/uniswap-hooks/lib/v4-periphery/",
                "ds-test/=lib/uniswap-hooks/lib/v4-core/lib/forge-std/lib/ds-test/src/",
                "erc4626-tests/=lib/uniswap-hooks/lib/openzeppelin-contracts/lib/erc4626-tests/",
                "forge-gas-snapshot/=lib/uniswap-hooks/lib/v4-periphery/lib/permit2/lib/forge-gas-snapshot/src/",
                "forge-std/=lib/forge-std/src/",
                "halmos-cheatcodes/=lib/uniswap-hooks/lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/",
                "hardhat/=lib/uniswap-hooks/lib/v4-core/node_modules/hardhat/",
                "hookmate/=lib/hookmate/src/",
                "openzeppelin-contracts/=lib/uniswap-hooks/lib/openzeppelin-contracts/",
                "openzeppelin/=lib/uniswap-hooks/lib/openzeppelin-contracts/contracts/",
                "permit2/=lib/uniswap-hooks/lib/v4-periphery/lib/permit2/",
                "solmate/=lib/uniswap-hooks/lib/v4-core/lib/solmate/",
                "uniswap-hooks/=lib/uniswap-hooks/src/",
                "v4-core/=lib/uniswap-hooks/lib/v4-core/",
                "v4-periphery/=lib/uniswap-hooks/lib/v4-periphery/"
            ],
            "optimizer": {
                "enabled": true,
                "runs": 20000
            },
            "metadata": {
                "bytecodeHash": "none"
            },
            "compilationTarget": {
                "lib/uniswap-hooks/lib/v4-core/src/PoolManager.sol": "PoolManager"
            },
            "evmVersion": "cancun",
            "libraries": {}
        },
        "sources": {
            "lib/uniswap-hooks/lib/v4-core/lib/solmate/src/auth/Owned.sol": {
                "keccak256": "0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea",
                "urls": [
                    "bzz-raw://1ff52bbee698b9cf9e4574615e6550be0887ccf355f6571e23d6f25b332e79b4",
                    "dweb:/ipfs/QmVorA2apojVRStzS7h8aFccR3Uv32G6HVtBtFHZrE7YXx"
                ],
                "license": "AGPL-3.0-only"
            },
            "lib/uniswap-hooks/lib/v4-core/src/ERC6909.sol": {
                "keccak256": "0x22476a1c183be1b547a509b3e6906abaccb6408375f798fce805ff7877aca09f",
                "urls": [
                    "bzz-raw://e85580e1563ea0556705132fb6bd038ca4aa355749039923853ebcb76b7c84e6",
                    "dweb:/ipfs/QmVoxPrbagRKpFdRWoaCSKmStYLZrhNFuedcuyGycSGR7q"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/ERC6909Claims.sol": {
                "keccak256": "0xf496ef3a5a9bf4f4aa2eec951dbeff09a01ef058bb9f64b1664cf46c9e85cd49",
                "urls": [
                    "bzz-raw://2a0a97c359a7a4c526ba9fc4ceb20af8050f9cf7886ea7e1f38c9c10b4a3750c",
                    "dweb:/ipfs/QmPy6pCQbvzCdJRqG1thHRSwEZoLBAaLo3KQnueL3wxb8i"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/Extsload.sol": {
                "keccak256": "0x784074bd04a1541c7c6ace074e30245746133fd37c3ba16b025dce394db986ce",
                "urls": [
                    "bzz-raw://35f1f4fb306bf01e98b7eca012b85f3ab978b39fa5136193363e2519c4435e51",
                    "dweb:/ipfs/QmeGrjGMt71dJymVhkEadh5CuCW5GxRqNEZLi5AJxvC5tU"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/Exttload.sol": {
                "keccak256": "0x769ee2733a08112c652274f4b972c45fb56cc46109f233b9a30f81561b15dd54",
                "urls": [
                    "bzz-raw://dd19e88d50ae77c1ed5581baca1c75b3fb828d0b58cded90188d55c4e336266c",
                    "dweb:/ipfs/Qmc8YM6Tfpwwa4qivHHzRxNdhZzdzGiD7VexWsDvkaQTxG"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/NoDelegateCall.sol": {
                "keccak256": "0xacb81aecb7c74c86650a035462dae38c313b4b7b5842e14b645f864f61da2b51",
                "urls": [
                    "bzz-raw://363a0e15fc30ea68a5d52a78772facecde6433ea156e3ec2ce25068c97cd5ad6",
                    "dweb:/ipfs/QmYhWaF3wH71SDx5TZr9qEXXQf5FYQvdjoo3B2qWiAbm18"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/PoolManager.sol": {
                "keccak256": "0xf9ff5d5e261a21a5e72a01c5badd988beeff437e0f6b82fd56f80be42d727c07",
                "urls": [
                    "bzz-raw://4a92a25102c73245e1343f0dbc8400b8bac3c464ba064aa5574b9584a12e6c72",
                    "dweb:/ipfs/QmfCcvspZ8XzDeQjEd2FfM76wzkfE9KDgBoqAcqhf3nsnu"
                ],
                "license": "BUSL-1.1"
            },
            "lib/uniswap-hooks/lib/v4-core/src/ProtocolFees.sol": {
                "keccak256": "0x81362ef1d19670b41cefc2b6f2dc0333b6743fe39a1929edd36bd9b6a1111755",
                "urls": [
                    "bzz-raw://de483bbd8bf9a53b9644d7f9a6a6fe77ae527b755cf29e1db8725de89e70c7aa",
                    "dweb:/ipfs/Qmex3PcgJGbYsuDNaMXc8mg5fW1DNaPGiNToPpAAzz6GEq"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/interfaces/IExtsload.sol": {
                "keccak256": "0x80b53ca4907d6f0088c3b931f2b72cad1dc4615a95094d96bd0fb8dff8d5ba43",
                "urls": [
                    "bzz-raw://375c69148622aab7a3537d5fd37d373a8e9731022c8d87bdaee46233b0a99fe1",
                    "dweb:/ipfs/QmXFjdoYRxsA5B1kyuxEXgNf3FBoL1zPvy26Qy8EtpdFRN"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/interfaces/IExttload.sol": {
                "keccak256": "0xc6b68283ebd8d1c789df536756726eed51c589134bb20821b236a0d22a135937",
                "urls": [
                    "bzz-raw://294394f72dfc219689209f4130d85601dfd0d63c8d47578050d312db70f9b6c8",
                    "dweb:/ipfs/QmTDMQ3oxCGHgEBU48a3Lp4S1rRjc8vVCxkhE5ZNej1bsY"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/interfaces/IHooks.sol": {
                "keccak256": "0xc131ffa2d04c10a012fe715fe2c115811526b7ea34285cf0a04ce7ce8320da8d",
                "urls": [
                    "bzz-raw://3b212358897db5d99c21244d88f97b2e788527552cb430629b472a8cc6289aec",
                    "dweb:/ipfs/QmQtwV4dDe2RYk2ErLpaAX7U82jWh1L6Lw2HRuKDvBi84G"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/interfaces/IPoolManager.sol": {
                "keccak256": "0xbdab3544da3d32dfdf7457baa94e17d5a3012952428559e013ffac45d067038e",
                "urls": [
                    "bzz-raw://ce95ff864468e37c76adf71df061d4f3d6f3a5ec1f9bc3aea090463bc72798f4",
                    "dweb:/ipfs/QmSbWh1pLbz51yQF4HEu5NRhr8XVv9JYGEw1hq1HudAnCi"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/interfaces/IProtocolFees.sol": {
                "keccak256": "0x32a666e588a2f66334430357bb1e2424fe7eebeb98a3364b1dd16eb6ccca9848",
                "urls": [
                    "bzz-raw://85751d302125881f72e5f8af051c2d5d9b1f606ebaea8ca7d04fccdd27cc252d",
                    "dweb:/ipfs/QmeRwomeh9NWm6A6fgNA4KZPQZHPpdKsPQyYsHSFmvud7J"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/interfaces/callback/IUnlockCallback.sol": {
                "keccak256": "0x58c82f2bd9d7c097ed09bd0991fedc403b0ec270eb3d0158bfb095c06a03d719",
                "urls": [
                    "bzz-raw://91168ca26a10980df2cdc3fbfe8ddf372c002b7ef19e3c59a0c9870d64198f1b",
                    "dweb:/ipfs/QmUSpaM825vd1SwvF38esgbdLgYiPwefKaFERTWvUi6uSK"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/interfaces/external/IERC20Minimal.sol": {
                "keccak256": "0xeccadf1bf69ba2eb51f2fe4fa511bc7bb05bbd6b9f9a3cb8e5d83d9582613e0f",
                "urls": [
                    "bzz-raw://118757369892687b99ef46ce28d6861f62c098285bd7687a4f17f7e44e5f81de",
                    "dweb:/ipfs/QmUxqbYqQtcEwwFbb9e6BBMePEaSgN8C45v6RKubD4ib8d"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/interfaces/external/IERC6909Claims.sol": {
                "keccak256": "0xa586f345739e52b0488a0fe40b6e375cce67fdd25758408b0efcb5133ad96a48",
                "urls": [
                    "bzz-raw://e8c557b7e52abdbbd82e415a1acc27921446a7fd090b7d4877e52be72619547f",
                    "dweb:/ipfs/QmXE2KNPbXmGX8BQF3ei6zhzRTnhoTQg39XmqMnkhbr6QK"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/libraries/BitMath.sol": {
                "keccak256": "0x51b9be4f5c4fd3e80cbc9631a65244a2eb2be250b6b7f128a2035080e18aee8d",
                "urls": [
                    "bzz-raw://fe98bbd5498e912146b9319827fc63621eb66ff55d5baae0fa02a7a972ab8d1e",
                    "dweb:/ipfs/QmY5hCuyrtgsJtk4AavrxcvBkRrChfr4N6ZnhdC8roPpNi"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/libraries/CurrencyDelta.sol": {
                "keccak256": "0x80dbd898cf0f90c5c27192689b16c34edc765d6ab21b8358e3bb792c7fef238c",
                "urls": [
                    "bzz-raw://107698da024313f132d9fe28deb920b5c03d14624889c3ce5720e588f03635bb",
                    "dweb:/ipfs/QmQteUbhj5SsWbvSF6U8niBUSrETqVbEwULc8E7vS4Kbnn"
                ],
                "license": "BUSL-1.1"
            },
            "lib/uniswap-hooks/lib/v4-core/src/libraries/CurrencyReserves.sol": {
                "keccak256": "0x1576616129933fcdf3b684cea33cffd9c95e18fafbd2832a8c48ac3d8526d4c3",
                "urls": [
                    "bzz-raw://33b050efb9b81803b18f562271e7cca2ec5362c4d505860d6419b4a345636725",
                    "dweb:/ipfs/QmQtFtTwKZ5pFVGD2ENDUXvp7ECFvzqeCuJ1miJcUHdmiX"
                ],
                "license": "BUSL-1.1"
            },
            "lib/uniswap-hooks/lib/v4-core/src/libraries/CustomRevert.sol": {
                "keccak256": "0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de",
                "urls": [
                    "bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd",
                    "dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/libraries/FixedPoint128.sol": {
                "keccak256": "0xad236e10853f4b4b20a35a9bb52b857c4fc79874846b7e444e06ead7f2630542",
                "urls": [
                    "bzz-raw://0de1f9a06520b1a689660943faa14fc0b8344ab41fab9e6012ea34bff4b9b3eb",
                    "dweb:/ipfs/QmRNMPTyko7W6d6KxuTsnDBa9oZgDK4xiwRRq3H9ASTbwy"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/libraries/FixedPoint96.sol": {
                "keccak256": "0xef5c3fd41aee26bb12aa1c32873cfee88e67eddfe7c2b32283786265ac669741",
                "urls": [
                    "bzz-raw://4de298d02f662a1c36c7be0a150f18c2a161408a5d3e48432e707efd01fac9a4",
                    "dweb:/ipfs/QmSiM4oeMmLVKmAtJXz2feYkv4R9ZcyBpkTRW5Nhw5KDyJ"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/libraries/FullMath.sol": {
                "keccak256": "0x4fc73a00817193fd3cac1cc03d8167d21af97d75f1815a070ee31a90c702b4c2",
                "urls": [
                    "bzz-raw://c3b2d66d36b1ad56b1ab6e2eb8a816740877b40b461c93f125e88621c8378e52",
                    "dweb:/ipfs/QmPGvMZzKQvNiWKd8aRzzdW7oAizwrMgcMtnaworDkVHFC"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/libraries/Hooks.sol": {
                "keccak256": "0xd679b4b2d429689bc44f136050ebc958fb2d7d0d3a3c7b3e48c08ab4fba09aaa",
                "urls": [
                    "bzz-raw://287190cb72840e5eb63cc7a8a1d0b9150af17d8e4ea0323f47c7e7928f2033cb",
                    "dweb:/ipfs/QmVfqWBnAQM2jUcuREDdvjcP21gNuLU35CoL3NG5CEhNcx"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/libraries/LPFeeLibrary.sol": {
                "keccak256": "0xbf6914e01014e7c1044111feb7df7a3d96bb503b3da827ad8464b1955580d13b",
                "urls": [
                    "bzz-raw://33823c20a91882c9aacdcbb02f0558c05209f4d5954aa6dd4fa17c95664db475",
                    "dweb:/ipfs/QmR7owkFgpfztpp1QUg3ut3nw9iPVQqLGP4hzgmZtRUQ2J"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/libraries/LiquidityMath.sol": {
                "keccak256": "0x000ef2eadcc1eb7b2c18a77655f94e76e0e860f605783484657ef65fd6eda353",
                "urls": [
                    "bzz-raw://a766b620a7a22798b43c6c1f23b5c6cff0ebf588deb89842bad05208d448cd99",
                    "dweb:/ipfs/QmVKjaFJdzkqA3ey2Byum8iTCMssWVD8MmVC8rw62Tj5WD"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/libraries/Lock.sol": {
                "keccak256": "0x9338be4b5695f1da5f3d3f7a3eeaf7a356c1045458289586ac0cbe9cef77c6d5",
                "urls": [
                    "bzz-raw://485ec42ed6155469d612a9a0c18068ebfbad74448792a338a435503de3ef1b2c",
                    "dweb:/ipfs/QmVnnv5u74MYatfRmBgrcfFYQcsMAJMG9jQ6ju8UiydKNF"
                ],
                "license": "BUSL-1.1"
            },
            "lib/uniswap-hooks/lib/v4-core/src/libraries/NonzeroDeltaCount.sol": {
                "keccak256": "0x0666ebd5d3528d7d52c48538296367a4cff97a578cf13365c51983fae3219b87",
                "urls": [
                    "bzz-raw://d27f1be3bd09d85c53d3e6a539dd6529ddd8b2b764ccb47fd7765fc81f9add59",
                    "dweb:/ipfs/QmQdZujNXhKEXQBkKtF5jbdvo1yXMqPDUoBBaF9S5u3Kpm"
                ],
                "license": "BUSL-1.1"
            },
            "lib/uniswap-hooks/lib/v4-core/src/libraries/ParseBytes.sol": {
                "keccak256": "0x7533b13f53ee2c2c55500100b22ffd6e37e7523c27874edc98663d53a8672b15",
                "urls": [
                    "bzz-raw://82449058634fde28a085f3c59a6a5f412550c02181590593fd84c3e8b329aa17",
                    "dweb:/ipfs/Qmev4E9Au6SsE4wsArChCwfg94KhHc5gYsEsZUnjF5sRLa"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/libraries/Pool.sol": {
                "keccak256": "0xb8191707c5913f5e2f589cec5167e3fac4a5b86bd84f61fdba0fbe6a8ce8a3a0",
                "urls": [
                    "bzz-raw://a609f9c365f05becf61877d9dc767e7825bce8c34607dbfc0f0437a71f6ff407",
                    "dweb:/ipfs/QmThDUzLePs2Hbp6XTpRSHT67rdsjQLhdmS6krm8cpKSey"
                ],
                "license": "BUSL-1.1"
            },
            "lib/uniswap-hooks/lib/v4-core/src/libraries/Position.sol": {
                "keccak256": "0xddab2a831f1befb6abf5567e77c4582169ca8156cf69eb4f22d8e87f7226a3f9",
                "urls": [
                    "bzz-raw://c79fe61b50f3b70cff503abfa6f5643fcbefb9b794855bee1019b1e6d9c083b2",
                    "dweb:/ipfs/QmbKmYNQesaMz8bo1b7TMHQcAwaDd3eDPrE5pAdPPZTtk5"
                ],
                "license": "BUSL-1.1"
            },
            "lib/uniswap-hooks/lib/v4-core/src/libraries/ProtocolFeeLibrary.sol": {
                "keccak256": "0xf483001899229ab10f5a626fe1c5866134d9e965b48ce6cf55ce0d7f74f7d8ec",
                "urls": [
                    "bzz-raw://6ba9211a7f69bbb44649c35211eb29d193c09032ec600064ef9d04b4625dd8ba",
                    "dweb:/ipfs/QmQSjQvtguYgMJSkkKRhHjxasfX9xfTbrbcZ1QmjUVb787"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/libraries/SafeCast.sol": {
                "keccak256": "0x42c4a24f996a14d358be397b71f7ec9d7daf666aaec78002c63315a6ee67aa86",
                "urls": [
                    "bzz-raw://c3db86e2ba3679105fc32edec656c70282e1fede6cab11217702443f6c26fa59",
                    "dweb:/ipfs/QmX4yaaSPdKQzYNRsezjTvZKsubzS8JRTEGFD3fPpTTCcj"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/libraries/SqrtPriceMath.sol": {
                "keccak256": "0xf8079fe6e3460db495451d06b1705e18f1c4075c1af96a31ad313545f7082982",
                "urls": [
                    "bzz-raw://582fc51546723a0a8acccf782f69b530bacf9b3ef929458e82569b7121f0b138",
                    "dweb:/ipfs/QmSBXcmqZdFsM7M4sRaiyQAxykCeMNFKyKgBcwSMTw1bcF"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/libraries/SwapMath.sol": {
                "keccak256": "0x6baa782ae523269c079cc763639a9b91a25fcfa1743c049c76e43741ef494bd9",
                "urls": [
                    "bzz-raw://035c337e62e05262a5bd5d3bc85bc9a383c1013001216b429f49cf1e129a0812",
                    "dweb:/ipfs/QmU7s4h58Fh2A6mM8yeorZ2ygwEJMQw8zdZLLkHeDoSWxD"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/libraries/TickBitmap.sol": {
                "keccak256": "0x6779f89e28a0b4af6e09d518caf014b7e8fc627400f5561f86fed11635b1458a",
                "urls": [
                    "bzz-raw://a64dee983106de3be3f968be94368c1e37592f5418aa2a39e8dd358d5a962b0d",
                    "dweb:/ipfs/QmYuECZTiEeQVxDLYx6pBSSnVrg56Apw75bugQiM3FmGwy"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/libraries/TickMath.sol": {
                "keccak256": "0x4e1a11e154eb06106cb1c4598f06cca5f5ca16eaa33494ba2f0e74981123eca8",
                "urls": [
                    "bzz-raw://a79a57f7b240783b045168d1c4f774ac1812caf8f9a83cb6959a86b0b07b6c70",
                    "dweb:/ipfs/QmTb5kvxwDNW8jDuQaqdJ445cCFejNkUqEB17Bjo8UBiva"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/libraries/UnsafeMath.sol": {
                "keccak256": "0xa6e55e0a43a15df2df471d9972cd48f613d07c663ecb8bbeaf7623f6f99bcce4",
                "urls": [
                    "bzz-raw://02ea6e13879fc5a5f35149a2f1cd8af3a1f0877ff69101dad53841d16f515572",
                    "dweb:/ipfs/QmcpL4gdG6hL2w1wqs2Vw4J1EFCwBs9T1Qd4p16CtECQkn"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/types/BalanceDelta.sol": {
                "keccak256": "0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f",
                "urls": [
                    "bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9",
                    "dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/types/BeforeSwapDelta.sol": {
                "keccak256": "0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78",
                "urls": [
                    "bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782",
                    "dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/types/Currency.sol": {
                "keccak256": "0x4a0b84b282577ff6f8acf13ec9f4d32dbb9348748b49611d00e68bee96609c93",
                "urls": [
                    "bzz-raw://45f9d62ab3d51b52957279e353853ba1547c3182c9a1e3d1846ada4a90263b01",
                    "dweb:/ipfs/QmS8NG84ccQS1yXVD8cv3eKX7J1UKxuJhbUfHTQR2opKF5"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/types/PoolId.sol": {
                "keccak256": "0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af",
                "urls": [
                    "bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918",
                    "dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/types/PoolKey.sol": {
                "keccak256": "0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786",
                "urls": [
                    "bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639",
                    "dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/types/PoolOperation.sol": {
                "keccak256": "0x7a1a107fc1f2208abb2c9364c8c54e56e98dca27673e9441bed2b949b6382162",
                "urls": [
                    "bzz-raw://4ad2470383bc5595d5af17840c64971f457adac68895a4db41ba5c71a4478e07",
                    "dweb:/ipfs/QmdwKhBHDZFuqXrR2BfDBD9r7rB2ULGQBznsajRTkTmL4c"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/types/Slot0.sol": {
                "keccak256": "0x8b4912fac7e25ea680056748121113f902d56f8b2640f421d5c38d438db11c1b",
                "urls": [
                    "bzz-raw://c19b1ff5b951fb54129268d2be37d82c8bb3ea6e29ac9bc78a8a37794fc082b8",
                    "dweb:/ipfs/QmTAQ2mUoiT77hoWJAfn9pyoGy47qaevn45QHrbyovGt2C"
                ],
                "license": "MIT"
            }
        },
        "version": 1
    },
    "id": 45
}
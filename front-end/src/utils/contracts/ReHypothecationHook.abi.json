{
    "abi": [
        {
            "type": "constructor",
            "inputs": [
                {
                    "name": "_poolManager",
                    "type": "address",
                    "internalType": "contract IPoolManager"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "addReHypothecatedLiquidity",
            "inputs": [
                {
                    "name": "liquidity",
                    "type": "uint128",
                    "internalType": "uint128"
                }
            ],
            "outputs": [
                {
                    "name": "delta",
                    "type": "int256",
                    "internalType": "BalanceDelta"
                }
            ],
            "stateMutability": "payable"
        },
        {
            "type": "function",
            "name": "afterAddLiquidity",
            "inputs": [
                {
                    "name": "sender",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "key",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "tuple",
                    "internalType": "struct ModifyLiquidityParams",
                    "components": [
                        {
                            "name": "tickLower",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "tickUpper",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "liquidityDelta",
                            "type": "int256",
                            "internalType": "int256"
                        },
                        {
                            "name": "salt",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        }
                    ]
                },
                {
                    "name": "delta0",
                    "type": "int256",
                    "internalType": "BalanceDelta"
                },
                {
                    "name": "delta1",
                    "type": "int256",
                    "internalType": "BalanceDelta"
                },
                {
                    "name": "hookData",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                },
                {
                    "name": "",
                    "type": "int256",
                    "internalType": "BalanceDelta"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "afterDonate",
            "inputs": [
                {
                    "name": "sender",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "key",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "amount0",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "amount1",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "hookData",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "afterInitialize",
            "inputs": [
                {
                    "name": "sender",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "key",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "sqrtPriceX96",
                    "type": "uint160",
                    "internalType": "uint160"
                },
                {
                    "name": "tick",
                    "type": "int24",
                    "internalType": "int24"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "afterRemoveLiquidity",
            "inputs": [
                {
                    "name": "sender",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "key",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "tuple",
                    "internalType": "struct ModifyLiquidityParams",
                    "components": [
                        {
                            "name": "tickLower",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "tickUpper",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "liquidityDelta",
                            "type": "int256",
                            "internalType": "int256"
                        },
                        {
                            "name": "salt",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        }
                    ]
                },
                {
                    "name": "delta0",
                    "type": "int256",
                    "internalType": "BalanceDelta"
                },
                {
                    "name": "delta1",
                    "type": "int256",
                    "internalType": "BalanceDelta"
                },
                {
                    "name": "hookData",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                },
                {
                    "name": "",
                    "type": "int256",
                    "internalType": "BalanceDelta"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "afterSwap",
            "inputs": [
                {
                    "name": "sender",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "key",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "tuple",
                    "internalType": "struct SwapParams",
                    "components": [
                        {
                            "name": "zeroForOne",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "amountSpecified",
                            "type": "int256",
                            "internalType": "int256"
                        },
                        {
                            "name": "sqrtPriceLimitX96",
                            "type": "uint160",
                            "internalType": "uint160"
                        }
                    ]
                },
                {
                    "name": "delta",
                    "type": "int256",
                    "internalType": "BalanceDelta"
                },
                {
                    "name": "hookData",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                },
                {
                    "name": "",
                    "type": "int128",
                    "internalType": "int128"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "afterSwapCount",
            "inputs": [
                {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "PoolId"
                }
            ],
            "outputs": [
                {
                    "name": "count",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "allowance",
            "inputs": [
                {
                    "name": "owner",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "spender",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "approve",
            "inputs": [
                {
                    "name": "spender",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "value",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "balanceOf",
            "inputs": [
                {
                    "name": "account",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "beforeAddLiquidity",
            "inputs": [
                {
                    "name": "sender",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "key",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "tuple",
                    "internalType": "struct ModifyLiquidityParams",
                    "components": [
                        {
                            "name": "tickLower",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "tickUpper",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "liquidityDelta",
                            "type": "int256",
                            "internalType": "int256"
                        },
                        {
                            "name": "salt",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        }
                    ]
                },
                {
                    "name": "hookData",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "beforeAddLiquidityCount",
            "inputs": [
                {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "PoolId"
                }
            ],
            "outputs": [
                {
                    "name": "count",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "beforeDonate",
            "inputs": [
                {
                    "name": "sender",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "key",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "amount0",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "amount1",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "hookData",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "beforeInitialize",
            "inputs": [
                {
                    "name": "sender",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "key",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "sqrtPriceX96",
                    "type": "uint160",
                    "internalType": "uint160"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "beforeRemoveLiquidity",
            "inputs": [
                {
                    "name": "sender",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "key",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "tuple",
                    "internalType": "struct ModifyLiquidityParams",
                    "components": [
                        {
                            "name": "tickLower",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "tickUpper",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "liquidityDelta",
                            "type": "int256",
                            "internalType": "int256"
                        },
                        {
                            "name": "salt",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        }
                    ]
                },
                {
                    "name": "hookData",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "beforeRemoveLiquidityCount",
            "inputs": [
                {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "PoolId"
                }
            ],
            "outputs": [
                {
                    "name": "count",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "beforeSwap",
            "inputs": [
                {
                    "name": "sender",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "key",
                    "type": "tuple",
                    "internalType": "struct PoolKey",
                    "components": [
                        {
                            "name": "currency0",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "currency1",
                            "type": "address",
                            "internalType": "Currency"
                        },
                        {
                            "name": "fee",
                            "type": "uint24",
                            "internalType": "uint24"
                        },
                        {
                            "name": "tickSpacing",
                            "type": "int24",
                            "internalType": "int24"
                        },
                        {
                            "name": "hooks",
                            "type": "address",
                            "internalType": "contract IHooks"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "tuple",
                    "internalType": "struct SwapParams",
                    "components": [
                        {
                            "name": "zeroForOne",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "amountSpecified",
                            "type": "int256",
                            "internalType": "int256"
                        },
                        {
                            "name": "sqrtPriceLimitX96",
                            "type": "uint160",
                            "internalType": "uint160"
                        }
                    ]
                },
                {
                    "name": "hookData",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                },
                {
                    "name": "",
                    "type": "int256",
                    "internalType": "BeforeSwapDelta"
                },
                {
                    "name": "",
                    "type": "uint24",
                    "internalType": "uint24"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "beforeSwapCount",
            "inputs": [
                {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "PoolId"
                }
            ],
            "outputs": [
                {
                    "name": "count",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "decimals",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint8",
                    "internalType": "uint8"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getHookPermissions",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct Hooks.Permissions",
                    "components": [
                        {
                            "name": "beforeInitialize",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "afterInitialize",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "beforeAddLiquidity",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "afterAddLiquidity",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "beforeRemoveLiquidity",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "afterRemoveLiquidity",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "beforeSwap",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "afterSwap",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "beforeDonate",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "afterDonate",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "beforeSwapReturnDelta",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "afterSwapReturnDelta",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "afterAddLiquidityReturnDelta",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "afterRemoveLiquidityReturnDelta",
                            "type": "bool",
                            "internalType": "bool"
                        }
                    ]
                }
            ],
            "stateMutability": "pure"
        },
        {
            "type": "function",
            "name": "getTickLower",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "int24",
                    "internalType": "int24"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getTickUpper",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "int24",
                    "internalType": "int24"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getVaultAddress",
            "inputs": [
                {
                    "name": "currency",
                    "type": "address",
                    "internalType": "Currency"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "name",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "poolManager",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "contract IPoolManager"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "removeReHypothecatedLiquidity",
            "inputs": [
                {
                    "name": "owner",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "delta",
                    "type": "int256",
                    "internalType": "BalanceDelta"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "setVaults",
            "inputs": [
                {
                    "name": "vault0_",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "vault1_",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "symbol",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "totalSupply",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "transfer",
            "inputs": [
                {
                    "name": "to",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "value",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "transferFrom",
            "inputs": [
                {
                    "name": "from",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "to",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "value",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "event",
            "name": "Approval",
            "inputs": [
                {
                    "name": "owner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "spender",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "value",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Transfer",
            "inputs": [
                {
                    "name": "from",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "to",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "value",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "error",
            "name": "AddressEmptyCode",
            "inputs": [
                {
                    "name": "target",
                    "type": "address",
                    "internalType": "address"
                }
            ]
        },
        {
            "type": "error",
            "name": "AddressInsufficientBalance",
            "inputs": [
                {
                    "name": "account",
                    "type": "address",
                    "internalType": "address"
                }
            ]
        },
        {
            "type": "error",
            "name": "AlreadyInitialized",
            "inputs": []
        },
        {
            "type": "error",
            "name": "ERC20InsufficientAllowance",
            "inputs": [
                {
                    "name": "spender",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "allowance",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "needed",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ]
        },
        {
            "type": "error",
            "name": "ERC20InsufficientBalance",
            "inputs": [
                {
                    "name": "sender",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "balance",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "needed",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ]
        },
        {
            "type": "error",
            "name": "ERC20InvalidApprover",
            "inputs": [
                {
                    "name": "approver",
                    "type": "address",
                    "internalType": "address"
                }
            ]
        },
        {
            "type": "error",
            "name": "ERC20InvalidReceiver",
            "inputs": [
                {
                    "name": "receiver",
                    "type": "address",
                    "internalType": "address"
                }
            ]
        },
        {
            "type": "error",
            "name": "ERC20InvalidSender",
            "inputs": [
                {
                    "name": "sender",
                    "type": "address",
                    "internalType": "address"
                }
            ]
        },
        {
            "type": "error",
            "name": "ERC20InvalidSpender",
            "inputs": [
                {
                    "name": "spender",
                    "type": "address",
                    "internalType": "address"
                }
            ]
        },
        {
            "type": "error",
            "name": "FailedInnerCall",
            "inputs": []
        },
        {
            "type": "error",
            "name": "HookNotImplemented",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InvalidAmounts",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InvalidCurrency",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InvalidPool",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NotPoolManager",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NotSelf",
            "inputs": []
        },
        {
            "type": "error",
            "name": "PoolKeyNotInitialized",
            "inputs": []
        },
        {
            "type": "error",
            "name": "SafeERC20FailedOperation",
            "inputs": [
                {
                    "name": "token",
                    "type": "address",
                    "internalType": "address"
                }
            ]
        },
        {
            "type": "error",
            "name": "SafeERC20FailedOperation",
            "inputs": [
                {
                    "name": "token",
                    "type": "address",
                    "internalType": "address"
                }
            ]
        },
        {
            "type": "error",
            "name": "ZeroLiquidity",
            "inputs": []
        }
    ],
    "bytecode": {
        "object": "",
        "sourceMap": "1947:11959:88:-:0;;;3005:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1896:113:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1896:113:23;;;;-1:-1:-1;;;;;2045:26:85;;;;1896:113:23;3053:12:88;2081:25:85;2101:4;2081:19;:25::i;:::-;-1:-1:-1;1962:5:23;:13;1970:5;1962;:13;:::i;:::-;-1:-1:-1;1985:7:23;:17;1995:7;1985;:17;:::i;:::-;;1896:113;;3005:105:88;1947:11959;;3171:132:85;3239:57;3269:4;3275:20;1947:11959:88;;;;;;;;-1:-1:-1;1947:11959:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3348:569:88;;;;;;;;3398:4;3348:569;;;-1:-1:-1;3348:569:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3245:679;3275:20:85;3239:29;:57::i;:::-;3171:132;:::o;3610:1599:55:-;3729:28;;:74;;1397:7;16467:29;;:34;;3729:74;;;:166;;-1:-1:-1;3823:27:55;;;;:72;;1460:7;16467:29;;:34;;3823:72;;3729:166;:265;;;-1:-1:-1;3915:30:55;;;;:79;;1528:7;16467:29;;:34;;3915:79;;3729:265;:362;;;-1:-1:-1;4014:29:55;;;;:77;;1594:7;16467:29;;:34;;4014:77;;3729:362;:467;;;-1:-1:-1;4111:33:55;;;;:85;;1665:6;16467:29;;:34;;4111:85;;3729:467;:570;;;-1:-1:-1;4216:32:55;;;;:83;;1733:6;16467:29;;:34;;4216:83;;3729:570;:652;;;-1:-1:-1;4319:22:55;;;;:62;;1791:6;16467:29;;:34;;4319:62;;3729:652;:732;;;-1:-1:-1;4401:21:55;;;;:60;;1847:6;16467:29;;:34;;4401:60;;3729:732;:818;;;-1:-1:-1;4481:24:55;;;;:66;;1907:6;16467:29;;:34;;4481:66;;3729:818;:902;;;-1:-1:-1;4567:23:55;;;;:64;;1965:6;16467:29;;:34;;4567:64;;3729:902;:1009;;;-1:-1:-1;4651:33:55;;;;:87;;2037:6;16467:29;;:34;;4651:87;;3729:1009;:1114;;;-1:-1:-1;4758:32:55;;;;:85;;2107:6;16467:29;;:34;;4758:85;;3729:1114;:1236;;;-1:-1:-1;4863:40:55;;;;:102;;2186:6;16467:29;;:34;;4863:102;;3729:1236;:1384;;;-1:-1:-1;4985:43:55;;;;:128;;2268:6;16467:29;;:34;;4985:128;;3729:1384;3712:1491;;;5138:54;-1:-1:-1;;;5186:4:55;5138:39;:54::i;:::-;3610:1599;;:::o;1009:257:51:-;1133:8;1130:1;1123:19;-1:-1:-1;;;;;1172:4:51;1168:53;1162:4;1155:67;1245:4;1242:1;1235:15;14:312:89;106:6;159:2;147:9;138:7;134:23;130:32;127:52;;;175:1;172;165:12;127:52;201:16;;-1:-1:-1;;;;;246:31:89;;236:42;;226:70;;292:1;289;282:12;226:70;315:5;14:312;-1:-1:-1;;;14:312:89:o;331:127::-;392:10;387:3;383:20;380:1;373:31;423:4;420:1;413:15;447:4;444:1;437:15;463:380;542:1;538:12;;;;585;;;606:61;;660:4;652:6;648:17;638:27;;606:61;713:2;705:6;702:14;682:18;679:38;676:161;;759:10;754:3;750:20;747:1;740:31;794:4;791:1;784:15;822:4;819:1;812:15;676:161;;463:380;;;:::o;974:518::-;1076:2;1071:3;1068:11;1065:421;;;1112:5;1109:1;1102:16;1156:4;1153:1;1143:18;1226:2;1214:10;1210:19;1207:1;1203:27;1197:4;1193:38;1262:4;1250:10;1247:20;1244:47;;;-1:-1:-1;1285:4:89;1244:47;1340:2;1335:3;1331:12;1328:1;1324:20;1318:4;1314:31;1304:41;;1395:81;1413:2;1406:5;1403:13;1395:81;;;1472:1;1458:16;;1439:1;1428:13;1395:81;;;1399:3;;1065:421;974:518;;;:::o;1668:1299::-;1788:10;;-1:-1:-1;;;;;1810:30:89;;1807:56;;;1843:18;;:::i;:::-;1872:97;1962:6;1922:38;1954:4;1948:11;1922:38;:::i;:::-;1916:4;1872:97;:::i;:::-;2018:4;2049:2;2038:14;;2066:1;2061:649;;;;2754:1;2771:6;2768:89;;;-1:-1:-1;2823:19:89;;;2817:26;2768:89;-1:-1:-1;;1625:1:89;1621:11;;;1617:24;1613:29;1603:40;1649:1;1645:11;;;1600:57;2870:81;;2031:930;;2061:649;921:1;914:14;;;958:4;945:18;;-1:-1:-1;;2097:20:89;;;2215:222;2229:7;2226:1;2223:14;2215:222;;;2311:19;;;2305:26;2290:42;;2418:4;2403:20;;;;2371:1;2359:14;;;;2245:12;2215:222;;;2219:3;2465:6;2456:7;2453:19;2450:201;;;2526:19;;;2520:26;-1:-1:-1;;2609:1:89;2605:14;;;2621:3;2601:24;2597:37;2593:42;2578:58;2563:74;;2450:201;-1:-1:-1;;;;2697:1:89;2681:14;;;2677:22;2664:36;;-1:-1:-1;1668:1299:89:o;:::-;1947:11959:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
        "linkReferences": {}
    },
    "deployedBytecode": {
        "object": "0x6080604052600436106101d0575f3560e01c806370a08231116100fd578063c693995711610092578063dc98354e11610062578063dc98354e14610772578063dd62ed3e14610791578063e1b4af6914610587578063ef88c31e146107d5575f80fd5b8063c6939957146106a6578063dacdbe77146106d1578063db6a9451146106fc578063dc4c90d314610727575f80fd5b8063a9059cbb116100cd578063a9059cbb1461050e578063b47b2fb11461052d578063b6a8b0fa14610587578063c4e833ce146105a6575f80fd5b806370a08231146104b35780638f743357146104e757806395d89b41146104fa5780639f063efc1461043d575f80fd5b8063313ce567116101735780635c338d32116101435780635c338d32146103fe578063647504be146104295780636c2bbe7e1461043d5780636fe7e6eb14610494575f80fd5b8063313ce567146102f857806332c684ad146103135780634c451a6a1461033a578063575e24b41461039c575f80fd5b806321d0ee70116101ae57806321d0ee701461024b57806323b872dd1461029b578063259982e5146102ba578063273264aa146102d9575f80fd5b806306fdde03146101d4578063095ea7b3146101fe57806318160ddd1461022d575b5f80fd5b3480156101df575f80fd5b506101e86107f4565b6040516101f59190613491565b60405180910390f35b348015610209575f80fd5b5061021d610218366004613503565b610884565b60405190151581526020016101f5565b348015610238575f80fd5b506002545b6040519081526020016101f5565b348015610256575f80fd5b5061026a610265366004613598565b61089d565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020016101f5565b3480156102a6575f80fd5b5061021d6102b536600461360f565b610919565b3480156102c5575f80fd5b5061026a6102d4366004613598565b61093e565b3480156102e4575f80fd5b5061023d6102f336600461364d565b6109ae565b348015610303575f80fd5b50604051601281526020016101f5565b34801561031e575f80fd5b50610327610adb565b60405160029190910b81526020016101f5565b348015610345575f80fd5b5061039a610354366004613668565b600880546001600160a01b039384167fffffffffffffffffffffffff00000000000000000000000000000000000000009182161790915560098054929093169116179055565b005b3480156103a7575f80fd5b506103bb6103b63660046136af565b610b0c565b604080517fffffffff000000000000000000000000000000000000000000000000000000009094168452602084019290925262ffffff16908201526060016101f5565b348015610409575f80fd5b5061023d610418366004613709565b600a6020525f908152604090205481565b348015610434575f80fd5b50610327610b8f565b348015610448575f80fd5b5061045c610457366004613720565b610bbb565b604080517fffffffff0000000000000000000000000000000000000000000000000000000090931683526020830191909152016101f5565b34801561049f575f80fd5b5061026a6104ae3660046137c4565b610c3e565b3480156104be575f80fd5b5061023d6104cd36600461364d565b6001600160a01b03165f9081526020819052604090205490565b61023d6104f536600461381d565b610cad565b348015610505575f80fd5b506101e8610dfb565b348015610519575f80fd5b5061021d610528366004613503565b610e0a565b348015610538575f80fd5b5061054c61054736600461384c565b610e17565b604080517fffffffff000000000000000000000000000000000000000000000000000000009093168352600f9190910b6020830152016101f5565b348015610592575f80fd5b5061026a6105a13660046138cd565b610e99565b3480156105b1575f80fd5b50610699604080516101c0810182525f80825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081019190915250604080516101c08101825260018082525f60208301819052928201839052606082018390526080820183905260a0820183905260c0820181905260e0820152610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081019190915290565b6040516101f59190613927565b3480156106b1575f80fd5b5061023d6106c0366004613709565b600c6020525f908152604090205481565b3480156106dc575f80fd5b5061023d6106eb366004613709565b600b6020525f908152604090205481565b348015610707575f80fd5b5061023d610716366004613709565b600d6020525f908152604090205481565b348015610732575f80fd5b5061075a7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101f5565b34801561077d575f80fd5b5061026a61078c366004613a41565b610f15565b34801561079c575f80fd5b5061023d6107ab366004613668565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b3480156107e0575f80fd5b5061075a6107ef36600461364d565b610f8b565b60606003805461080390613a88565b80601f016020809104026020016040519081016040528092919081815260200182805461082f90613a88565b801561087a5780601f106108515761010080835404028352916020019161087a565b820191905f5260205f20905b81548152906001019060200180831161085d57829003601f168201915b5050505050905090565b5f3361089181858561107c565b60019150505b92915050565b5f336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610900576040517fae18210a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61090d868686868661108e565b90505b95945050505050565b5f336109268582856110f8565b6109318585856111b0565b60019150505b9392505050565b5f336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146109a1576040517fae18210a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61090d868686868661123f565b6006545f906001600160a01b03166109f2576040517fe0d1f15300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b0382165f9081526020819052604081205490819003610a44576040517f1007454800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a4d816112a2565b91505f610a5a8360801d90565b600f0b90505f610a6a84600f0b90565b600f0b9050610a798584611443565b600554610a8f906001600160a01b031683611494565b600654610aa5906001600160a01b031682611494565b600554610abc906001600160a01b03168684611530565b600654610ad3906001600160a01b03168683611530565b505050919050565b6006545f90610b079077010000000000000000000000000000000000000000000000900460020b611633565b905090565b5f8080336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610b71576040517fae18210a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b7e8888888888611653565b925092509250955095509592505050565b6006545f90610b079077010000000000000000000000000000000000000000000000900460020b6116d2565b5f80336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610c1f576040517fae18210a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610c2e89898989898989611707565b9150915097509795505050505050565b5f336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610ca1576040517fae18210a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109108585858561173b565b6006545f906001600160a01b0316610cf1576040517fe0d1f15300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b816fffffffffffffffffffffffffffffffff165f03610d3c576040517f1007454800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d458261176e565b90505f610d528260801d90565b610d5b90613b00565b600f0b90505f610d6b83600f0b90565b610d7490613b00565b600554600f9190910b9150610d94906001600160a01b03163330856118b3565b600654610dac906001600160a01b03163330846118b3565b600554610dc2906001600160a01b03168361193b565b600654610dd8906001600160a01b03168261193b565b610df433856fffffffffffffffffffffffffffffffff166119d4565b5050919050565b60606004805461080390613a88565b5f336108918185856111b0565b5f80336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610e7b576040517fae18210a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e89888888888888611a21565b915091505b965096945050505050565b5f336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610efc576040517fae18210a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610f0a87878787878761173b565b979650505050505050565b5f336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610f78576040517fae18210a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610f83848484611af4565b949350505050565b6040805160a0810182526005546001600160a01b03908116808352600654808316602085015274010000000000000000000000000000000000000000810462ffffff16948401949094527701000000000000000000000000000000000000000000000090930460020b6060830152600754811660808301525f92908416036110205750506008546001600160a01b0316919050565b60208101516001600160a01b0384811691160361104a5750506009546001600160a01b0316919050565b6040517ff599342800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6110898383836001611b71565b505050565b5f600d816110ab6110a436899003890189613b57565b60a0902090565b81526020019081526020015f205f8154809291906110c890613c0a565b909155507f21d0ee7000000000000000000000000000000000000000000000000000000000979650505050505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146111aa578181101561119c576040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b6111aa84848484035f611b71565b50505050565b6001600160a01b0383166111f2576040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081525f6004820152602401611193565b6001600160a01b038216611234576040517fec442f050000000000000000000000000000000000000000000000000000000081525f6004820152602401611193565b611089838383611c75565b5f600c816112556110a436899003890189613b57565b81526020019081526020015f205f81548092919061127290613c0a565b909155507f259982e500000000000000000000000000000000000000000000000000000000979650505050505050565b6005545f9081906112bb906001600160a01b0316610f8b565b6006549091505f906112d5906001600160a01b0316610f8b565b6040517fce96cb770000000000000000000000000000000000000000000000000000000081523060048201529091505f906001600160a01b0384169063ce96cb7790602401602060405180830381865afa158015611335573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113599190613c41565b6040517fce96cb770000000000000000000000000000000000000000000000000000000081523060048201529091505f906001600160a01b0384169063ce96cb7790602401602060405180830381865afa1580156113b9573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113dd9190613c41565b90505f6113f387846113ee60025490565b611db4565b90505f61140488846113ee60025490565b905061143761141283611e6f565b61141b83611e6f565b6fffffffffffffffffffffffffffffffff1660809190911b1790565b98975050505050505050565b6001600160a01b038216611485576040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081525f6004820152602401611193565b611490825f83611c75565b5050565b5f61149e83610f8b565b6040517fb460af9400000000000000000000000000000000000000000000000000000000815260048101849052306024820181905260448201529091506001600160a01b0382169063b460af94906064015b6020604051808303815f875af115801561150c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111aa9190613c41565b5f6001600160a01b03841661157e575f805f8085875af190508061157957611579835f7ff4b3b1bc00000000000000000000000000000000000000000000000000000000611ea9565b6111aa565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b038416600482015282602482015260205f6044835f895af13d15601f3d1160015f511416171691505f81525f60208201525f604082015250806111aa576111aa847fa9059cbb000000000000000000000000000000000000000000000000000000007ff27f64e400000000000000000000000000000000000000000000000000000000611ea9565b5f81600281900b620d89e88161164b5761164b613c58565b050292915050565b5f805f806116618888611f6a565b90506fffffffffffffffffffffffffffffffff8116156116a05761169e611699826fffffffffffffffffffffffffffffffff166121d8565b61220a565b505b507f575e24b400000000000000000000000000000000000000000000000000000000985f985088975095505050505050565b5f81600281900b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff276188161164b5761164b613c58565b5f806040517f0a85dc2900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f6040517f0a85dc2900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f80611778610b8f565b90505f611783610adb565b6040805160a080820183526005546001600160a01b039081168352600654808216602085015274010000000000000000000000000000000000000000810462ffffff16948401949094527701000000000000000000000000000000000000000000000090930460020b60608301526007549092166080820152209091505f908190611839905b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906122f0565b50509150915061184c86828686866123bb565b94505f6118598660801d90565b600f0b138061187357505f61186e86600f0b90565b600f0b135b156118aa576040517fd856fc5a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050919050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd000000000000000000000000000000000000000000000000000000001790526111aa908590612456565b6001600160a01b03821661197b576040517ff599342800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f61198583610f8b565b6040517f6e553f65000000000000000000000000000000000000000000000000000000008152600481018490523060248201529091506001600160a01b03821690636e553f65906044016114f0565b6001600160a01b038216611a16576040517fec442f050000000000000000000000000000000000000000000000000000000081525f6004820152602401611193565b6114905f8383611c75565b5f805f611a2d886124d0565b9050806fffffffffffffffffffffffffffffffff165f03611a7457507fb47b2fb10000000000000000000000000000000000000000000000000000000091505f9050610e8e565b611a9b611a92826fffffffffffffffffffffffffffffffff166121d8565b61169990613c85565b50611ab1611aac60208a018a61364d565b612566565b611ac4611aac60408a0160208b0161364d565b507fb47b2fb100000000000000000000000000000000000000000000000000000000985f98509650505050505050565b6007545f906001600160a01b031615611b39576040517f0dc149f000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b826005611b468282613cbb565b507fdc98354e0000000000000000000000000000000000000000000000000000000095945050505050565b6001600160a01b038416611bb3576040517fe602df050000000000000000000000000000000000000000000000000000000081525f6004820152602401611193565b6001600160a01b038316611bf5576040517f94280d620000000000000000000000000000000000000000000000000000000081525f6004820152602401611193565b6001600160a01b038085165f90815260016020908152604080832093871683529290522082905580156111aa57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611c6791815260200190565b60405180910390a350505050565b6001600160a01b038316611c9f578060025f828254611c949190613e0e565b90915550611d289050565b6001600160a01b0383165f9081526020819052604090205481811015611d0a576040517fe450d38c0000000000000000000000000000000000000000000000000000000081526001600160a01b03851660048201526024810182905260448101839052606401611193565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b038216611d4457600280548290039055611d62565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611da791815260200190565b60405180910390a3505050565b5f838302817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff85870982811083820303915050808411611df2575f80fd5b805f03611e0457508290049050610937565b5f848688095f868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b80600f81900b8114611ea457611ea47f93dafdf100000000000000000000000000000000000000000000000000000000612640565b919050565b6040517f90bfb865000000000000000000000000000000000000000000000000000000008082526001600160a01b03851660048301527fffffffff0000000000000000000000000000000000000000000000000000000084166024830152608060448301526020601f3d018190040260a0810160648401523d608484015290913d5f60a483013e60048260a4018201527fffffffff0000000000000000000000000000000000000000000000000000000084168260c4018201528160e40181fd5b5f80611f7c6107ef602086018661364d565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015611fd9573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611ffd9190613c41565b90505f6120136107ef604087016020880161364d565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015612070573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906120949190613c41565b90505f6120a76107ef602088018861364d565b6001600160a01b03166307a2d13a846040518263ffffffff1660e01b81526004016120d491815260200190565b602060405180830381865afa1580156120ef573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906121139190613c41565b90505f6121296107ef6040890160208a0161364d565b6001600160a01b03166307a2d13a846040518263ffffffff1660e01b815260040161215691815260200190565b602060405180830381865afa158015612171573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906121959190613c41565b90505f6121ad6118096110a4368b90038b018b613b57565b5050509050611437816121c66121c1610b8f565b612648565b6121d16121c1610adb565b8686612945565b805f811215611ea457611ea47f93dafdf100000000000000000000000000000000000000000000000000000000612640565b5f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635a6bcfda6005604051806080016040528061224f610b8f565b60020b815260200161225f610adb565b60020b8152602081018790525f604091820152517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526122aa929190600401613e21565b60408051808303815f875af11580156122c5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906122e99190613eb6565b5092915050565b5f805f805f6122fe86612a05565b6040517f1e2eaeaf000000000000000000000000000000000000000000000000000000008152600481018290529091505f906001600160a01b03891690631e2eaeaf90602401602060405180830381865afa15801561235f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906123839190613c41565b90506001600160a01b03811695508060a01c60020b945062ffffff8160b81c16935062ffffff8160d01c169250505092959194509250565b5f8360020b8560020b12156123fd576123f66123f06123eb6123dc87612648565b6123e587612648565b8a612a41565b611e6f565b60801b90565b9050610910565b8260020b8560020b1215612434576123f661241e6123eb846123e587612648565b61141b6123eb61242d88612648565b868b612a79565b61090d5f61141b6123eb61244788612648565b61245088612648565b8b612a79565b5f61246a6001600160a01b03841683612aa5565b905080515f1415801561248e57508080602001905181019061248c9190613ed8565b155b15611089576040517f5274afe70000000000000000000000000000000000000000000000000000000081526001600160a01b0384166004820152602401611193565b5f8061251e306124de610b8f565b6124e6610adb565b604080515f6026820181905260068201939093526003810193909352928252603a600c83012092820181905260208201819052905290565b90506109376125356110a436869003860186613b57565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169083612ab2565b5f61259b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163084612b42565b90505f8113156125e5576125db6001600160a01b0383167f000000000000000000000000000000000000000000000000000000000000000030845f612b91565b6125e5828261193b565b5f811215611490576125ff826125fa83613c85565b611494565b6114907f00000000000000000000000000000000000000000000000000000000000000003061262d84613c85565b6001600160a01b0386169291905f612cc9565b805f5260045ffd5b60020b5f60ff82901d80830118620d89e881111561268a5761268a7f8b86327a0000000000000000000000000000000000000000000000000000000084612f4a565b7001fffcb933bd6fad37aa2d162d1a59400160018216027001000000000000000000000000000000001860028216156126d3576ffff97272373d413259a46990580e213a0260801c5b60048216156126f2576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615612711576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615612730576fffcb9843d60f6159c9db58835c9266440260801c5b602082161561274f576fff973b41fa98c081472e6896dfb254c00260801c5b604082161561276e576fff2ea16466c96a3843ec78b326b528610260801c5b608082161561278d576ffe5dee046a99a2a811c461f1969c30530260801c5b6101008216156127ad576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b6102008216156127cd576ff987a7253ac413176f2b074cf7815e540260801c5b6104008216156127ed576ff3392b0822b70005940c7a398e4b70f30260801c5b61080082161561280d576fe7159475a2c29b7443b29c7fa6e889d90260801c5b61100082161561282d576fd097f3bdfd2022b8845ad8f792aa58250260801c5b61200082161561284d576fa9f746462d870fdf8a65dc1f90e061e50260801c5b61400082161561286d576f70d869a156d2a1b890bb3df62baf32f70260801c5b61800082161561288d576f31be135f97d08fd981231505542fcfa60260801c5b620100008216156128ae576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b620200008216156128ce576e5d6af8dedb81196699c329225ee6040260801c5b620400008216156128ed576d2216e584f5fa1ea926041bedfe980260801c5b6208000082161561290a576b048a170391f7dc42444e8fa20260801c5b5f841315612935577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff045b63ffffffff0160201c9392505050565b5f836001600160a01b0316856001600160a01b03161115612964579293925b846001600160a01b0316866001600160a01b031611612988576123f6858585612f59565b836001600160a01b0316866001600160a01b031610156129fa575f6129ae878686612f59565b90505f6129bc878986612fc3565b9050806fffffffffffffffffffffffffffffffff16826fffffffffffffffffffffffffffffffff16106129ef57806129f1565b815b92505050610910565b61090d858584612fc3565b6040515f90612a24908390600690602001918252602082015260400190565b604051602081830303815290604052805190602001209050919050565b5f8082600f0b12612a6857612a61612a5c8585856001613008565b6121d8565b5f03610f83565b610f83612a5c8585855f035f613008565b5f8082600f0b12612a9457612a61612a5c85858560016130d2565b610f83612a5c8585855f035f6130d2565b606061093783835f613130565b5f80612abe84846131e2565b6040517f1e2eaeaf000000000000000000000000000000000000000000000000000000008152600481018290529091506001600160a01b03861690631e2eaeaf906024015b602060405180830381865afa158015612b1e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109109190613c41565b5f806001600160a01b0384165f526001600160a01b03831660205260405f209050846001600160a01b031663f135baaa826040518263ffffffff1660e01b8152600401612b0391815260200190565b8115612cc25780612c20576040517f0b0d9c090000000000000000000000000000000000000000000000000000000081526001600160a01b038681166004830152848116602483015260448201849052851690630b0d9c09906064015b5f604051808303815f87803b158015612c05575f80fd5b505af1158015612c17573d5f803e3d5ffd5b50505050612cc2565b836001600160a01b031663156e29f684612c49886001600160a01b03166001600160a01b031690565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b0390921660048301526024820152604481018590526064015f604051808303815f87803b158015612cab575f80fd5b505af1158015612cbd573d5f803e3d5ffd5b505050505b5050505050565b8115612cc2578015612d4e57836001600160a01b031663f5298aca84612cfe886001600160a01b03166001600160a01b031690565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b039092166004830152602482015260448101859052606401612bee565b6001600160a01b038516612e34576040517fa58411940000000000000000000000000000000000000000000000000000000081526001600160a01b03868116600483015285169063a5841194906024015f604051808303815f87803b158015612db5575f80fd5b505af1158015612dc7573d5f803e3d5ffd5b50505050836001600160a01b03166311da60b4836040518263ffffffff1660e01b815260040160206040518083038185885af1158015612e09573d5f803e3d5ffd5b50505050506040513d601f19601f82011682018060405250810190612e2e9190613c41565b50612cc2565b6040517fa58411940000000000000000000000000000000000000000000000000000000081526001600160a01b03868116600483015285169063a5841194906024015f604051808303815f87803b158015612e8d575f80fd5b505af1158015612e9f573d5f803e3d5ffd5b505050506001600160a01b0383163014612ecd57612ec86001600160a01b038616848685613232565b612ee1565b612ee16001600160a01b03861685846132ae565b836001600160a01b03166311da60b46040518163ffffffff1660e01b81526004016020604051808303815f875af1158015612f1e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612f429190613c41565b505050505050565b815f528060020b60045260245ffd5b5f826001600160a01b0316846001600160a01b03161115612f78579192915b5f612fa3856001600160a01b0316856001600160a01b03166c01000000000000000000000000611db4565b9050610910612fbe84838888036001600160a01b0316611db4565b6132df565b5f826001600160a01b0316846001600160a01b03161115612fe2579192915b610f83612fbe836c010000000000000000000000008787036001600160a01b0316611db4565b5f836001600160a01b0316856001600160a01b03161115613027579293925b6001600160a01b0385166130415762bfc9215f526004601cfd5b7bffffffffffffffffffffffffffffffff000000000000000000000000606084901b166001600160a01b0386860316836130a657866001600160a01b03166130938383896001600160a01b0316611db4565b816130a0576130a0613c58565b04610f0a565b610f0a6130bd8383896001600160a01b0316613322565b886001600160a01b0316808204910615150190565b5f6001600160a01b038481169086160360ff81901d908101186c010000000000000000000000006fffffffffffffffffffffffffffffffff8516613117818484611db4565b9350845f83858409111684019350505050949350505050565b60608147101561316e576040517fcd786059000000000000000000000000000000000000000000000000000000008152306004820152602401611193565b5f80856001600160a01b031684866040516131899190613ef7565b5f6040518083038185875af1925050503d805f81146131c3576040519150601f19603f3d011682016040523d82523d5f602084013e6131c8565b606091505b50915091506131d8868383613352565b9695505050505050565b5f806131ed84612a05565b90505f6131fb600683613e0e565b6040805160208101879052908101829052909150606001604051602081830303815290604052805190602001209250505092915050565b6040516001600160a01b0384811660248301528381166044830152606482018390526111aa9186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506133c7565b6040516001600160a01b0383811660248301526044820183905261108991859182169063a9059cbb90606401613267565b806fffffffffffffffffffffffffffffffff81168114611ea457611ea47f93dafdf100000000000000000000000000000000000000000000000000000000612640565b5f61332e848484611db4565b9050818061333e5761333e613c58565b838509156109375760010180610937575f80fd5b606082613367576133628261344c565b610937565b815115801561337e57506001600160a01b0384163b155b156133c0576040517f9996b3150000000000000000000000000000000000000000000000000000000081526001600160a01b0385166004820152602401611193565b5080610937565b5f8060205f8451602086015f885af1806133e6576040513d5f823e3d81fd5b50505f513d915081156133fd57806001141561340a565b6001600160a01b0384163b155b156111aa576040517f5274afe70000000000000000000000000000000000000000000000000000000081526001600160a01b0385166004820152602401611193565b80511561345c5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b602081525f82518060208401528060208501604085015e5f6040828501015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011684010191505092915050565b6001600160a01b038116811461348e575f80fd5b8035611ea4816134e4565b5f8060408385031215613514575f80fd5b823561351f816134e4565b946020939093013593505050565b5f60a0828403121561353d575f80fd5b50919050565b5f6080828403121561353d575f80fd5b5f8083601f840112613563575f80fd5b50813567ffffffffffffffff81111561357a575f80fd5b602083019150836020828501011115613591575f80fd5b9250929050565b5f805f805f61016086880312156135ad575f80fd5b85356135b8816134e4565b94506135c7876020880161352d565b93506135d68760c08801613543565b925061014086013567ffffffffffffffff8111156135f2575f80fd5b6135fe88828901613553565b969995985093965092949392505050565b5f805f60608486031215613621575f80fd5b833561362c816134e4565b9250602084013561363c816134e4565b929592945050506040919091013590565b5f6020828403121561365d575f80fd5b8135610937816134e4565b5f8060408385031215613679575f80fd5b8235613684816134e4565b91506020830135613694816134e4565b809150509250929050565b5f6060828403121561353d575f80fd5b5f805f805f61014086880312156136c4575f80fd5b85356136cf816134e4565b94506136de876020880161352d565b93506136ed8760c0880161369f565b925061012086013567ffffffffffffffff8111156135f2575f80fd5b5f60208284031215613719575f80fd5b5035919050565b5f805f805f805f6101a0888a031215613737575f80fd5b8735613742816134e4565b96506137518960208a0161352d565b95506137608960c08a01613543565b94506101408801359350610160880135925061018088013567ffffffffffffffff81111561378c575f80fd5b6137988a828b01613553565b989b979a50959850939692959293505050565b8060020b811461348e575f80fd5b8035611ea4816137ab565b5f805f8061010085870312156137d8575f80fd5b84356137e3816134e4565b93506137f2866020870161352d565b925060c0850135613802816134e4565b915060e0850135613812816137ab565b939692955090935050565b5f6020828403121561382d575f80fd5b81356fffffffffffffffffffffffffffffffff81168114610937575f80fd5b5f805f805f806101608789031215613862575f80fd5b863561386d816134e4565b955061387c886020890161352d565b945061388b8860c0890161369f565b9350610120870135925061014087013567ffffffffffffffff8111156138af575f80fd5b6138bb89828a01613553565b979a9699509497509295939492505050565b5f805f805f8061012087890312156138e3575f80fd5b86356138ee816134e4565b95506138fd886020890161352d565b945060c0870135935060e0870135925061010087013567ffffffffffffffff8111156138af575f80fd5b8151151581526101c081016020830151613945602084018215159052565b506040830151613959604084018215159052565b50606083015161396d606084018215159052565b506080830151613981608084018215159052565b5060a083015161399560a084018215159052565b5060c08301516139a960c084018215159052565b5060e08301516139bd60e084018215159052565b506101008301516139d361010084018215159052565b506101208301516139e961012084018215159052565b506101408301516139ff61014084018215159052565b50610160830151613a1561016084018215159052565b50610180830151613a2b61018084018215159052565b506101a08301516122e96101a084018215159052565b5f805f60e08486031215613a53575f80fd5b8335613a5e816134e4565b9250613a6d856020860161352d565b915060c0840135613a7d816134e4565b809150509250925092565b600181811c90821680613a9c57607f821691505b60208210810361353d577f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f81600f0b7fffffffffffffffffffffffffffffffff800000000000000000000000000000008103613b3457613b34613ad3565b5f0392915050565b62ffffff8116811461348e575f80fd5b8035611ea481613b3c565b5f60a0828403128015613b68575f80fd5b5060405160a0810167ffffffffffffffff81118282101715613bb1577f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b604052613bbd836134f8565b8152613bcb602084016134f8565b6020820152613bdc60408401613b4c565b6040820152613bed606084016137b9565b6060820152613bfe608084016134f8565b60808201529392505050565b5f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613c3a57613c3a613ad3565b5060010190565b5f60208284031215613c51575f80fd5b5051919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f7f80000000000000000000000000000000000000000000000000000000000000008203613cb557613cb5613ad3565b505f0390565b8135613cc6816134e4565b81547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03821617825550600181016020830135613d0a816134e4565b81547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b038216178255506040830135613d4a81613b3c565b81546060850135613d5a816137ab565b8060b81b79ffffff00000000000000000000000000000000000000000000001676ffffff00000000000000000000000000000000000000008460a01b167fffffffffffff000000000000ffffffffffffffffffffffffffffffffffffffff841617178455505050505f6080830135613dd1816134e4565b6002830180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383161790559050806111aa565b8082018082111561089757610897613ad3565b82546001600160a01b0390811682526001840154808216602084015260a081811c62ffffff16604085015260b89190911c600290810b606085015285015490911660808301525f90613e9c90830184805160020b8252602081015160020b602083015260408101516040830152606081015160608301525050565b610140610120830152610f8361014083015f815260200190565b5f8060408385031215613ec7575f80fd5b505080516020909101519092909150565b5f60208284031215613ee8575f80fd5b81518015158114610937575f80fd5b5f82518060208501845e5f92019182525091905056fea164736f6c634300081a000a",
        "sourceMap": "1947:11959:88:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:23;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;-1:-1:-1;4293:186:23;;;;;:::i;:::-;;:::i;:::-;;;1569:14:89;;1562:22;1544:41;;1532:2;1517:18;4293:186:23;1404:187:89;3144:97:23;;;;;;;;;;-1:-1:-1;3222:12:23;;3144:97;;;1742:25:89;;;1730:2;1715:18;3144:97:23;1596:177:89;5358:298:85;;;;;;;;;;-1:-1:-1;5358:298:85;;;;;:::i;:::-;;:::i;:::-;;;3474:66:89;3462:79;;;3444:98;;3432:2;3417:18;5358:298:85;3300:248:89;5039:244:23;;;;;;;;;;-1:-1:-1;5039:244:23;;;;;:::i;:::-;;:::i;4614:292:85:-;;;;;;;;;;-1:-1:-1;4614:292:85;;;;;:::i;:::-;;:::i;4719:821:88:-;;;;;;;;;;-1:-1:-1;4719:821:88;;;;;:::i;:::-;;:::i;3002:82:23:-;;;;;;;;;;-1:-1:-1;3002:82:23;;3075:2;4675:36:89;;4663:2;4648:18;3002:82:23;4533:184:89;10374:128:88;;;;;;;;;;;;;:::i;:::-;;;4893:1:89;4882:21;;;;4864:40;;4852:2;4837:18;10374:128:88;4722:188:89;3116:123:88;;;;;;;;;;-1:-1:-1;3116:123:88;;;;;:::i;:::-;3188:7;:17;;-1:-1:-1;;;;;3188:17:88;;;;;;;;;;;3215:7;:17;;;;;;;;;;;3116:123;;;7918:288:85;;;;;;;;;;-1:-1:-1;7918:288:85;;;;;:::i;:::-;;:::i;:::-;;;;6547:66:89;6535:79;;;6517:98;;6646:2;6631:18;;6624:34;;;;6706:8;6694:21;6674:18;;;6667:49;6505:2;6490:18;7918:288:85;6283:439:89;2741:55:88;;;;;;;;;;-1:-1:-1;2741:55:88;;;;;:::i;:::-;;;;;;;;;;;;;;10240:128;;;;;;;;;;;;;:::i;7010:384:85:-;;;;;;;;;;-1:-1:-1;7010:384:85;;;;;:::i;:::-;;:::i;:::-;;;;8319:66:89;8307:79;;;8289:98;;8418:2;8403:18;;8396:34;;;;8262:18;7010:384:85;8084:352:89;3972:256:85;;;;;;;;;;-1:-1:-1;3972:256:85;;;;;:::i;:::-;;:::i;3299:116:23:-;;;;;;;;;;-1:-1:-1;3299:116:23;;;;;:::i;:::-;-1:-1:-1;;;;;3390:18:23;3364:7;3390:18;;;;;;;;;;;;3299:116;3930:783:88;;;;;;:::i;:::-;;:::i;2276:93:23:-;;;;;;;;;;;;;:::i;3610:178::-;;;;;;;;;;-1:-1:-1;3610:178:23;;;;;:::i;:::-;;:::i;8656:306:85:-;;;;;;;;;;-1:-1:-1;8656:306:85;;;;;:::i;:::-;;:::i;:::-;;;;10832:66:89;10820:79;;;10802:98;;10947:2;10936:22;;;;10931:2;10916:18;;10909:50;10775:18;8656:306:85;10632:333:89;9407:293:85;;;;;;;;;;-1:-1:-1;9407:293:85;;;;;:::i;:::-;;:::i;3245:679:88:-;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3348:569:88;;;;;;;;3398:4;3348:569;;;-1:-1:-1;3348:569:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3245:679;;;;;;;;:::i;2863:63::-;;;;;;;;;;-1:-1:-1;2863:63:88;;;;;:::i;:::-;;;;;;;;;;;;;;2802:54;;;;;;;;;;-1:-1:-1;2802:54:88;;;;;:::i;:::-;;;;;;;;;;;;;;2932:66;;;;;;;;;;-1:-1:-1;2932:66:88;;;;;:::i;:::-;;;;;;;;;;;;;;1413:41:85;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13882:55:89;;;13864:74;;13852:2;13837:18;1413:41:85;13696:248:89;3351:240:85;;;;;;;;;;-1:-1:-1;3351:240:85;;;;;:::i;:::-;;:::i;3846:140:23:-;;;;;;;;;;-1:-1:-1;3846:140:23;;;;;:::i;:::-;-1:-1:-1;;;;;3952:18:23;;;3926:7;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3846:140;7953:264:88;;;;;;;;;;-1:-1:-1;7953:264:88;;;;;:::i;:::-;;:::i;2074:89:23:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;735:10:30;4420:31:23;735:10:30;4436:7:23;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;;:::o;5358:298:85:-;5571:6;2240:10;-1:-1:-1;;;;;2262:11:85;2240:34;;2236:63;;2283:16;;;;;;;;;;;;;;2236:63;5596:53:::1;5619:6;5627:3;5632:6;5640:8;;5596:22;:53::i;:::-;5589:60;;2309:1;5358:298:::0;;;;;;;:::o;5039:244:23:-;5126:4;735:10:30;5182:37:23;5198:4;735:10:30;5213:5:23;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;;:::o;4614:292:85:-;4824:6;2240:10;-1:-1:-1;;;;;2262:11:85;2240:34;;2236:63;;2283:16;;;;;;;;;;;;;;2236:63;4849:50:::1;4869:6;4877:3;4882:6;4890:8;;4849:19;:50::i;4719:821:88:-:0;4825:18;;4791;;-1:-1:-1;;;;;4825:18:88;4821:70;;4868:23;;;;;;;;;;;;;;4821:70;-1:-1:-1;;;;;3390:18:23;;4902:20:88;3390:18:23;;;;;;;;;;;;4955:17:88;;;4951:45;;4981:15;;;;;;;;;;;;;;4951:45;5015:41;5043:12;5015:27;:41::i;:::-;5007:49;;5067:15;5100;:5;2107:3:74;2103:22;;1958:183;5100:15:88;5093:23;;5067:50;;5127:15;5160;:5;2303:2:74;2292:28;;2147:189;5160:15:88;5153:23;;5127:50;;5188:26;5194:5;5201:12;5188:5;:26::i;:::-;5244:8;:18;5225:47;;-1:-1:-1;;;;;5244:18:88;5264:7;5225:18;:47::i;:::-;5301:18;;5282:47;;-1:-1:-1;;;;;5301:18:88;5321:7;5282:18;:47::i;:::-;5340:8;:18;:43;;-1:-1:-1;;;;;5340:18:88;5368:5;5375:7;5340:27;:43::i;:::-;5393:18;;:43;;-1:-1:-1;;;;;5393:18:88;5421:5;5428:7;5393:27;:43::i;:::-;4811:729;;;4719:821;;;:::o;10374:128::-;10474:20;;10427:5;;10451:44;;10474:20;;;;;10451:22;:44::i;:::-;10444:51;;10374:128;:::o;7918:288:85:-;8103:6;;;2240:10;-1:-1:-1;;;;;2262:11:85;2240:34;;2236:63;;2283:16;;;;;;;;;;;;;;2236:63;8157:42:::1;8169:6;8177:3;8182:6;8190:8;;8157:11;:42::i;:::-;8150:49;;;;;;7918:288:::0;;;;;;;;;:::o;10240:128:88:-;10340:20;;10293:5;;10317:44;;10340:20;;;;;10317:22;:44::i;7010:384:85:-;7280:6;;2240:10;-1:-1:-1;;;;;2262:11:85;2240:34;;2236:63;;2283:16;;;;;;;;;;;;;;2236:63;7319:68:::1;7341:6;7349:3;7354:6;7362;7370;7378:8;;7319:21;:68::i;:::-;7312:75;;;;7010:384:::0;;;;;;;;;;:::o;3972:256::-;4143:6;2240:10;-1:-1:-1;;;;;2262:11:85;2240:34;;2236:63;;2283:16;;;;;;;;;;;;;;2236:63;4172:49:::1;4189:6;4197:3;4202:12;4216:4;4172:16;:49::i;3930:783:88:-:0;4045:18;;4011;;-1:-1:-1;;;;;4045:18:88;4041:70;;4088:23;;;;;;;;;;;;;;4041:70;4126:9;:14;;4139:1;4126:14;4122:42;;4149:15;;;;;;;;;;;;;;4122:42;4183:38;4211:9;4183:27;:38::i;:::-;4175:46;;4232:15;4266;:5;2107:3:74;2103:22;;1958:183;4266:15:88;4265:16;;;:::i;:::-;4258:24;;4232:51;;4293:15;4327;:5;2303:2:74;2292:28;;2147:189;4327:15:88;4326:16;;;:::i;:::-;4378:8;:18;4319:24;;;;;;-1:-1:-1;4355:96:88;;-1:-1:-1;;;;;4378:18:88;4416:10;4436:4;4443:7;4355:60;:96::i;:::-;4485:18;;4462:96;;-1:-1:-1;;;;;4485:18:88;4523:10;4543:4;4550:7;4462:60;:96::i;:::-;4585:8;:18;4569:44;;-1:-1:-1;;;;;4585:18:88;4605:7;4569:15;:44::i;:::-;4639:18;;4623:44;;-1:-1:-1;;;;;4639:18:88;4659:7;4623:15;:44::i;:::-;4678:28;4684:10;4696:9;4678:28;;:5;:28::i;:::-;4031:682;;3930:783;;;:::o;2276:93:23:-;2323:13;2355:7;2348:14;;;;;:::i;3610:178::-;3679:4;735:10:30;3733:27:23;735:10:30;3750:2:23;3754:5;3733:9;:27::i;8656:306:85:-;8874:6;;2240:10;-1:-1:-1;;;;;2262:11:85;2240:34;;2236:63;;2283:16;;;;;;;;;;;;;;2236:63;8907:48:::1;8918:6;8926:3;8931:6;8939:5;8946:8;;8907:10;:48::i;:::-;8900:55;;;;2309:1;8656:306:::0;;;;;;;;;:::o;9407:293::-;9614:6;2240:10;-1:-1:-1;;;;;2262:11:85;2240:34;;2236:63;;2283:16;;;;;;;;;;;;;;2236:63;9639:54:::1;9653:6;9661:3;9666:7;9675;9684:8;;9639:13;:54::i;:::-;9632:61:::0;9407:293;-1:-1:-1;;;;;;;9407:293:85:o;3351:240::-;3511:6;2240:10;-1:-1:-1;;;;;2262:11:85;2240:34;;2236:63;;2283:16;;;;;;;;;;;;;;2236:63;3540:44:::1;3558:6;3566:3;3571:12;3540:17;:44::i;:::-;3533:51:::0;3351:240;-1:-1:-1;;;;3351:240:85:o;7953:264:88:-;8037:29;;;;;;;;8058:8;8037:29;-1:-1:-1;;;;;8037:29:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;448:51:76;;;;8076:45:88;;-1:-1:-1;;8114:7:88;;-1:-1:-1;;;;;8114:7:88;;7953:264;-1:-1:-1;7953:264:88:o;8076:45::-;8135:13;;;;-1:-1:-1;;;;;448:51:76;;;;;;8131:45:88;;-1:-1:-1;;8169:7:88;;-1:-1:-1;;;;;8169:7:88;;7953:264;-1:-1:-1;7953:264:88:o;8131:45::-;8193:17;;;;;;;;;;;;;;8989:128:23;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;13234:287:88:-;13396:6;13418:26;13396:6;13445:10;:8;;;;;;;:3;:8;:::i;:::-;515:4:77;496:24;;;271:265;13445:10:88;13418:38;;;;;;;;;;;;:40;;;;;;;;;:::i;:::-;;;;-1:-1:-1;13475:39:88;;13234:287;-1:-1:-1;;;;;;;13234:287:88:o;10663:477:23:-;-1:-1:-1;;;;;3952:18:23;;;10762:24;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;10848:17;10828:37;;10824:310;;10904:5;10885:16;:24;10881:130;;;10936:60;;;;;-1:-1:-1;;;;;17471:55:89;;10936:60:23;;;17453:74:89;17543:18;;;17536:34;;;17586:18;;;17579:34;;;17426:18;;10936:60:23;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10752:388;10663:477;;;:::o;5656:300::-;-1:-1:-1;;;;;5739:18:23;;5735:86;;5780:30;;;;;5807:1;5780:30;;;13864:74:89;13837:18;;5780:30:23;13696:248:89;5735:86:23;-1:-1:-1;;;;;5834:16:23;;5830:86;;5873:32;;;;;5902:1;5873:32;;;13864:74:89;13837:18;;5873:32:23;13696:248:89;5830:86:23;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;12950:278:88:-;13109:6;13131:23;13109:6;13155:10;:8;;;;;;;:3;:8;:::i;:10::-;13131:35;;;;;;;;;;;;:37;;;;;;;;;:::i;:::-;;;;-1:-1:-1;13185:36:88;;12950:278;-1:-1:-1;;;;;;;12950:278:88:o;6893:707::-;7047:8;:18;6978;;;;7031:35;;-1:-1:-1;;;;;7047:18:88;7031:15;:35::i;:::-;7115:18;;7008:58;;-1:-1:-1;7076:20:88;;7099:35;;-1:-1:-1;;;;;7115:18:88;7099:15;:35::i;:::-;7176:49;;;;;7219:4;7176:49;;;13864:74:89;7076:58:88;;-1:-1:-1;7145:28:88;;-1:-1:-1;;;;;7176:34:88;;;;;13837:18:89;;7176:49:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7266;;;;;7309:4;7266:49;;;13864:74:89;7145:80:88;;-1:-1:-1;7235:28:88;;-1:-1:-1;;;;;7266:34:88;;;;;13837:18:89;;7266:49:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7235:80;;7326:15;7344:66;7360:12;7374:20;7396:13;3222:12:23;;;3144:97;7396:13:88;7344:15;:66::i;:::-;7326:84;;7420:15;7438:66;7454:12;7468:20;7490:13;3222:12:23;;;3144:97;7438:66:88;7420:84;;7523:70;7538:26;7545:7;7538:24;:26::i;:::-;7566;7573:7;7566:24;:26::i;:::-;631:19:74;627:34;639:3;607:18;;;;604:58;;448:222;7523:70:88;7515:78;6893:707;-1:-1:-1;;;;;;;;6893:707:88:o;8247:206:23:-;-1:-1:-1;;;;;8317:21:23;;8313:89;;8361:30;;;;;8388:1;8361:30;;;13864:74:89;13837:18;;8361:30:23;13696:248:89;8313:89:23;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;:::-;8247:206;;:::o;8742:210:88:-;8832:13;8848:25;8864:8;8848:15;:25::i;:::-;8883:62;;;;;;;;18015:25:89;;;8924:4:88;18056:18:89;;;18049:83;;;18148:18;;;18141:83;8832:41:88;;-1:-1:-1;;;;;;8883:24:88;;;;;17988:18:89;;8883:62:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1472:2873:76:-;1743:12;-1:-1:-1;;;;;1769:22:76;;1765:2574;;1956:1;1953;1950;1947;1939:6;1935:2;1928:5;1923:35;1912:46;;2086:7;2081:127;;2113:80;2148:2;2159:1;2163:29;2113:34;:80::i;:::-;1765:2574;;;2352:4;2346:11;2488:66;2483:3;2476:79;-1:-1:-1;;;;;2596:2:76;2592:51;2588:1;2583:3;2579:11;2572:72;2720:6;2715:2;2710:3;2706:12;2699:28;3649:2;3646:1;3642:2;3637:3;3634:1;3624:8;3617:5;3612:40;3141:16;3134:24;3128:2;3110:16;3107:24;3103:1;3099;3093:8;3090:15;3086:46;3083:76;2859:815;2828:846;;3752:1;3747:3;3740:14;3853:1;3846:4;3841:3;3837:14;3830:25;3956:1;3949:4;3944:3;3940:14;3933:25;;4125:7;4120:209;;4152:162;4224:8;4235:31;4268:28;4152:34;:162::i;2424:168:69:-;2489:5;2564:11;2538:22;;;;1317:6;2538:22;;;;;:::i;:::-;;2537:38;;2424:168;-1:-1:-1;;2424:168:69:o;10674:667:88:-;10821:6;10829:15;10846:6;10984:22;11009:31;11028:3;11033:6;11009:18;:31::i;:::-;10984:56;-1:-1:-1;11165:18:88;;;;11161:92;;11199:43;11216:25;:14;:23;;;:25::i;:::-;11199:16;:43::i;:::-;;11161:92;-1:-1:-1;11271:24:88;;830:1:75;;-1:-1:-1;830:1:75;;-1:-1:-1;10674:667:88;-1:-1:-1;;;;;;10674:667:88:o;2667:168:69:-;2732:5;2807:11;2781:22;;;;1032:7;2781:22;;;;;:::i;7590:280:85:-;7804:6;7812:12;7843:20;;;;;;;;;;;;;;4419:147;4514:6;4539:20;;;;;;;;;;;;;;8223:513:88;8305:18;8335:15;8353:14;:12;:14::i;:::-;8335:32;;8377:15;8395:14;:12;:14::i;:::-;8494:13;;;;;;;;;:8;:13;-1:-1:-1;;;;;8494:13:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;496:24:77;8377:32:88;;-1:-1:-1;;;;;8473:37:88;;8494:15;-1:-1:-1;;;;;8473:11:88;:20;;;:37::i;:::-;8420:90;;;;;;8529:94;8557:9;8568:11;8581:9;8592;8603:19;8529:27;:94::i;:::-;8521:102;;8656:1;8638:15;:5;2107:3:74;2103:22;;1958:183;8638:15:88;:19;;;:42;;;;8679:1;8661:15;:5;2303:2:74;2292:28;;2147:189;8661:15:88;:19;;;8638:42;8634:96;;;8703:16;;;;;;;;;;;;;;8634:96;8325:411;;;;8223:513;;;:::o;1702:188:28:-;1829:53;;;-1:-1:-1;;;;;18644:55:89;;;1829:53:28;;;18626:74:89;18736:55;;18716:18;;;18709:83;18808:18;;;;18801:34;;;1829:53:28;;;;;;;;;;18599:18:89;;;;1829:53:28;;;;;;;;;;;;;;1802:81;;1822:5;;1802:19;:81::i;7606:341:88:-;-1:-1:-1;;;;;7689:22:88;;7685:79;;7736:17;;;;;;;;;;;;;;7685:79;7774:13;7790:25;7806:8;7790:15;:25::i;:::-;7894:46;;;;;;;;19020:25:89;;;7934:4:88;19061:18:89;;;19054:83;7774:41:88;;-1:-1:-1;;;;;;7894:23:88;;;;;18993:18:89;;7894:46:88;18846:297:89;7721:208:23;-1:-1:-1;;;;;7791:21:23;;7787:91;;7835:32;;;;;7864:1;7835:32;;;13864:74:89;13837:18;;7835:32:23;13696:248:89;7787:91:23;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;11347:742:88:-;11500:6;11508;11634:17;11654:22;11672:3;11654:17;:22::i;:::-;11634:42;;11690:9;:14;;11703:1;11690:14;11686:80;;-1:-1:-1;11728:23:88;;-1:-1:-1;11753:1:88;;-1:-1:-1;11720:35:88;;11686:80;11839:39;11857:20;:9;:18;;;:20::i;:::-;11856:21;;;:::i;11839:39::-;-1:-1:-1;11964:31:88;11981:13;;;;:3;:13;:::i;:::-;11964:16;:31::i;:::-;12005;12022:13;;;;;;;;:::i;12005:31::-;-1:-1:-1;12055:23:88;;12080:1;;-1:-1:-1;11347:742:88;-1:-1:-1;;;;;;;11347:742:88:o;13527:377::-;13707:14;;13621:6;;-1:-1:-1;;;;;13707:14:88;13699:37;13695:70;;13745:20;;;;;;;;;;;;;;13695:70;13847:3;13836:8;:14;13847:3;13836:8;:14;:::i;:::-;-1:-1:-1;13867:30:88;;13527:377;-1:-1:-1;;;;;13527:377:88:o;9949:432:23:-;-1:-1:-1;;;;;10061:19:23;;10057:89;;10103:32;;;;;10132:1;10103:32;;;13864:74:89;13837:18;;10103:32:23;13696:248:89;10057:89:23;-1:-1:-1;;;;;10159:21:23;;10155:90;;10203:31;;;;;10231:1;10203:31;;;13864:74:89;13837:18;;10203:31:23;13696:248:89;10155:90:23;-1:-1:-1;;;;;10254:18:23;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10299:76;;;;10349:7;-1:-1:-1;;;;;10333:31:23;10342:5;-1:-1:-1;;;;;10333:31:23;;10358:5;10333:31;;;;1742:25:89;;1730:2;1715:18;;1596:177;10333:31:23;;;;;;;;9949:432;;;;:::o;6271:1107::-;-1:-1:-1;;;;;6360:18:23;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:23;;-1:-1:-1;6356:540:23;;-1:-1:-1;;;;;6570:15:23;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;;;;-1:-1:-1;;;;;17471:55:89;;6649:50:23;;;17453:74:89;17543:18;;;17536:34;;;17586:18;;;17579:34;;;17426:18;;6649:50:23;17251:368:89;6599:115:23;-1:-1:-1;;;;;6834:15:23;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:23;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:23;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:23;7355:4;-1:-1:-1;;;;;7346:25:23;;7365:5;7346:25;;;;1742::89;;1730:2;1715:18;;1596:177;7346:25:23;;;;;;;;6271:1107;;;:::o;741:4141:54:-;823:14;1212:5;;;823:14;1413:6;1216:1;1212;1400:20;1473:5;1469:2;1466:13;1458:5;1454:2;1450:14;1446:34;1437:43;;;1633:5;1619:11;:19;1611:28;;;;;;1720:5;1729:1;1720:10;1716:177;;-1:-1:-1;1807:23:54;;;;-1:-1:-1;1865:13:54;;1716:177;2193:17;2293:11;2290:1;2287;2280:25;2701:12;2717:15;;;2716:31;;2869:22;;;;;3776:1;3757;:15;;3756:21;;4019:17;;;4015:21;;4008:28;4081:17;;;4077:21;;4070:28;4144:17;;;4140:21;;4133:28;4207:17;;;4203:21;;4196:28;4270:17;;;4266:21;;4259:28;4334:17;;;4330:21;;;4323:28;3313:12;;;;3309:23;;;3334:1;3305:31;2454:20;;;2443:32;;;3372:12;;;;2501:21;;;;3029:16;;;;3363:21;;;;4827:11;;;;;-1:-1:-1;;741:4141:54;;;;;:::o;1460:151:64:-;1542:1;1558:6;;;;;;1554:50;;1566:38;:25;:36;:38::i;:::-;1460:151;;;:::o;3508:1663:51:-;3953:4;3947:11;3710:21;4094:33;;;-1:-1:-1;;;;;4163:66:51;;4156:4;4147:14;;4140:90;4330:66;4299:98;;4276:4;4267:14;;4243:168;4483:4;4476;4467:14;;4460:28;3919:2;3909;3891:16;3887:25;3883:34;;;3879:43;4569:4;4565:26;;4558:4;4549:14;;4542:50;4662:16;4655:4;4646:14;;4639:40;3710:21;;4755:16;-1:-1:-1;4745:4:51;4736:14;;4721:51;4869:4;4850:15;4844:4;4840:26;4835:3;4831:36;4824:50;5022:66;5003:17;4999:90;4964:15;4958:4;4954:26;4949:3;4945:36;4921:182;5138:15;5132:4;5128:26;5123:3;5116:39;5546:918:88;5667:17;;5733:30;5749:13;;;;:3;:13;:::i;5733:30::-;5724:65;;;;;5783:4;5724:65;;;13864:74:89;-1:-1:-1;;;;;5724:50:88;;;;;;;13837:18:89;;5724:65:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5700:89;-1:-1:-1;5799:21:88;5832:30;5848:13;;;;;;;;:::i;5832:30::-;5823:65;;;;;5882:4;5823:65;;;13864:74:89;-1:-1:-1;;;;;5823:50:88;;;;;;;13837:18:89;;5823:65:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5799:89;-1:-1:-1;5899:23:88;5934:30;5950:13;;;;:3;:13;:::i;5934:30::-;-1:-1:-1;;;;;5925:56:88;;5982:13;5925:71;;;;;;;;;;;;;1742:25:89;;1730:2;1715:18;;1596:177;5925:71:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5899:97;-1:-1:-1;6006:23:88;6041:30;6057:13;;;;;;;;:::i;6041:30::-;-1:-1:-1;;;;;6032:56:88;;6089:13;6032:71;;;;;;;;;;;;;1742:25:89;;1730:2;1715:18;;1596:177;6032:71:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6006:97;-1:-1:-1;6115:27:88;6149:32;6170:10;:8;;;;;;;:3;:8;:::i;6149:32::-;6114:67;;;;;6203:254;6256:19;6289:43;6317:14;:12;:14::i;:::-;6289:27;:43::i;:::-;6346;6374:14;:12;:14::i;6346:43::-;6403:15;6432;6203:39;:254::i;1776:151:64:-;1859:1;1828:8;1875:5;;1871:49;;;1882:38;:25;:36;:38::i;6470:417:88:-;6545:18;6586:11;-1:-1:-1;;;;;6586:27:88;;6627:8;6649:205;;;;;;;;6700:14;:12;:14::i;:::-;6649:205;;;;;;6743:14;:12;:14::i;:::-;6649:205;;;;;;;;;;-1:-1:-1;6649:205:88;;;;;6586:294;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6575:305:88;6470:417;-1:-1:-1;;6470:417:88:o;1580:996:66:-;1682:20;1704:10;1716:18;1736:12;1821:17;1841:25;1859:6;1841:17;:25::i;:::-;1892:27;;;;;;;;1742:25:89;;;1821:45:66;;-1:-1:-1;1877:12:66;;-1:-1:-1;;;;;1892:16:66;;;;;1715:18:89;;1892:27:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1877:42;;-1:-1:-1;;;;;2245:4:66;2241:53;2225:69;;2374:4;2369:3;2365:14;2362:1;2351:29;2343:37;;2464:8;2457:4;2452:3;2448:14;2444:29;2429:44;;2551:8;2544:4;2539:3;2535:14;2531:29;2522:38;;2172:398;;1580:996;;;;;;;:::o;8958:1276:88:-;9165:18;9213:9;9199:23;;:11;:23;;;9195:1033;;;9246:242;9278:177;:166;9329:38;9357:9;9329:27;:38::i;:::-;9369;9397:9;9369:27;:38::i;:::-;9416:9;9278:29;:166::i;:::-;:175;:177::i;:::-;639:3:74;607:18;;448:222;9246:242:88;9238:250;;9195:1033;;;9523:9;9509:23;;:11;:23;;;9505:723;;;9556:380;9588:158;:147;9639:19;9660:38;9688:9;9660:27;:38::i;9588:158::-;9764;:147;9815:38;9843:9;9815:27;:38::i;:::-;9855:19;9883:9;9764:29;:147::i;9505:723::-;9975:242;10007:1;10026:177;:166;10077:38;10105:9;10077:27;:38::i;:::-;10117;10145:9;10117:27;:38::i;:::-;10164:9;10026:29;:166::i;4059:629:28:-;4478:23;4504:33;-1:-1:-1;;;;;4504:27:28;;4532:4;4504:27;:33::i;:::-;4478:59;;4551:10;:17;4572:1;4551:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4631:40;;;;;-1:-1:-1;;;;;13882:55:89;;4631:40:28;;;13864:74:89;13837:18;;4631:40:28;13696:248:89;12095:300:88;12170:17;12199:19;12221:88;12259:4;12266:14;:12;:14::i;:::-;12282;:12;:14::i;:::-;2503:4:62;2497:11;;12306:1:88;2537:4:62;2528:14;;2521:28;;;2594:4;2585:14;;2578:33;;;;2656:4;2647:14;;2640:33;;;;2702:18;;;2790:4;2783;2774:14;;2764:31;2879:14;;;2872:25;;;-1:-1:-1;2939:14:62;;2932:25;;;3014:14;;2764:31;2184:878;12221:88:88;12199:110;-1:-1:-1;12331:57:88;12364:10;:8;;;;;;;:3;:8;:::i;:10::-;-1:-1:-1;;;;;12331:11:88;:32;;12376:11;12331:32;:57::i;12401:543::-;12473:20;12496:50;-1:-1:-1;;;;;12496:11:88;:25;12530:4;12537:8;12496:25;:50::i;:::-;12473:73;;12576:1;12560:13;:17;12556:183;;;12593:72;-1:-1:-1;;;;;12593:13:88;;12607:11;12628:4;12643:13;12659:5;12593:13;:72::i;:::-;12679:49;12695:8;12713:13;12679:15;:49::i;:::-;12768:1;12752:13;:17;12748:190;;;12785:53;12804:8;12822:14;12823:13;12822:14;:::i;:::-;12785:18;:53::i;:::-;12852:75;12868:11;12889:4;12904:14;12905:13;12904:14;:::i;:::-;-1:-1:-1;;;;;12852:15:88;;;:75;;12921:5;12852:15;:75::i;753:163:51:-;863:8;860:1;853:19;895:4;892:1;885:15;3149:4018:69;3359:1;3348:19;3212:20;3458:3;3454:14;;;3726:15;;;3716:26;1317:6;3774:35;;3770:78;;;3811:37;:20;3843:4;3811:31;:37::i;:::-;4456:52;4523:3;4510:17;;4452:76;4460:11;4435:94;4570:3;4560:13;;:18;4556:83;;4597:34;4589:42;4636:3;4588:51;4556:83;4667:3;4657:13;;:18;4653:83;;4694:34;4686:42;4733:3;4685:51;4653:83;4764:3;4754:13;;:18;4750:83;;4791:34;4783:42;4830:3;4782:51;4750:83;4861:4;4851:14;;:19;4847:84;;4889:34;4881:42;4928:3;4880:51;4847:84;4959:4;4949:14;;:19;4945:84;;4987:34;4979:42;5026:3;4978:51;4945:84;5057:4;5047:14;;:19;5043:84;;5085:34;5077:42;5124:3;5076:51;5043:84;5155:4;5145:14;;:19;5141:84;;5183:34;5175:42;5222:3;5174:51;5141:84;5253:5;5243:15;;:20;5239:85;;5282:34;5274:42;5321:3;5273:51;5239:85;5352:5;5342:15;;:20;5338:85;;5381:34;5373:42;5420:3;5372:51;5338:85;5451:5;5441:15;;:20;5437:85;;5480:34;5472:42;5519:3;5471:51;5437:85;5550:5;5540:15;;:20;5536:85;;5579:34;5571:42;5618:3;5570:51;5536:85;5649:6;5639:16;;:21;5635:86;;5679:34;5671:42;5718:3;5670:51;5635:86;5749:6;5739:16;;:21;5735:86;;5779:34;5771:42;5818:3;5770:51;5735:86;5849:6;5839:16;;:21;5835:86;;5879:34;5871:42;5918:3;5870:51;5835:86;5949:6;5939:16;;:21;5935:86;;5979:34;5971:42;6018:3;5970:51;5935:86;6049:7;6039:17;;:22;6035:86;;6080:33;6072:41;6118:3;6071:50;6035:86;6149:7;6139:17;;:22;6135:85;;6180:32;6172:40;6217:3;6171:49;6135:85;6248:7;6238:17;;:22;6234:83;;6279:30;6271:38;6314:3;6270:47;6234:83;6345:7;6335:17;;:22;6331:78;;6376:25;6368:33;6406:3;6367:42;6331:78;6548:1;6542:4;6538:12;6535:47;;;6566:6;6562:18;6535:47;7117:18;7106:30;7125:2;7098:39;;3149:4018;-1:-1:-1;;;3149:4018:69:o;2870:901:83:-;3073:17;3122:13;-1:-1:-1;;;;;3106:29:83;:13;-1:-1:-1;;;;;3106:29:83;;3102:98;;;3171:13;;3186;3102:98;3231:13;-1:-1:-1;;;;;3215:29:83;:12;-1:-1:-1;;;;;3215:29:83;;3211:554;;3272:61;3295:13;3310;3325:7;3272:22;:61::i;3211:554::-;3369:13;-1:-1:-1;;;;;3354:28:83;:12;-1:-1:-1;;;;;3354:28:83;;3350:415;;;3398:18;3419:60;3442:12;3456:13;3471:7;3419:22;:60::i;:::-;3398:81;;3493:18;3514:60;3537:13;3552:12;3566:7;3514:22;:60::i;:::-;3493:81;;3614:10;3601:23;;:10;:23;;;:49;;3640:10;3601:49;;;3627:10;3601:49;3589:61;;3384:277;;3350:415;;;3693:61;3716:13;3731;3746:7;3693:22;:61::i;14852:160:66:-;14953:51;;14917:7;;14953:51;;14984:6;;414:1;;14953:51;;23851:19:89;;;23895:2;23886:12;;23879:28;23932:2;23923:12;;23694:247;14953:51:66;;;;;;;;;;;;;14943:62;;;;;;14936:69;;14852:160;;;:::o;12876:424:65:-;13012:6;13077:1;13065:9;:13;;;:218;;13201:82;:71;13217:13;13232;13255:9;13267:4;13201:15;:71::i;:::-;:80;:82::i;:::-;13200:83;;13065:218;;;13097:84;:73;13113:13;13128;13152:9;13151:10;;13164:5;13097:15;:73::i;13649:424::-;13785:6;13850:1;13838:9;:13;;;:218;;13974:82;:71;13990:13;14005;14028:9;14040:4;13974:15;:71::i;13838:218::-;13870:84;:73;13886:13;13901;13925:9;13924:10;;13937:5;13870:15;:73::i;2705:151:29:-;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;12471:291:66:-;12605:17;12638:12;12653:40;12674:6;12682:10;12653:20;:40::i;:::-;12731:22;;;;;;;;1742:25:89;;;12638:55:66;;-1:-1:-1;;;;;;12731:16:66;;;;;1715:18:89;;12731:22:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1711:436:70:-;1814:6;1832:11;-1:-1:-1;;;;;1906:6:70;1902:55;1899:1;1892:66;-1:-1:-1;;;;;1986:8:70;1982:57;1978:2;1971:69;2073:2;2070:1;2060:16;2053:23;;2117:7;-1:-1:-1;;;;;2117:16:70;;2134:3;2117:21;;;;;;;;;;;;;1742:25:89;;1730:2;1715:18;;1596:177;2762:376:86;2988:24;;3005:7;2988:24;3022:6;:109;;3086:45;;;;;-1:-1:-1;;;;;18644:55:89;;;3086:45:86;;;18626:74:89;18736:55;;;18716:18;;;18709:83;18808:18;;;18801:34;;;3086:16:86;;;;;18599:18:89;;3086:45:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3022:109;;;3031:11;-1:-1:-1;;;;;3031:16:86;;3048:9;3059:15;:8;-1:-1:-1;;;;;3059:13:86;-1:-1:-1;;;;;5144:41:76;;5069:123;3059:15:86;3031:52;;;;;;;;;;-1:-1:-1;;;;;17471:55:89;;;3031:52:86;;;17453:74:89;17543:18;;;17536:34;17586:18;;;17579:34;;;17426:18;;3031:52:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3022:109;2762:376;;;;;:::o;1351:994::-;1561:24;;1578:7;1561:24;1757:4;1753:586;;;1777:11;-1:-1:-1;;;;;1777:16:86;;1794:5;1801:15;:8;-1:-1:-1;;;;;1801:13:86;-1:-1:-1;;;;;5144:41:76;;5069:123;1801:15:86;1777:48;;;;;;;;;;-1:-1:-1;;;;;17471:55:89;;;1777:48:86;;;17453:74:89;17543:18;;;17536:34;17586:18;;;17579:34;;;17426:18;;1777:48:86;17251:368:89;1753:586:86;-1:-1:-1;;;;;1846:22:86;;1842:497;;1886:26;;;;;-1:-1:-1;;;;;13882:55:89;;;1886:26:86;;;13864:74:89;1886:16:86;;;;;13837:18:89;;1886:26:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1926:11;-1:-1:-1;;;;;1926:18:86;;1952:6;1926:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1842:497;;;1992:26;;;;;-1:-1:-1;;;;;13882:55:89;;;1992:26:86;;;13864:74:89;1992:16:86;;;;;13837:18:89;;1992:26:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;2036:22:86;;2053:4;2036:22;2032:263;;2078:87;-1:-1:-1;;;;;2078:50:86;;2129:5;2144:11;2158:6;2078:50;:87::i;:::-;2032:263;;;2204:76;-1:-1:-1;;;;;2204:46:86;;2259:11;2273:6;2204:46;:76::i;:::-;2308:11;-1:-1:-1;;;;;2308:18:86;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1351:994;;;;;:::o;1357:223:51:-;1480:8;1477:1;1470:19;1529:5;1526:1;1515:20;1509:4;1502:34;1559:4;1556:1;1549:15;895:516:83;1037:17;1114:13;-1:-1:-1;;;;;1098:29:83;:13;-1:-1:-1;;;;;1098:29:83;;1094:98;;;1163:13;;1178;1094:98;1206:20;1229:63;1245:13;-1:-1:-1;;;;;1229:63:83;1260:13;-1:-1:-1;;;;;1229:63:83;335:27:53;1229:15:83;:63::i;:::-;1206:86;;1313:81;:69;1329:7;1338:12;1368:13;1352;:29;-1:-1:-1;;;;;1313:69:83;:15;:69::i;:::-;:79;:81::i;1850:420::-;1992:17;2069:13;-1:-1:-1;;;;;2053:29:83;:13;-1:-1:-1;;;;;2053:29:83;;2049:98;;;2118:13;;2133;2049:98;2168:85;:73;2184:7;335:27:53;2227:13:83;2211;:29;-1:-1:-1;;;;;2168:73:83;:15;:73::i;9398:1050:65:-;9549:7;9616:13;-1:-1:-1;;;;;9600:29:65;:13;-1:-1:-1;;;;;9600:29:65;;9596:98;;;9665:13;;9680;9596:98;-1:-1:-1;;;;;9840:13:65;9836:62;9826:205;;9932:10;9929:1;9922:21;10008:4;10002;9995:18;9826:205;10080:45;295:2:53;10080:45:65;;;;-1:-1:-1;;;;;10160:29:65;;;10139:50;10211:7;:220;;10418:13;-1:-1:-1;;;;;10361:70:65;:54;10377:10;10389;10401:13;-1:-1:-1;;;;;10361:54:65;:15;:54::i;:::-;:70;;;;;:::i;:::-;;10211:220;;;10237:105;10262:64;10288:10;10300;10312:13;-1:-1:-1;;;;;10262:64:65;:25;:64::i;:::-;10328:13;-1:-1:-1;;;;;10237:105:65;606:9:71;;;620;;617:16;;602:32;;469:181;11589:938:65;11740:15;-1:-1:-1;;;;;10718:50:65;;;10666;;;10662:107;10849:3;10845:14;;;11099:15;;;11089:26;335:27:53;11907:18:65;;;12323:51;11907:18;11089:26;335:27:53;12323:15:65;:51::i;:::-;12313:61;;12502:7;12498:1;12484:11;12473:9;12461:10;12454:42;12451:49;12447:63;12438:7;12434:77;12423:88;;12409:112;;;11589:938;;;;;;:::o;3180:392:29:-;3279:12;3331:5;3307:21;:29;3303:108;;;3359:41;;;;;3394:4;3359:41;;;13864:74:89;13837:18;;3359:41:29;13696:248:89;3303:108:29;3421:12;3435:23;3462:6;-1:-1:-1;;;;;3462:11:29;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;3180:392;-1:-1:-1;;;;;;3180:392:29:o;15507:517:66:-;15595:7;15671:17;15691:25;15709:6;15691:17;:25::i;:::-;15671:45;-1:-1:-1;15798:23:66;15832:37;1100:1;15671:45;15832:37;:::i;:::-;15971:45;;;;;;23851:19:89;;;23886:12;;;23879:28;;;15824:46:66;;-1:-1:-1;23923:12:89;;15971:45:66;;;;;;;;;;;;15961:56;;;;;;15954:63;;;;15507:517;;;;:::o;1618:188:19:-;1745:53;;-1:-1:-1;;;;;18644:55:89;;;1745:53:19;;;18626:74:89;18736:55;;;18716:18;;;18709:83;18808:18;;;18801:34;;;1718:81:19;;1738:5;;1760:18;;;;;18599::89;;1745:53:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:19;:81::i;1219:160::-;1328:43;;-1:-1:-1;;;;;25157:55:89;;;1328:43:19;;;25139:74:89;25229:18;;;25222:34;;;1301:71:19;;1321:5;;1343:14;;;;;25112:18:89;;1328:43:19;24965:297:89;790:155:64;876:1;892:6;;;;;888:50;;900:38;:25;:36;:38::i;5164:296:54:-;5256:14;5315:25;5322:1;5325;5328:11;5315:6;:25::i;:::-;5306:34;;5371:11;5358:25;;;;;:::i;:::-;5368:1;5365;5358:25;:30;5354:90;;5416:8;;:12;5408:21;;;;;4625:582:29;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:29;;;:23;5045:49;5041:119;;;5121:24;;;;;-1:-1:-1;;;;;13882:55:89;;5121:24:29;;;13864:74:89;13837:18;;5121:24:29;13696:248:89;5041:119:29;-1:-1:-1;5180:10:29;5173:17;;8370:720:19;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;-1:-1:-1;;8916:1:19;8910:8;8866:16;;-1:-1:-1;8942:15:19;;:68;;8994:11;9009:1;8994:16;;8942:68;;;-1:-1:-1;;;;;8960:26:19;;;:31;8942:68;8938:146;;;9033:40;;;;;-1:-1:-1;;;;;13882:55:89;;9033:40:19;;;13864:74:89;13837:18;;9033:40:19;13696:248:89;5743:516:29;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;5870:383;5743:516;:::o;156:477:89:-;305:2;294:9;287:21;268:4;337:6;331:13;380:6;375:2;364:9;360:18;353:34;439:6;434:2;426:6;422:15;417:2;406:9;402:18;396:50;495:1;490:2;481:6;470:9;466:22;462:31;455:42;624:2;554:66;549:2;541:6;537:15;533:88;522:9;518:104;514:113;506:121;;;156:477;;;;:::o;638:154::-;-1:-1:-1;;;;;717:5:89;713:54;706:5;703:65;693:93;;782:1;779;772:12;797:134;865:20;;894:31;865:20;894:31;:::i;936:367::-;1004:6;1012;1065:2;1053:9;1044:7;1040:23;1036:32;1033:52;;;1081:1;1078;1071:12;1033:52;1120:9;1107:23;1139:31;1164:5;1139:31;:::i;:::-;1189:5;1267:2;1252:18;;;;1239:32;;-1:-1:-1;;;936:367:89:o;1778:156::-;1838:5;1883:3;1874:6;1869:3;1865:16;1861:26;1858:46;;;1900:1;1897;1890:12;1858:46;-1:-1:-1;1922:6:89;1778:156;-1:-1:-1;1778:156:89:o;1939:170::-;2013:5;2058:3;2049:6;2044:3;2040:16;2036:26;2033:46;;;2075:1;2072;2065:12;2114:347;2165:8;2175:6;2229:3;2222:4;2214:6;2210:17;2206:27;2196:55;;2247:1;2244;2237:12;2196:55;-1:-1:-1;2270:20:89;;2313:18;2302:30;;2299:50;;;2345:1;2342;2335:12;2299:50;2382:4;2374:6;2370:17;2358:29;;2434:3;2427:4;2418:6;2410;2406:19;2402:30;2399:39;2396:59;;;2451:1;2448;2441:12;2396:59;2114:347;;;;;:::o;2466:829::-;2633:6;2641;2649;2657;2665;2718:3;2706:9;2697:7;2693:23;2689:33;2686:53;;;2735:1;2732;2725:12;2686:53;2774:9;2761:23;2793:31;2818:5;2793:31;:::i;:::-;2843:5;-1:-1:-1;2867:63:89;2922:7;2917:2;2902:18;;2867:63;:::i;:::-;2857:73;;2949:78;3019:7;3013:3;3002:9;2998:19;2949:78;:::i;:::-;2939:88;;3078:3;3067:9;3063:19;3050:33;3106:18;3098:6;3095:30;3092:50;;;3138:1;3135;3128:12;3092:50;3177:58;3227:7;3218:6;3207:9;3203:22;3177:58;:::i;:::-;2466:829;;;;-1:-1:-1;2466:829:89;;-1:-1:-1;3254:8:89;;3151:84;2466:829;-1:-1:-1;;;2466:829:89:o;3553:508::-;3630:6;3638;3646;3699:2;3687:9;3678:7;3674:23;3670:32;3667:52;;;3715:1;3712;3705:12;3667:52;3754:9;3741:23;3773:31;3798:5;3773:31;:::i;:::-;3823:5;-1:-1:-1;3880:2:89;3865:18;;3852:32;3893:33;3852:32;3893:33;:::i;:::-;3553:508;;3945:7;;-1:-1:-1;;;4025:2:89;4010:18;;;;3997:32;;3553:508::o;4066:247::-;4125:6;4178:2;4166:9;4157:7;4153:23;4149:32;4146:52;;;4194:1;4191;4184:12;4146:52;4233:9;4220:23;4252:31;4277:5;4252:31;:::i;4915:388::-;4983:6;4991;5044:2;5032:9;5023:7;5019:23;5015:32;5012:52;;;5060:1;5057;5050:12;5012:52;5099:9;5086:23;5118:31;5143:5;5118:31;:::i;:::-;5168:5;-1:-1:-1;5225:2:89;5210:18;;5197:32;5238:33;5197:32;5238:33;:::i;:::-;5290:7;5280:17;;;4915:388;;;;;:::o;5308:158::-;5371:5;5416:2;5407:6;5402:3;5398:16;5394:25;5391:45;;;5432:1;5429;5422:12;5471:807;5627:6;5635;5643;5651;5659;5712:3;5700:9;5691:7;5687:23;5683:33;5680:53;;;5729:1;5726;5719:12;5680:53;5768:9;5755:23;5787:31;5812:5;5787:31;:::i;:::-;5837:5;-1:-1:-1;5861:63:89;5916:7;5911:2;5896:18;;5861:63;:::i;:::-;5851:73;;5943:67;6002:7;5996:3;5985:9;5981:19;5943:67;:::i;:::-;5933:77;;6061:3;6050:9;6046:19;6033:33;6089:18;6081:6;6078:30;6075:50;;;6121:1;6118;6111:12;6727:208;6814:6;6867:2;6855:9;6846:7;6842:23;6838:32;6835:52;;;6883:1;6880;6873:12;6835:52;-1:-1:-1;6906:23:89;;6727:208;-1:-1:-1;6727:208:89:o;6940:1139::-;7193:6;7201;7209;7217;7225;7233;7241;7294:3;7282:9;7273:7;7269:23;7265:33;7262:53;;;7311:1;7308;7301:12;7262:53;7350:9;7337:23;7369:31;7394:5;7369:31;:::i;:::-;7419:5;-1:-1:-1;7443:63:89;7498:7;7493:2;7478:18;;7443:63;:::i;:::-;7433:73;;7525:78;7595:7;7589:3;7578:9;7574:19;7525:78;:::i;:::-;7515:88;-1:-1:-1;7676:3:89;7661:19;;7648:33;;-1:-1:-1;7780:3:89;7765:19;;7752:33;;-1:-1:-1;7862:3:89;7847:19;;7834:33;7890:18;7879:30;;7876:50;;;7922:1;7919;7912:12;7876:50;7961:58;8011:7;8002:6;7991:9;7987:22;7961:58;:::i;:::-;6940:1139;;;;-1:-1:-1;6940:1139:89;;-1:-1:-1;6940:1139:89;;;;7935:84;;-1:-1:-1;;;6940:1139:89:o;8441:118::-;8528:5;8525:1;8514:20;8507:5;8504:31;8494:59;;8549:1;8546;8539:12;8564:130;8630:20;;8659:29;8630:20;8659:29;:::i;8699:655::-;8811:6;8819;8827;8835;8888:3;8876:9;8867:7;8863:23;8859:33;8856:53;;;8905:1;8902;8895:12;8856:53;8944:9;8931:23;8963:31;8988:5;8963:31;:::i;:::-;9013:5;-1:-1:-1;9037:63:89;9092:7;9087:2;9072:18;;9037:63;:::i;:::-;9027:73;;9152:3;9141:9;9137:19;9124:33;9166;9191:7;9166:33;:::i;:::-;9218:7;-1:-1:-1;9277:3:89;9262:19;;9249:33;9291:31;9249:33;9291:31;:::i;:::-;8699:655;;;;-1:-1:-1;8699:655:89;;-1:-1:-1;;8699:655:89:o;9359:301::-;9418:6;9471:2;9459:9;9450:7;9446:23;9442:32;9439:52;;;9487:1;9484;9477:12;9439:52;9526:9;9513:23;9576:34;9569:5;9565:46;9558:5;9555:57;9545:85;;9626:1;9623;9616:12;9665:962;9864:6;9872;9880;9888;9896;9904;9957:3;9945:9;9936:7;9932:23;9928:33;9925:53;;;9974:1;9971;9964:12;9925:53;10013:9;10000:23;10032:31;10057:5;10032:31;:::i;:::-;10082:5;-1:-1:-1;10106:63:89;10161:7;10156:2;10141:18;;10106:63;:::i;:::-;10096:73;;10188:67;10247:7;10241:3;10230:9;10226:19;10188:67;:::i;:::-;10178:77;-1:-1:-1;10328:3:89;10313:19;;10300:33;;-1:-1:-1;10410:3:89;10395:19;;10382:33;10438:18;10427:30;;10424:50;;;10470:1;10467;10460:12;10424:50;10509:58;10559:7;10550:6;10539:9;10535:22;10509:58;:::i;:::-;9665:962;;;;-1:-1:-1;9665:962:89;;-1:-1:-1;9665:962:89;;10586:8;;9665:962;-1:-1:-1;;;9665:962:89:o;10970:915::-;11104:6;11112;11120;11128;11136;11144;11197:3;11185:9;11176:7;11172:23;11168:33;11165:53;;;11214:1;11211;11204:12;11165:53;11253:9;11240:23;11272:31;11297:5;11272:31;:::i;:::-;11322:5;-1:-1:-1;11346:63:89;11401:7;11396:2;11381:18;;11346:63;:::i;:::-;11336:73;-1:-1:-1;11482:3:89;11467:19;;11454:33;;-1:-1:-1;11586:3:89;11571:19;;11558:33;;-1:-1:-1;11668:3:89;11653:19;;11640:33;11696:18;11685:30;;11682:50;;;11728:1;11725;11718:12;11890:1801;12113:13;;1378;1371:21;1359:34;;12084:3;12069:19;;12185:4;12177:6;12173:17;12167:24;12200:51;12245:4;12234:9;12230:20;12216:12;1378:13;1371:21;1359:34;;1308:91;12200:51;;12300:4;12292:6;12288:17;12282:24;12315:53;12362:4;12351:9;12347:20;12331:14;1378:13;1371:21;1359:34;;1308:91;12315:53;;12417:4;12409:6;12405:17;12399:24;12432:53;12479:4;12468:9;12464:20;12448:14;1378:13;1371:21;1359:34;;1308:91;12432:53;;12534:4;12526:6;12522:17;12516:24;12549:53;12596:4;12585:9;12581:20;12565:14;1378:13;1371:21;1359:34;;1308:91;12549:53;;12651:4;12643:6;12639:17;12633:24;12666:53;12713:4;12702:9;12698:20;12682:14;1378:13;1371:21;1359:34;;1308:91;12666:53;;12768:4;12760:6;12756:17;12750:24;12783:53;12830:4;12819:9;12815:20;12799:14;1378:13;1371:21;1359:34;;1308:91;12783:53;;12885:4;12877:6;12873:17;12867:24;12900:53;12947:4;12936:9;12932:20;12916:14;1378:13;1371:21;1359:34;;1308:91;12900:53;;13002:6;12994;12990:19;12984:26;13019:55;13066:6;13055:9;13051:22;13035:14;1378:13;1371:21;1359:34;;1308:91;13019:55;;13123:6;13115;13111:19;13105:26;13140:55;13187:6;13176:9;13172:22;13156:14;1378:13;1371:21;1359:34;;1308:91;13140:55;;13244:6;13236;13232:19;13226:26;13261:55;13308:6;13297:9;13293:22;13277:14;1378:13;1371:21;1359:34;;1308:91;13261:55;;13366:6;13358;13354:19;13348:26;13383:56;13431:6;13420:9;13416:22;13399:15;1378:13;1371:21;1359:34;;1308:91;13383:56;;13489:6;13481;13477:19;13471:26;13506:56;13554:6;13543:9;13539:22;13522:15;1378:13;1371:21;1359:34;;1308:91;13506:56;;13612:6;13604;13600:19;13594:26;13629:56;13677:6;13666:9;13662:22;13645:15;1378:13;1371:21;1359:34;;1308:91;13949:517;14054:6;14062;14070;14123:3;14111:9;14102:7;14098:23;14094:33;14091:53;;;14140:1;14137;14130:12;14091:53;14179:9;14166:23;14198:31;14223:5;14198:31;:::i;:::-;14248:5;-1:-1:-1;14272:63:89;14327:7;14322:2;14307:18;;14272:63;:::i;:::-;14262:73;;14387:3;14376:9;14372:19;14359:33;14401;14426:7;14401:33;:::i;:::-;14453:7;14443:17;;;13949:517;;;;;:::o;14984:437::-;15063:1;15059:12;;;;15106;;;15127:61;;15181:4;15173:6;15169:17;15159:27;;15127:61;15234:2;15226:6;15223:14;15203:18;15200:38;15197:218;;15271:77;15268:1;15261:88;15372:4;15369:1;15362:15;15400:4;15397:1;15390:15;15426:184;15478:77;15475:1;15468:88;15575:4;15572:1;15565:15;15599:4;15596:1;15589:15;15615:240;15650:3;15698:5;15694:2;15683:21;15728:66;15719:7;15716:79;15713:105;;15798:18;;:::i;:::-;15838:1;15834:15;;15615:240;-1:-1:-1;;15615:240:89:o;15860:119::-;15945:8;15938:5;15934:20;15927:5;15924:31;15914:59;;15969:1;15966;15959:12;15984:132;16051:20;;16080:30;16051:20;16080:30;:::i;16121:925::-;16206:6;16266:3;16254:9;16245:7;16241:23;16237:33;16282:2;16279:22;;;16297:1;16294;16287:12;16279:22;-1:-1:-1;16346:2:89;16340:9;16388:3;16376:16;;16422:18;16407:34;;16443:22;;;16404:62;16401:242;;;16499:77;16496:1;16489:88;16600:4;16597:1;16590:15;16628:4;16625:1;16618:15;16401:242;16659:2;16652:22;16698:29;16717:9;16698:29;:::i;:::-;16690:6;16683:45;16761:38;16795:2;16784:9;16780:18;16761:38;:::i;:::-;16756:2;16748:6;16744:15;16737:63;16833:37;16866:2;16855:9;16851:18;16833:37;:::i;:::-;16828:2;16820:6;16816:15;16809:62;16904:36;16936:2;16925:9;16921:18;16904:36;:::i;:::-;16899:2;16891:6;16887:15;16880:61;16975:39;17009:3;16998:9;16994:19;16975:39;:::i;:::-;16969:3;16957:16;;16950:65;16961:6;16121:925;-1:-1:-1;;;16121:925:89:o;17051:195::-;17090:3;17121:66;17114:5;17111:77;17108:103;;17191:18;;:::i;:::-;-1:-1:-1;17238:1:89;17227:13;;17051:195::o;17624:184::-;17694:6;17747:2;17735:9;17726:7;17722:23;17718:32;17715:52;;;17763:1;17760;17753:12;17715:52;-1:-1:-1;17786:16:89;;17624:184;-1:-1:-1;17624:184:89:o;18235:::-;18287:77;18284:1;18277:88;18384:4;18381:1;18374:15;18408:4;18405:1;18398:15;19148:191;19183:3;19214:66;19207:5;19204:77;19201:103;;19284:18;;:::i;:::-;-1:-1:-1;19324:1:89;19320:13;;19148:191::o;19641:1355::-;19808:5;19795:19;19823:33;19848:7;19823:33;:::i;:::-;19492:11;;19505:66;19488:84;-1:-1:-1;;;;;19574:54:89;;19485:144;19472:158;;19865:106;20008:1;20002:4;19998:12;20058:2;20051:5;20047:14;20034:28;20071:33;20096:7;20071:33;:::i;:::-;19492:11;;19505:66;19488:84;-1:-1:-1;;;;;19574:54:89;;19485:144;19472:158;;20113:112;20273:2;20266:5;20262:14;20249:28;20286:32;20310:7;20286:32;:::i;:::-;20343:10;20337:17;20402:2;20395:5;20391:14;20378:28;20415:31;20438:7;20415:31;:::i;:::-;20701:7;20696:3;20692:17;20636:54;20632:78;20580:48;20570:7;20565:3;20561:17;20557:72;20488:66;20484:2;20480:75;20477:153;20474:237;20462:10;20455:257;;;;;20740:1;20789:3;20782:5;20778:15;20765:29;20803:33;20828:7;20803:33;:::i;:::-;20978:1;20968:12;;19492:11;;19505:66;19488:84;-1:-1:-1;;;;;19574:54:89;;19485:144;19472:158;;20860:7;-1:-1:-1;20860:7:89;20876:114;19344:292;21001:125;21066:9;;;21087:10;;;21084:36;;;21100:18;;:::i;21440:1180::-;21830:13;;-1:-1:-1;;;;;21826:62:89;;;21808:81;;21933:4;21921:17;;21915:24;21977:58;;;21970:4;21955:20;;21948:88;22082:3;22078:19;;;22099:8;22074:34;22067:4;22052:20;;22045:64;22165:3;22161:19;;;;22158:1;22147:34;;;22140:4;22125:20;;22118:64;22215:14;;22209:21;22271:59;;;22361:4;22346:20;;22339:84;21789:4;;22432:68;;22480:19;;22472:6;21238:5;21232:12;21229:1;21218:27;21213:3;21206:40;21309:4;21302:5;21298:16;21292:23;21289:1;21278:38;21271:4;21266:3;21262:14;21255:62;21366:4;21359:5;21355:16;21349:23;21342:4;21337:3;21333:14;21326:47;21422:4;21415:5;21411:16;21405:23;21398:4;21393:3;21389:14;21382:47;;;21131:304;22432:68;22537:3;22531;22520:9;22516:19;22509:32;22558:56;22609:3;22598:9;22594:19;105:1;93:14;;140:4;131:14;;14:137;22625:411;22772:6;22780;22833:2;22821:9;22812:7;22808:23;22804:32;22801:52;;;22849:1;22846;22839:12;22801:52;-1:-1:-1;;22894:16:89;;23000:2;22985:18;;;22979:25;22894:16;;22979:25;;-1:-1:-1;22625:411:89:o;23412:277::-;23479:6;23532:2;23520:9;23511:7;23507:23;23503:32;23500:52;;;23548:1;23545;23538:12;23500:52;23580:9;23574:16;23633:5;23626:13;23619:21;23612:5;23609:32;23599:60;;23655:1;23652;23645:12;24659:301;24788:3;24826:6;24820:13;24872:6;24865:4;24857:6;24853:17;24848:3;24842:37;24934:1;24898:16;;24923:13;;;-1:-1:-1;24898:16:89;24659:301;-1:-1:-1;24659:301:89:o",
        "linkReferences": {},
        "immutableReferences": {
            "50306": [
                {
                    "start": 1848,
                    "length": 32
                },
                {
                    "start": 2217,
                    "length": 32
                },
                {
                    "start": 2378,
                    "length": 32
                },
                {
                    "start": 2842,
                    "length": 32
                },
                {
                    "start": 3016,
                    "length": 32
                },
                {
                    "start": 3146,
                    "length": 32
                },
                {
                    "start": 3620,
                    "length": 32
                },
                {
                    "start": 3749,
                    "length": 32
                },
                {
                    "start": 3873,
                    "length": 32
                },
                {
                    "start": 6163,
                    "length": 32
                },
                {
                    "start": 8717,
                    "length": 32
                },
                {
                    "start": 9535,
                    "length": 32
                },
                {
                    "start": 9588,
                    "length": 32
                },
                {
                    "start": 9652,
                    "length": 32
                },
                {
                    "start": 9732,
                    "length": 32
                }
            ]
        }
    },
    "methodIdentifiers": {
        "addReHypothecatedLiquidity(uint128)": "8f743357",
        "afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": "9f063efc",
        "afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": "e1b4af69",
        "afterInitialize(address,(address,address,uint24,int24,address),uint160,int24)": "6fe7e6eb",
        "afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": "6c2bbe7e",
        "afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)": "b47b2fb1",
        "afterSwapCount(bytes32)": "dacdbe77",
        "allowance(address,address)": "dd62ed3e",
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": "259982e5",
        "beforeAddLiquidityCount(bytes32)": "c6939957",
        "beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": "b6a8b0fa",
        "beforeInitialize(address,(address,address,uint24,int24,address),uint160)": "dc98354e",
        "beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": "21d0ee70",
        "beforeRemoveLiquidityCount(bytes32)": "db6a9451",
        "beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)": "575e24b4",
        "beforeSwapCount(bytes32)": "5c338d32",
        "decimals()": "313ce567",
        "getHookPermissions()": "c4e833ce",
        "getTickLower()": "647504be",
        "getTickUpper()": "32c684ad",
        "getVaultAddress(address)": "ef88c31e",
        "name()": "06fdde03",
        "poolManager()": "dc4c90d3",
        "removeReHypothecatedLiquidity(address)": "273264aa",
        "setVaults(address,address)": "4c451a6a",
        "symbol()": "95d89b41",
        "totalSupply()": "18160ddd",
        "transfer(address,uint256)": "a9059cbb",
        "transferFrom(address,address,uint256)": "23b872dd"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IPoolManager\",\"name\":\"_poolManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyInitialized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HookNotImplemented\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmounts\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCurrency\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPool\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotPoolManager\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotSelf\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PoolKeyNotInitialized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroLiquidity\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"}],\"name\":\"addReHypothecatedLiquidity\",\"outputs\":[{\"internalType\":\"BalanceDelta\",\"name\":\"delta\",\"type\":\"int256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct ModifyLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"BalanceDelta\",\"name\":\"delta0\",\"type\":\"int256\"},{\"internalType\":\"BalanceDelta\",\"name\":\"delta1\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"afterAddLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"afterDonate\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"afterInitialize\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct ModifyLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"BalanceDelta\",\"name\":\"delta0\",\"type\":\"int256\"},{\"internalType\":\"BalanceDelta\",\"name\":\"delta1\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"afterRemoveLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct SwapParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"BalanceDelta\",\"name\":\"delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"afterSwap\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"int128\",\"name\":\"\",\"type\":\"int128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"PoolId\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"afterSwapCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct ModifyLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"beforeAddLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"PoolId\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"beforeAddLiquidityCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"beforeDonate\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"beforeInitialize\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct ModifyLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"beforeRemoveLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"PoolId\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"beforeRemoveLiquidityCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct SwapParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"beforeSwap\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"BeforeSwapDelta\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"PoolId\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"beforeSwapCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHookPermissions\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"beforeInitialize\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterInitialize\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeRemoveLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterRemoveLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeSwap\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterSwap\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeDonate\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterDonate\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeSwapReturnDelta\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterSwapReturnDelta\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterAddLiquidityReturnDelta\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterRemoveLiquidityReturnDelta\",\"type\":\"bool\"}],\"internalType\":\"struct Hooks.Permissions\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTickLower\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTickUpper\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Currency\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"getVaultAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolManager\",\"outputs\":[{\"internalType\":\"contract IPoolManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"removeReHypothecatedLiquidity\",\"outputs\":[{\"internalType\":\"BalanceDelta\",\"name\":\"delta\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault0_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault1_\",\"type\":\"address\"}],\"name\":\"setVaults\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"HookNotImplemented()\":[{\"details\":\"The hook function is not implemented.\"}],\"InvalidPool()\":[{\"details\":\"The pool is not authorized to use this hook.\"}],\"NotSelf()\":[{\"details\":\"The hook is not the caller.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"},{\"details\":\"An operation with an ERC20 token failed.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)\":{\"params\":{\"delta\":\"The caller's balance delta after adding liquidity; the sum of principal delta, fees accrued, and hook delta\",\"feesAccrued\":\"The fees accrued since the last time fees were collected from this position\",\"hookData\":\"Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for adding liquidity\",\"sender\":\"The initial msg.sender for the add liquidity call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\",\"_1\":\"BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\"}},\"afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"params\":{\"amount0\":\"The amount of token0 being donated\",\"amount1\":\"The amount of token1 being donated\",\"hookData\":\"Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook\",\"key\":\"The key for the pool\",\"sender\":\"The initial msg.sender for the donate call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"afterInitialize(address,(address,address,uint24,int24,address),uint160,int24)\":{\"params\":{\"key\":\"The key for the pool being initialized\",\"sender\":\"The initial msg.sender for the initialize call\",\"sqrtPriceX96\":\"The sqrt(price) of the pool as a Q64.96\",\"tick\":\"The current tick after the state of a pool is initialized\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)\":{\"params\":{\"delta\":\"The caller's balance delta after removing liquidity; the sum of principal delta, fees accrued, and hook delta\",\"feesAccrued\":\"The fees accrued since the last time fees were collected from this position\",\"hookData\":\"Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for removing liquidity\",\"sender\":\"The initial msg.sender for the remove liquidity call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\",\"_1\":\"BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\"}},\"afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)\":{\"params\":{\"delta\":\"The amount owed to the caller (positive) or owed to the pool (negative)\",\"hookData\":\"Arbitrary data handed into the PoolManager by the swapper to be be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for the swap\",\"sender\":\"The initial msg.sender for the swap call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\",\"_1\":\"int128 The hook's delta in unspecified currency. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"params\":{\"hookData\":\"Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for adding liquidity\",\"sender\":\"The initial msg.sender for the add liquidity call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"params\":{\"amount0\":\"The amount of token0 being donated\",\"amount1\":\"The amount of token1 being donated\",\"hookData\":\"Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook\",\"key\":\"The key for the pool\",\"sender\":\"The initial msg.sender for the donate call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"beforeInitialize(address,(address,address,uint24,int24,address),uint160)\":{\"params\":{\"key\":\"The key for the pool being initialized\",\"sender\":\"The initial msg.sender for the initialize call\",\"sqrtPriceX96\":\"The sqrt(price) of the pool as a Q64.96\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"params\":{\"hookData\":\"Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for removing liquidity\",\"sender\":\"The initial msg.sender for the remove liquidity call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)\":{\"params\":{\"hookData\":\"Arbitrary data handed into the PoolManager by the swapper to be be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for the swap\",\"sender\":\"The initial msg.sender for the swap call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\",\"_1\":\"BeforeSwapDelta The hook's delta in specified and unspecified currencies. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\",\"_2\":\"uint24 Optionally override the lp fee, only used if three conditions are met: 1. the Pool has a dynamic fee, 2. the value's 2nd highest bit is set (23rd bit, 0x400000), and 3. the value is less than or equal to the maximum fee (1 million)\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getHookPermissions()\":{\"details\":\"Get the hook permissions to signal which hook functions are to be implemented. Used at deployment to validate the address correctly represents the expected permissions.\",\"returns\":{\"_0\":\"The hook permissions.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"NotPoolManager()\":[{\"notice\":\"Thrown when calling unlockCallback where the caller is not `PoolManager`.\"}]},\"kind\":\"user\",\"methods\":{\"afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)\":{\"notice\":\"The hook called after liquidity is added\"},\"afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"notice\":\"The hook called after donate\"},\"afterInitialize(address,(address,address,uint24,int24,address),uint160,int24)\":{\"notice\":\"The hook called after the state of a pool is initialized\"},\"afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)\":{\"notice\":\"The hook called after liquidity is removed\"},\"afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)\":{\"notice\":\"The hook called after a swap\"},\"beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"notice\":\"The hook called before liquidity is added\"},\"beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"notice\":\"The hook called before donate\"},\"beforeInitialize(address,(address,address,uint24,int24,address),uint160)\":{\"notice\":\"The hook called before the state of a pool is initialized\"},\"beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"notice\":\"The hook called before liquidity is removed\"},\"beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)\":{\"notice\":\"The hook called before a swap\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ReHypothecation.sol\":\"ReHypothecation\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@ensdomains/=lib/uniswap-hooks/lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts/=lib/uniswap-hooks/lib/v4-core/lib/openzeppelin-contracts/contracts/\",\":@openzeppelin/uniswap-hooks/=lib/uniswap-hooks/\",\":@uniswap/v4-core/=lib/uniswap-hooks/lib/v4-core/\",\":@uniswap/v4-periphery/=lib/uniswap-hooks/lib/v4-periphery/\",\":ds-test/=lib/uniswap-hooks/lib/v4-core/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/uniswap-hooks/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/uniswap-hooks/lib/v4-periphery/lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/uniswap-hooks/lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":hardhat/=lib/uniswap-hooks/lib/v4-core/node_modules/hardhat/\",\":hookmate/=lib/hookmate/src/\",\":openzeppelin-contracts/=lib/uniswap-hooks/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/uniswap-hooks/lib/openzeppelin-contracts/contracts/\",\":permit2/=lib/uniswap-hooks/lib/v4-periphery/lib/permit2/\",\":solmate/=lib/uniswap-hooks/lib/v4-core/lib/solmate/\",\":uniswap-hooks/=lib/uniswap-hooks/src/\",\":v4-core/=lib/uniswap-hooks/lib/v4-core/\",\":v4-periphery/=lib/uniswap-hooks/lib/v4-periphery/\"]},\"sources\":{\"lib/uniswap-hooks/lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"lib/uniswap-hooks/lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"lib/uniswap-hooks/lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"lib/uniswap-hooks/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"lib/uniswap-hooks/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"lib/uniswap-hooks/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"lib/uniswap-hooks/lib/v4-core/lib/openzeppelin-contracts/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0x207f64371bc0fcc5be86713aa5da109a870cc3a6da50e93b64ee881e369b593d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://548667cfa76683767c2c610b577f6c2f0675d0ce28f53c3f37b969c84a56b205\",\"dweb:/ipfs/QmUzA1CKC6bDdULuS44wGd7PWBNLiHb6bh7oHwJBDZSLAx\"]},\"lib/uniswap-hooks/lib/v4-core/lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"lib/uniswap-hooks/lib/v4-core/lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"lib/uniswap-hooks/lib/v4-core/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/uniswap-hooks/lib/v4-core/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"lib/uniswap-hooks/lib/v4-core/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"lib/uniswap-hooks/lib/v4-core/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"lib/uniswap-hooks/lib/v4-core/lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/uniswap-hooks/lib/v4-core/lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/uniswap-hooks/lib/v4-core/src/interfaces/IExtsload.sol\":{\"keccak256\":\"0x80b53ca4907d6f0088c3b931f2b72cad1dc4615a95094d96bd0fb8dff8d5ba43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://375c69148622aab7a3537d5fd37d373a8e9731022c8d87bdaee46233b0a99fe1\",\"dweb:/ipfs/QmXFjdoYRxsA5B1kyuxEXgNf3FBoL1zPvy26Qy8EtpdFRN\"]},\"lib/uniswap-hooks/lib/v4-core/src/interfaces/IExttload.sol\":{\"keccak256\":\"0xc6b68283ebd8d1c789df536756726eed51c589134bb20821b236a0d22a135937\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://294394f72dfc219689209f4130d85601dfd0d63c8d47578050d312db70f9b6c8\",\"dweb:/ipfs/QmTDMQ3oxCGHgEBU48a3Lp4S1rRjc8vVCxkhE5ZNej1bsY\"]},\"lib/uniswap-hooks/lib/v4-core/src/interfaces/IHooks.sol\":{\"keccak256\":\"0xc131ffa2d04c10a012fe715fe2c115811526b7ea34285cf0a04ce7ce8320da8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b212358897db5d99c21244d88f97b2e788527552cb430629b472a8cc6289aec\",\"dweb:/ipfs/QmQtwV4dDe2RYk2ErLpaAX7U82jWh1L6Lw2HRuKDvBi84G\"]},\"lib/uniswap-hooks/lib/v4-core/src/interfaces/IPoolManager.sol\":{\"keccak256\":\"0xbdab3544da3d32dfdf7457baa94e17d5a3012952428559e013ffac45d067038e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce95ff864468e37c76adf71df061d4f3d6f3a5ec1f9bc3aea090463bc72798f4\",\"dweb:/ipfs/QmSbWh1pLbz51yQF4HEu5NRhr8XVv9JYGEw1hq1HudAnCi\"]},\"lib/uniswap-hooks/lib/v4-core/src/interfaces/IProtocolFees.sol\":{\"keccak256\":\"0x32a666e588a2f66334430357bb1e2424fe7eebeb98a3364b1dd16eb6ccca9848\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85751d302125881f72e5f8af051c2d5d9b1f606ebaea8ca7d04fccdd27cc252d\",\"dweb:/ipfs/QmeRwomeh9NWm6A6fgNA4KZPQZHPpdKsPQyYsHSFmvud7J\"]},\"lib/uniswap-hooks/lib/v4-core/src/interfaces/external/IERC20Minimal.sol\":{\"keccak256\":\"0xeccadf1bf69ba2eb51f2fe4fa511bc7bb05bbd6b9f9a3cb8e5d83d9582613e0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://118757369892687b99ef46ce28d6861f62c098285bd7687a4f17f7e44e5f81de\",\"dweb:/ipfs/QmUxqbYqQtcEwwFbb9e6BBMePEaSgN8C45v6RKubD4ib8d\"]},\"lib/uniswap-hooks/lib/v4-core/src/interfaces/external/IERC6909Claims.sol\":{\"keccak256\":\"0xa586f345739e52b0488a0fe40b6e375cce67fdd25758408b0efcb5133ad96a48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8c557b7e52abdbbd82e415a1acc27921446a7fd090b7d4877e52be72619547f\",\"dweb:/ipfs/QmXE2KNPbXmGX8BQF3ei6zhzRTnhoTQg39XmqMnkhbr6QK\"]},\"lib/uniswap-hooks/lib/v4-core/src/libraries/BitMath.sol\":{\"keccak256\":\"0x51b9be4f5c4fd3e80cbc9631a65244a2eb2be250b6b7f128a2035080e18aee8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe98bbd5498e912146b9319827fc63621eb66ff55d5baae0fa02a7a972ab8d1e\",\"dweb:/ipfs/QmY5hCuyrtgsJtk4AavrxcvBkRrChfr4N6ZnhdC8roPpNi\"]},\"lib/uniswap-hooks/lib/v4-core/src/libraries/CurrencyReserves.sol\":{\"keccak256\":\"0x1576616129933fcdf3b684cea33cffd9c95e18fafbd2832a8c48ac3d8526d4c3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://33b050efb9b81803b18f562271e7cca2ec5362c4d505860d6419b4a345636725\",\"dweb:/ipfs/QmQtFtTwKZ5pFVGD2ENDUXvp7ECFvzqeCuJ1miJcUHdmiX\"]},\"lib/uniswap-hooks/lib/v4-core/src/libraries/CustomRevert.sol\":{\"keccak256\":\"0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd\",\"dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt\"]},\"lib/uniswap-hooks/lib/v4-core/src/libraries/FixedPoint128.sol\":{\"keccak256\":\"0xad236e10853f4b4b20a35a9bb52b857c4fc79874846b7e444e06ead7f2630542\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0de1f9a06520b1a689660943faa14fc0b8344ab41fab9e6012ea34bff4b9b3eb\",\"dweb:/ipfs/QmRNMPTyko7W6d6KxuTsnDBa9oZgDK4xiwRRq3H9ASTbwy\"]},\"lib/uniswap-hooks/lib/v4-core/src/libraries/FixedPoint96.sol\":{\"keccak256\":\"0xef5c3fd41aee26bb12aa1c32873cfee88e67eddfe7c2b32283786265ac669741\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4de298d02f662a1c36c7be0a150f18c2a161408a5d3e48432e707efd01fac9a4\",\"dweb:/ipfs/QmSiM4oeMmLVKmAtJXz2feYkv4R9ZcyBpkTRW5Nhw5KDyJ\"]},\"lib/uniswap-hooks/lib/v4-core/src/libraries/FullMath.sol\":{\"keccak256\":\"0x4fc73a00817193fd3cac1cc03d8167d21af97d75f1815a070ee31a90c702b4c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3b2d66d36b1ad56b1ab6e2eb8a816740877b40b461c93f125e88621c8378e52\",\"dweb:/ipfs/QmPGvMZzKQvNiWKd8aRzzdW7oAizwrMgcMtnaworDkVHFC\"]},\"lib/uniswap-hooks/lib/v4-core/src/libraries/Hooks.sol\":{\"keccak256\":\"0xd679b4b2d429689bc44f136050ebc958fb2d7d0d3a3c7b3e48c08ab4fba09aaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287190cb72840e5eb63cc7a8a1d0b9150af17d8e4ea0323f47c7e7928f2033cb\",\"dweb:/ipfs/QmVfqWBnAQM2jUcuREDdvjcP21gNuLU35CoL3NG5CEhNcx\"]},\"lib/uniswap-hooks/lib/v4-core/src/libraries/LPFeeLibrary.sol\":{\"keccak256\":\"0xbf6914e01014e7c1044111feb7df7a3d96bb503b3da827ad8464b1955580d13b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33823c20a91882c9aacdcbb02f0558c05209f4d5954aa6dd4fa17c95664db475\",\"dweb:/ipfs/QmR7owkFgpfztpp1QUg3ut3nw9iPVQqLGP4hzgmZtRUQ2J\"]},\"lib/uniswap-hooks/lib/v4-core/src/libraries/LiquidityMath.sol\":{\"keccak256\":\"0x000ef2eadcc1eb7b2c18a77655f94e76e0e860f605783484657ef65fd6eda353\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a766b620a7a22798b43c6c1f23b5c6cff0ebf588deb89842bad05208d448cd99\",\"dweb:/ipfs/QmVKjaFJdzkqA3ey2Byum8iTCMssWVD8MmVC8rw62Tj5WD\"]},\"lib/uniswap-hooks/lib/v4-core/src/libraries/Lock.sol\":{\"keccak256\":\"0x9338be4b5695f1da5f3d3f7a3eeaf7a356c1045458289586ac0cbe9cef77c6d5\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://485ec42ed6155469d612a9a0c18068ebfbad74448792a338a435503de3ef1b2c\",\"dweb:/ipfs/QmVnnv5u74MYatfRmBgrcfFYQcsMAJMG9jQ6ju8UiydKNF\"]},\"lib/uniswap-hooks/lib/v4-core/src/libraries/NonzeroDeltaCount.sol\":{\"keccak256\":\"0x0666ebd5d3528d7d52c48538296367a4cff97a578cf13365c51983fae3219b87\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d27f1be3bd09d85c53d3e6a539dd6529ddd8b2b764ccb47fd7765fc81f9add59\",\"dweb:/ipfs/QmQdZujNXhKEXQBkKtF5jbdvo1yXMqPDUoBBaF9S5u3Kpm\"]},\"lib/uniswap-hooks/lib/v4-core/src/libraries/ParseBytes.sol\":{\"keccak256\":\"0x7533b13f53ee2c2c55500100b22ffd6e37e7523c27874edc98663d53a8672b15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82449058634fde28a085f3c59a6a5f412550c02181590593fd84c3e8b329aa17\",\"dweb:/ipfs/Qmev4E9Au6SsE4wsArChCwfg94KhHc5gYsEsZUnjF5sRLa\"]},\"lib/uniswap-hooks/lib/v4-core/src/libraries/Position.sol\":{\"keccak256\":\"0xddab2a831f1befb6abf5567e77c4582169ca8156cf69eb4f22d8e87f7226a3f9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c79fe61b50f3b70cff503abfa6f5643fcbefb9b794855bee1019b1e6d9c083b2\",\"dweb:/ipfs/QmbKmYNQesaMz8bo1b7TMHQcAwaDd3eDPrE5pAdPPZTtk5\"]},\"lib/uniswap-hooks/lib/v4-core/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x42c4a24f996a14d358be397b71f7ec9d7daf666aaec78002c63315a6ee67aa86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3db86e2ba3679105fc32edec656c70282e1fede6cab11217702443f6c26fa59\",\"dweb:/ipfs/QmX4yaaSPdKQzYNRsezjTvZKsubzS8JRTEGFD3fPpTTCcj\"]},\"lib/uniswap-hooks/lib/v4-core/src/libraries/SqrtPriceMath.sol\":{\"keccak256\":\"0xf8079fe6e3460db495451d06b1705e18f1c4075c1af96a31ad313545f7082982\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://582fc51546723a0a8acccf782f69b530bacf9b3ef929458e82569b7121f0b138\",\"dweb:/ipfs/QmSBXcmqZdFsM7M4sRaiyQAxykCeMNFKyKgBcwSMTw1bcF\"]},\"lib/uniswap-hooks/lib/v4-core/src/libraries/StateLibrary.sol\":{\"keccak256\":\"0x96db333ee126a841dd959e38e452cc59d73583cb0437a1d48b2052e33a74f952\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8672bba1eb69608299b0904f4ff305238eb18479d371c26518f278c9ee184cd0\",\"dweb:/ipfs/QmTLu3s6ECvsEDHStQv8HTVHYtvkviBbdjPrFJd4SpVRFY\"]},\"lib/uniswap-hooks/lib/v4-core/src/libraries/TickMath.sol\":{\"keccak256\":\"0x4e1a11e154eb06106cb1c4598f06cca5f5ca16eaa33494ba2f0e74981123eca8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a79a57f7b240783b045168d1c4f774ac1812caf8f9a83cb6959a86b0b07b6c70\",\"dweb:/ipfs/QmTb5kvxwDNW8jDuQaqdJ445cCFejNkUqEB17Bjo8UBiva\"]},\"lib/uniswap-hooks/lib/v4-core/src/libraries/TransientStateLibrary.sol\":{\"keccak256\":\"0x7d1e0875747bd89b32c25f1a48da2766e5f4aff1f671ad5f3c0c07ebbbcb946a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d76cfeb1cb60595b41ecc51c8a12fb4bf63a7fc733d0b1a2e3adb55abeb1f9d5\",\"dweb:/ipfs/Qmb8oX7DtsRpw3tTtdWZwGhauj1evq43d3PLwe4nSDAKkV\"]},\"lib/uniswap-hooks/lib/v4-core/src/libraries/UnsafeMath.sol\":{\"keccak256\":\"0xa6e55e0a43a15df2df471d9972cd48f613d07c663ecb8bbeaf7623f6f99bcce4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02ea6e13879fc5a5f35149a2f1cd8af3a1f0877ff69101dad53841d16f515572\",\"dweb:/ipfs/QmcpL4gdG6hL2w1wqs2Vw4J1EFCwBs9T1Qd4p16CtECQkn\"]},\"lib/uniswap-hooks/lib/v4-core/src/types/BalanceDelta.sol\":{\"keccak256\":\"0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9\",\"dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H\"]},\"lib/uniswap-hooks/lib/v4-core/src/types/BeforeSwapDelta.sol\":{\"keccak256\":\"0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782\",\"dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K\"]},\"lib/uniswap-hooks/lib/v4-core/src/types/Currency.sol\":{\"keccak256\":\"0x4a0b84b282577ff6f8acf13ec9f4d32dbb9348748b49611d00e68bee96609c93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45f9d62ab3d51b52957279e353853ba1547c3182c9a1e3d1846ada4a90263b01\",\"dweb:/ipfs/QmS8NG84ccQS1yXVD8cv3eKX7J1UKxuJhbUfHTQR2opKF5\"]},\"lib/uniswap-hooks/lib/v4-core/src/types/PoolId.sol\":{\"keccak256\":\"0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918\",\"dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y\"]},\"lib/uniswap-hooks/lib/v4-core/src/types/PoolKey.sol\":{\"keccak256\":\"0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639\",\"dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi\"]},\"lib/uniswap-hooks/lib/v4-core/src/types/PoolOperation.sol\":{\"keccak256\":\"0x7a1a107fc1f2208abb2c9364c8c54e56e98dca27673e9441bed2b949b6382162\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ad2470383bc5595d5af17840c64971f457adac68895a4db41ba5c71a4478e07\",\"dweb:/ipfs/QmdwKhBHDZFuqXrR2BfDBD9r7rB2ULGQBznsajRTkTmL4c\"]},\"lib/uniswap-hooks/lib/v4-periphery/src/libraries/LiquidityAmounts.sol\":{\"keccak256\":\"0x8ea74b89831877ffe657f8461164a01a6f3c7e46f415410854fca8d28a8cab53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4015f62e5e8aa154baa555dc39ce36b498e6d875a53f793d62b8556e6b97ccb\",\"dweb:/ipfs/QmUVHyEe3hZZZQum5ct6yDY8qduj62Ta7f7x5Kw95LpQbg\"]},\"lib/uniswap-hooks/src/base/BaseHook.sol\":{\"keccak256\":\"0xf1ae0fca4b9eeeb44ea1d06ef1d9faa8f8c74b89f66b19e80a25af8f8c08d6c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://895a643e9703093793b08bd81cbd48955f7d81ebb2e0ebdf7287c54af5fdcc4f\",\"dweb:/ipfs/QmQ3m774Qe4Rm6uJwL6W5NWxettVxZBueFTFGqpXTuTh9i\"]},\"lib/uniswap-hooks/src/utils/CurrencySettler.sol\":{\"keccak256\":\"0x623d9d1562dfba436bce4851d7de061c60287be04642bf6bcdc33d443f0cf3f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a00700cb12018269b0e39859361c57e360f6c83d7326b66941750a890a013bb5\",\"dweb:/ipfs/QmZgZWcqDc6JxJzSD6hDpcXBcCsEKDtqtkpX8N27kCUzJk\"]},\"src/ReHypothecation.sol\":{\"keccak256\":\"0x239125e46347345b1e2165c45051281c73847eca269bbaa9a1ae60d841657a79\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b9e51c200e27b6269f10b2be3e66c4e5c6c263fad042f202fe4fdbeb4f66cb0\",\"dweb:/ipfs/QmZ4GFCTyi1UXzF7YLTRBbMi6bWaxQ3UcuhGhbQXAeaomQ\"]}},\"version\":1}",
    "metadata": {
        "compiler": {
            "version": "0.8.26+commit.8a97fa7a"
        },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [
                        {
                            "internalType": "contract IPoolManager",
                            "name": "_poolManager",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "constructor"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "target",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "AddressEmptyCode"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "AddressInsufficientBalance"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "AlreadyInitialized"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "spender",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "allowance",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "needed",
                            "type": "uint256"
                        }
                    ],
                    "type": "error",
                    "name": "ERC20InsufficientAllowance"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "sender",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "balance",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "needed",
                            "type": "uint256"
                        }
                    ],
                    "type": "error",
                    "name": "ERC20InsufficientBalance"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "approver",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "ERC20InvalidApprover"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "receiver",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "ERC20InvalidReceiver"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "sender",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "ERC20InvalidSender"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "spender",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "ERC20InvalidSpender"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "FailedInnerCall"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "HookNotImplemented"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidAmounts"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidCurrency"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidPool"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NotPoolManager"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NotSelf"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "PoolKeyNotInitialized"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "SafeERC20FailedOperation"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "SafeERC20FailedOperation"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "ZeroLiquidity"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "spender",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Approval",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Transfer",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint128",
                            "name": "liquidity",
                            "type": "uint128"
                        }
                    ],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "addReHypothecatedLiquidity",
                    "outputs": [
                        {
                            "internalType": "BalanceDelta",
                            "name": "delta",
                            "type": "int256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "sender",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "key",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct ModifyLiquidityParams",
                            "name": "params",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "int24",
                                    "name": "tickLower",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickUpper",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "int256",
                                    "name": "liquidityDelta",
                                    "type": "int256"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "salt",
                                    "type": "bytes32"
                                }
                            ]
                        },
                        {
                            "internalType": "BalanceDelta",
                            "name": "delta0",
                            "type": "int256"
                        },
                        {
                            "internalType": "BalanceDelta",
                            "name": "delta1",
                            "type": "int256"
                        },
                        {
                            "internalType": "bytes",
                            "name": "hookData",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "afterAddLiquidity",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        },
                        {
                            "internalType": "BalanceDelta",
                            "name": "",
                            "type": "int256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "sender",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "key",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount0",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount1",
                            "type": "uint256"
                        },
                        {
                            "internalType": "bytes",
                            "name": "hookData",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "afterDonate",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "sender",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "key",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "uint160",
                            "name": "sqrtPriceX96",
                            "type": "uint160"
                        },
                        {
                            "internalType": "int24",
                            "name": "tick",
                            "type": "int24"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "afterInitialize",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "sender",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "key",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct ModifyLiquidityParams",
                            "name": "params",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "int24",
                                    "name": "tickLower",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickUpper",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "int256",
                                    "name": "liquidityDelta",
                                    "type": "int256"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "salt",
                                    "type": "bytes32"
                                }
                            ]
                        },
                        {
                            "internalType": "BalanceDelta",
                            "name": "delta0",
                            "type": "int256"
                        },
                        {
                            "internalType": "BalanceDelta",
                            "name": "delta1",
                            "type": "int256"
                        },
                        {
                            "internalType": "bytes",
                            "name": "hookData",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "afterRemoveLiquidity",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        },
                        {
                            "internalType": "BalanceDelta",
                            "name": "",
                            "type": "int256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "sender",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "key",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct SwapParams",
                            "name": "params",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bool",
                                    "name": "zeroForOne",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "int256",
                                    "name": "amountSpecified",
                                    "type": "int256"
                                },
                                {
                                    "internalType": "uint160",
                                    "name": "sqrtPriceLimitX96",
                                    "type": "uint160"
                                }
                            ]
                        },
                        {
                            "internalType": "BalanceDelta",
                            "name": "delta",
                            "type": "int256"
                        },
                        {
                            "internalType": "bytes",
                            "name": "hookData",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "afterSwap",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        },
                        {
                            "internalType": "int128",
                            "name": "",
                            "type": "int128"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "PoolId",
                            "name": "",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "afterSwapCount",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "count",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "spender",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "allowance",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "spender",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "approve",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "balanceOf",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "sender",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "key",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct ModifyLiquidityParams",
                            "name": "params",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "int24",
                                    "name": "tickLower",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickUpper",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "int256",
                                    "name": "liquidityDelta",
                                    "type": "int256"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "salt",
                                    "type": "bytes32"
                                }
                            ]
                        },
                        {
                            "internalType": "bytes",
                            "name": "hookData",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "beforeAddLiquidity",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "PoolId",
                            "name": "",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "beforeAddLiquidityCount",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "count",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "sender",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "key",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount0",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount1",
                            "type": "uint256"
                        },
                        {
                            "internalType": "bytes",
                            "name": "hookData",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "beforeDonate",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "sender",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "key",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "uint160",
                            "name": "sqrtPriceX96",
                            "type": "uint160"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "beforeInitialize",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "sender",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "key",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct ModifyLiquidityParams",
                            "name": "params",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "int24",
                                    "name": "tickLower",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickUpper",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "int256",
                                    "name": "liquidityDelta",
                                    "type": "int256"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "salt",
                                    "type": "bytes32"
                                }
                            ]
                        },
                        {
                            "internalType": "bytes",
                            "name": "hookData",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "beforeRemoveLiquidity",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "PoolId",
                            "name": "",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "beforeRemoveLiquidityCount",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "count",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "sender",
                            "type": "address"
                        },
                        {
                            "internalType": "struct PoolKey",
                            "name": "key",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "Currency",
                                    "name": "currency0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "Currency",
                                    "name": "currency1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint24",
                                    "name": "fee",
                                    "type": "uint24"
                                },
                                {
                                    "internalType": "int24",
                                    "name": "tickSpacing",
                                    "type": "int24"
                                },
                                {
                                    "internalType": "contract IHooks",
                                    "name": "hooks",
                                    "type": "address"
                                }
                            ]
                        },
                        {
                            "internalType": "struct SwapParams",
                            "name": "params",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bool",
                                    "name": "zeroForOne",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "int256",
                                    "name": "amountSpecified",
                                    "type": "int256"
                                },
                                {
                                    "internalType": "uint160",
                                    "name": "sqrtPriceLimitX96",
                                    "type": "uint160"
                                }
                            ]
                        },
                        {
                            "internalType": "bytes",
                            "name": "hookData",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "beforeSwap",
                    "outputs": [
                        {
                            "internalType": "bytes4",
                            "name": "",
                            "type": "bytes4"
                        },
                        {
                            "internalType": "BeforeSwapDelta",
                            "name": "",
                            "type": "int256"
                        },
                        {
                            "internalType": "uint24",
                            "name": "",
                            "type": "uint24"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "PoolId",
                            "name": "",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "beforeSwapCount",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "count",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "decimals",
                    "outputs": [
                        {
                            "internalType": "uint8",
                            "name": "",
                            "type": "uint8"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "pure",
                    "type": "function",
                    "name": "getHookPermissions",
                    "outputs": [
                        {
                            "internalType": "struct Hooks.Permissions",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bool",
                                    "name": "beforeInitialize",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "afterInitialize",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "beforeAddLiquidity",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "afterAddLiquidity",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "beforeRemoveLiquidity",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "afterRemoveLiquidity",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "beforeSwap",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "afterSwap",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "beforeDonate",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "afterDonate",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "beforeSwapReturnDelta",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "afterSwapReturnDelta",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "afterAddLiquidityReturnDelta",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "afterRemoveLiquidityReturnDelta",
                                    "type": "bool"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getTickLower",
                    "outputs": [
                        {
                            "internalType": "int24",
                            "name": "",
                            "type": "int24"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getTickUpper",
                    "outputs": [
                        {
                            "internalType": "int24",
                            "name": "",
                            "type": "int24"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "Currency",
                            "name": "currency",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getVaultAddress",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "name",
                    "outputs": [
                        {
                            "internalType": "string",
                            "name": "",
                            "type": "string"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "poolManager",
                    "outputs": [
                        {
                            "internalType": "contract IPoolManager",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "removeReHypothecatedLiquidity",
                    "outputs": [
                        {
                            "internalType": "BalanceDelta",
                            "name": "delta",
                            "type": "int256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "vault0_",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "vault1_",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "setVaults"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "symbol",
                    "outputs": [
                        {
                            "internalType": "string",
                            "name": "",
                            "type": "string"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "totalSupply",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "transfer",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "transferFrom",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {
                    "afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": {
                        "params": {
                            "delta": "The caller's balance delta after adding liquidity; the sum of principal delta, fees accrued, and hook delta",
                            "feesAccrued": "The fees accrued since the last time fees were collected from this position",
                            "hookData": "Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook",
                            "key": "The key for the pool",
                            "params": "The parameters for adding liquidity",
                            "sender": "The initial msg.sender for the add liquidity call"
                        },
                        "returns": {
                            "_0": "bytes4 The function selector for the hook",
                            "_1": "BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency"
                        }
                    },
                    "afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": {
                        "params": {
                            "amount0": "The amount of token0 being donated",
                            "amount1": "The amount of token1 being donated",
                            "hookData": "Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook",
                            "key": "The key for the pool",
                            "sender": "The initial msg.sender for the donate call"
                        },
                        "returns": {
                            "_0": "bytes4 The function selector for the hook"
                        }
                    },
                    "afterInitialize(address,(address,address,uint24,int24,address),uint160,int24)": {
                        "params": {
                            "key": "The key for the pool being initialized",
                            "sender": "The initial msg.sender for the initialize call",
                            "sqrtPriceX96": "The sqrt(price) of the pool as a Q64.96",
                            "tick": "The current tick after the state of a pool is initialized"
                        },
                        "returns": {
                            "_0": "bytes4 The function selector for the hook"
                        }
                    },
                    "afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": {
                        "params": {
                            "delta": "The caller's balance delta after removing liquidity; the sum of principal delta, fees accrued, and hook delta",
                            "feesAccrued": "The fees accrued since the last time fees were collected from this position",
                            "hookData": "Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook",
                            "key": "The key for the pool",
                            "params": "The parameters for removing liquidity",
                            "sender": "The initial msg.sender for the remove liquidity call"
                        },
                        "returns": {
                            "_0": "bytes4 The function selector for the hook",
                            "_1": "BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency"
                        }
                    },
                    "afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)": {
                        "params": {
                            "delta": "The amount owed to the caller (positive) or owed to the pool (negative)",
                            "hookData": "Arbitrary data handed into the PoolManager by the swapper to be be passed on to the hook",
                            "key": "The key for the pool",
                            "params": "The parameters for the swap",
                            "sender": "The initial msg.sender for the swap call"
                        },
                        "returns": {
                            "_0": "bytes4 The function selector for the hook",
                            "_1": "int128 The hook's delta in unspecified currency. Positive: the hook is owed/took currency, negative: the hook owes/sent currency"
                        }
                    },
                    "allowance(address,address)": {
                        "details": "See {IERC20-allowance}."
                    },
                    "approve(address,uint256)": {
                        "details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
                    },
                    "balanceOf(address)": {
                        "details": "See {IERC20-balanceOf}."
                    },
                    "beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
                        "params": {
                            "hookData": "Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook",
                            "key": "The key for the pool",
                            "params": "The parameters for adding liquidity",
                            "sender": "The initial msg.sender for the add liquidity call"
                        },
                        "returns": {
                            "_0": "bytes4 The function selector for the hook"
                        }
                    },
                    "beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": {
                        "params": {
                            "amount0": "The amount of token0 being donated",
                            "amount1": "The amount of token1 being donated",
                            "hookData": "Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook",
                            "key": "The key for the pool",
                            "sender": "The initial msg.sender for the donate call"
                        },
                        "returns": {
                            "_0": "bytes4 The function selector for the hook"
                        }
                    },
                    "beforeInitialize(address,(address,address,uint24,int24,address),uint160)": {
                        "params": {
                            "key": "The key for the pool being initialized",
                            "sender": "The initial msg.sender for the initialize call",
                            "sqrtPriceX96": "The sqrt(price) of the pool as a Q64.96"
                        },
                        "returns": {
                            "_0": "bytes4 The function selector for the hook"
                        }
                    },
                    "beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
                        "params": {
                            "hookData": "Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook",
                            "key": "The key for the pool",
                            "params": "The parameters for removing liquidity",
                            "sender": "The initial msg.sender for the remove liquidity call"
                        },
                        "returns": {
                            "_0": "bytes4 The function selector for the hook"
                        }
                    },
                    "beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)": {
                        "params": {
                            "hookData": "Arbitrary data handed into the PoolManager by the swapper to be be passed on to the hook",
                            "key": "The key for the pool",
                            "params": "The parameters for the swap",
                            "sender": "The initial msg.sender for the swap call"
                        },
                        "returns": {
                            "_0": "bytes4 The function selector for the hook",
                            "_1": "BeforeSwapDelta The hook's delta in specified and unspecified currencies. Positive: the hook is owed/took currency, negative: the hook owes/sent currency",
                            "_2": "uint24 Optionally override the lp fee, only used if three conditions are met: 1. the Pool has a dynamic fee, 2. the value's 2nd highest bit is set (23rd bit, 0x400000), and 3. the value is less than or equal to the maximum fee (1 million)"
                        }
                    },
                    "decimals()": {
                        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
                    },
                    "getHookPermissions()": {
                        "details": "Get the hook permissions to signal which hook functions are to be implemented. Used at deployment to validate the address correctly represents the expected permissions.",
                        "returns": {
                            "_0": "The hook permissions."
                        }
                    },
                    "name()": {
                        "details": "Returns the name of the token."
                    },
                    "symbol()": {
                        "details": "Returns the symbol of the token, usually a shorter version of the name."
                    },
                    "totalSupply()": {
                        "details": "See {IERC20-totalSupply}."
                    },
                    "transfer(address,uint256)": {
                        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
                    },
                    "transferFrom(address,address,uint256)": {
                        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
                    }
                },
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {
                    "afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": {
                        "notice": "The hook called after liquidity is added"
                    },
                    "afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": {
                        "notice": "The hook called after donate"
                    },
                    "afterInitialize(address,(address,address,uint24,int24,address),uint160,int24)": {
                        "notice": "The hook called after the state of a pool is initialized"
                    },
                    "afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": {
                        "notice": "The hook called after liquidity is removed"
                    },
                    "afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)": {
                        "notice": "The hook called after a swap"
                    },
                    "beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
                        "notice": "The hook called before liquidity is added"
                    },
                    "beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": {
                        "notice": "The hook called before donate"
                    },
                    "beforeInitialize(address,(address,address,uint24,int24,address),uint160)": {
                        "notice": "The hook called before the state of a pool is initialized"
                    },
                    "beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
                        "notice": "The hook called before liquidity is removed"
                    },
                    "beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)": {
                        "notice": "The hook called before a swap"
                    }
                },
                "version": 1
            }
        },
        "settings": {
            "remappings": [
                "@ensdomains/=lib/uniswap-hooks/lib/v4-core/node_modules/@ensdomains/",
                "@openzeppelin/contracts/=lib/uniswap-hooks/lib/v4-core/lib/openzeppelin-contracts/contracts/",
                "@openzeppelin/uniswap-hooks/=lib/uniswap-hooks/",
                "@uniswap/v4-core/=lib/uniswap-hooks/lib/v4-core/",
                "@uniswap/v4-periphery/=lib/uniswap-hooks/lib/v4-periphery/",
                "ds-test/=lib/uniswap-hooks/lib/v4-core/lib/forge-std/lib/ds-test/src/",
                "erc4626-tests/=lib/uniswap-hooks/lib/openzeppelin-contracts/lib/erc4626-tests/",
                "forge-gas-snapshot/=lib/uniswap-hooks/lib/v4-periphery/lib/permit2/lib/forge-gas-snapshot/src/",
                "forge-std/=lib/forge-std/src/",
                "halmos-cheatcodes/=lib/uniswap-hooks/lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/",
                "hardhat/=lib/uniswap-hooks/lib/v4-core/node_modules/hardhat/",
                "hookmate/=lib/hookmate/src/",
                "openzeppelin-contracts/=lib/uniswap-hooks/lib/openzeppelin-contracts/",
                "openzeppelin/=lib/uniswap-hooks/lib/openzeppelin-contracts/contracts/",
                "permit2/=lib/uniswap-hooks/lib/v4-periphery/lib/permit2/",
                "solmate/=lib/uniswap-hooks/lib/v4-core/lib/solmate/",
                "uniswap-hooks/=lib/uniswap-hooks/src/",
                "v4-core/=lib/uniswap-hooks/lib/v4-core/",
                "v4-periphery/=lib/uniswap-hooks/lib/v4-periphery/"
            ],
            "optimizer": {
                "enabled": true,
                "runs": 20000
            },
            "metadata": {
                "bytecodeHash": "none"
            },
            "compilationTarget": {
                "src/ReHypothecation.sol": "ReHypothecation"
            },
            "evmVersion": "cancun",
            "libraries": {}
        },
        "sources": {
            "lib/uniswap-hooks/lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol": {
                "keccak256": "0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7",
                "urls": [
                    "bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b",
                    "dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol": {
                "keccak256": "0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724",
                "urls": [
                    "bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a",
                    "dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol": {
                "keccak256": "0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c",
                "urls": [
                    "bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba",
                    "dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
                "keccak256": "0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7",
                "urls": [
                    "bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db",
                    "dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
                "keccak256": "0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5",
                "urls": [
                    "bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508",
                    "dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
                "keccak256": "0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8",
                "urls": [
                    "bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621",
                    "dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/lib/openzeppelin-contracts/contracts/interfaces/IERC4626.sol": {
                "keccak256": "0x207f64371bc0fcc5be86713aa5da109a870cc3a6da50e93b64ee881e369b593d",
                "urls": [
                    "bzz-raw://548667cfa76683767c2c610b577f6c2f0675d0ce28f53c3f37b969c84a56b205",
                    "dweb:/ipfs/QmUzA1CKC6bDdULuS44wGd7PWBNLiHb6bh7oHwJBDZSLAx"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
                "keccak256": "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7",
                "urls": [
                    "bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f",
                    "dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
                "keccak256": "0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80",
                "urls": [
                    "bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229",
                    "dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
                "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
                "urls": [
                    "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
                    "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
                "keccak256": "0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2",
                "urls": [
                    "bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850",
                    "dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
                "keccak256": "0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff",
                "urls": [
                    "bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d",
                    "dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
                "keccak256": "0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386",
                "urls": [
                    "bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0",
                    "dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/lib/openzeppelin-contracts/contracts/utils/Address.sol": {
                "keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
                "urls": [
                    "bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
                    "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/lib/openzeppelin-contracts/contracts/utils/Context.sol": {
                "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
                "urls": [
                    "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
                    "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/interfaces/IExtsload.sol": {
                "keccak256": "0x80b53ca4907d6f0088c3b931f2b72cad1dc4615a95094d96bd0fb8dff8d5ba43",
                "urls": [
                    "bzz-raw://375c69148622aab7a3537d5fd37d373a8e9731022c8d87bdaee46233b0a99fe1",
                    "dweb:/ipfs/QmXFjdoYRxsA5B1kyuxEXgNf3FBoL1zPvy26Qy8EtpdFRN"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/interfaces/IExttload.sol": {
                "keccak256": "0xc6b68283ebd8d1c789df536756726eed51c589134bb20821b236a0d22a135937",
                "urls": [
                    "bzz-raw://294394f72dfc219689209f4130d85601dfd0d63c8d47578050d312db70f9b6c8",
                    "dweb:/ipfs/QmTDMQ3oxCGHgEBU48a3Lp4S1rRjc8vVCxkhE5ZNej1bsY"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/interfaces/IHooks.sol": {
                "keccak256": "0xc131ffa2d04c10a012fe715fe2c115811526b7ea34285cf0a04ce7ce8320da8d",
                "urls": [
                    "bzz-raw://3b212358897db5d99c21244d88f97b2e788527552cb430629b472a8cc6289aec",
                    "dweb:/ipfs/QmQtwV4dDe2RYk2ErLpaAX7U82jWh1L6Lw2HRuKDvBi84G"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/interfaces/IPoolManager.sol": {
                "keccak256": "0xbdab3544da3d32dfdf7457baa94e17d5a3012952428559e013ffac45d067038e",
                "urls": [
                    "bzz-raw://ce95ff864468e37c76adf71df061d4f3d6f3a5ec1f9bc3aea090463bc72798f4",
                    "dweb:/ipfs/QmSbWh1pLbz51yQF4HEu5NRhr8XVv9JYGEw1hq1HudAnCi"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/interfaces/IProtocolFees.sol": {
                "keccak256": "0x32a666e588a2f66334430357bb1e2424fe7eebeb98a3364b1dd16eb6ccca9848",
                "urls": [
                    "bzz-raw://85751d302125881f72e5f8af051c2d5d9b1f606ebaea8ca7d04fccdd27cc252d",
                    "dweb:/ipfs/QmeRwomeh9NWm6A6fgNA4KZPQZHPpdKsPQyYsHSFmvud7J"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/interfaces/external/IERC20Minimal.sol": {
                "keccak256": "0xeccadf1bf69ba2eb51f2fe4fa511bc7bb05bbd6b9f9a3cb8e5d83d9582613e0f",
                "urls": [
                    "bzz-raw://118757369892687b99ef46ce28d6861f62c098285bd7687a4f17f7e44e5f81de",
                    "dweb:/ipfs/QmUxqbYqQtcEwwFbb9e6BBMePEaSgN8C45v6RKubD4ib8d"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/interfaces/external/IERC6909Claims.sol": {
                "keccak256": "0xa586f345739e52b0488a0fe40b6e375cce67fdd25758408b0efcb5133ad96a48",
                "urls": [
                    "bzz-raw://e8c557b7e52abdbbd82e415a1acc27921446a7fd090b7d4877e52be72619547f",
                    "dweb:/ipfs/QmXE2KNPbXmGX8BQF3ei6zhzRTnhoTQg39XmqMnkhbr6QK"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/libraries/BitMath.sol": {
                "keccak256": "0x51b9be4f5c4fd3e80cbc9631a65244a2eb2be250b6b7f128a2035080e18aee8d",
                "urls": [
                    "bzz-raw://fe98bbd5498e912146b9319827fc63621eb66ff55d5baae0fa02a7a972ab8d1e",
                    "dweb:/ipfs/QmY5hCuyrtgsJtk4AavrxcvBkRrChfr4N6ZnhdC8roPpNi"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/libraries/CurrencyReserves.sol": {
                "keccak256": "0x1576616129933fcdf3b684cea33cffd9c95e18fafbd2832a8c48ac3d8526d4c3",
                "urls": [
                    "bzz-raw://33b050efb9b81803b18f562271e7cca2ec5362c4d505860d6419b4a345636725",
                    "dweb:/ipfs/QmQtFtTwKZ5pFVGD2ENDUXvp7ECFvzqeCuJ1miJcUHdmiX"
                ],
                "license": "BUSL-1.1"
            },
            "lib/uniswap-hooks/lib/v4-core/src/libraries/CustomRevert.sol": {
                "keccak256": "0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de",
                "urls": [
                    "bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd",
                    "dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/libraries/FixedPoint128.sol": {
                "keccak256": "0xad236e10853f4b4b20a35a9bb52b857c4fc79874846b7e444e06ead7f2630542",
                "urls": [
                    "bzz-raw://0de1f9a06520b1a689660943faa14fc0b8344ab41fab9e6012ea34bff4b9b3eb",
                    "dweb:/ipfs/QmRNMPTyko7W6d6KxuTsnDBa9oZgDK4xiwRRq3H9ASTbwy"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/libraries/FixedPoint96.sol": {
                "keccak256": "0xef5c3fd41aee26bb12aa1c32873cfee88e67eddfe7c2b32283786265ac669741",
                "urls": [
                    "bzz-raw://4de298d02f662a1c36c7be0a150f18c2a161408a5d3e48432e707efd01fac9a4",
                    "dweb:/ipfs/QmSiM4oeMmLVKmAtJXz2feYkv4R9ZcyBpkTRW5Nhw5KDyJ"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/libraries/FullMath.sol": {
                "keccak256": "0x4fc73a00817193fd3cac1cc03d8167d21af97d75f1815a070ee31a90c702b4c2",
                "urls": [
                    "bzz-raw://c3b2d66d36b1ad56b1ab6e2eb8a816740877b40b461c93f125e88621c8378e52",
                    "dweb:/ipfs/QmPGvMZzKQvNiWKd8aRzzdW7oAizwrMgcMtnaworDkVHFC"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/libraries/Hooks.sol": {
                "keccak256": "0xd679b4b2d429689bc44f136050ebc958fb2d7d0d3a3c7b3e48c08ab4fba09aaa",
                "urls": [
                    "bzz-raw://287190cb72840e5eb63cc7a8a1d0b9150af17d8e4ea0323f47c7e7928f2033cb",
                    "dweb:/ipfs/QmVfqWBnAQM2jUcuREDdvjcP21gNuLU35CoL3NG5CEhNcx"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/libraries/LPFeeLibrary.sol": {
                "keccak256": "0xbf6914e01014e7c1044111feb7df7a3d96bb503b3da827ad8464b1955580d13b",
                "urls": [
                    "bzz-raw://33823c20a91882c9aacdcbb02f0558c05209f4d5954aa6dd4fa17c95664db475",
                    "dweb:/ipfs/QmR7owkFgpfztpp1QUg3ut3nw9iPVQqLGP4hzgmZtRUQ2J"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/libraries/LiquidityMath.sol": {
                "keccak256": "0x000ef2eadcc1eb7b2c18a77655f94e76e0e860f605783484657ef65fd6eda353",
                "urls": [
                    "bzz-raw://a766b620a7a22798b43c6c1f23b5c6cff0ebf588deb89842bad05208d448cd99",
                    "dweb:/ipfs/QmVKjaFJdzkqA3ey2Byum8iTCMssWVD8MmVC8rw62Tj5WD"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/libraries/Lock.sol": {
                "keccak256": "0x9338be4b5695f1da5f3d3f7a3eeaf7a356c1045458289586ac0cbe9cef77c6d5",
                "urls": [
                    "bzz-raw://485ec42ed6155469d612a9a0c18068ebfbad74448792a338a435503de3ef1b2c",
                    "dweb:/ipfs/QmVnnv5u74MYatfRmBgrcfFYQcsMAJMG9jQ6ju8UiydKNF"
                ],
                "license": "BUSL-1.1"
            },
            "lib/uniswap-hooks/lib/v4-core/src/libraries/NonzeroDeltaCount.sol": {
                "keccak256": "0x0666ebd5d3528d7d52c48538296367a4cff97a578cf13365c51983fae3219b87",
                "urls": [
                    "bzz-raw://d27f1be3bd09d85c53d3e6a539dd6529ddd8b2b764ccb47fd7765fc81f9add59",
                    "dweb:/ipfs/QmQdZujNXhKEXQBkKtF5jbdvo1yXMqPDUoBBaF9S5u3Kpm"
                ],
                "license": "BUSL-1.1"
            },
            "lib/uniswap-hooks/lib/v4-core/src/libraries/ParseBytes.sol": {
                "keccak256": "0x7533b13f53ee2c2c55500100b22ffd6e37e7523c27874edc98663d53a8672b15",
                "urls": [
                    "bzz-raw://82449058634fde28a085f3c59a6a5f412550c02181590593fd84c3e8b329aa17",
                    "dweb:/ipfs/Qmev4E9Au6SsE4wsArChCwfg94KhHc5gYsEsZUnjF5sRLa"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/libraries/Position.sol": {
                "keccak256": "0xddab2a831f1befb6abf5567e77c4582169ca8156cf69eb4f22d8e87f7226a3f9",
                "urls": [
                    "bzz-raw://c79fe61b50f3b70cff503abfa6f5643fcbefb9b794855bee1019b1e6d9c083b2",
                    "dweb:/ipfs/QmbKmYNQesaMz8bo1b7TMHQcAwaDd3eDPrE5pAdPPZTtk5"
                ],
                "license": "BUSL-1.1"
            },
            "lib/uniswap-hooks/lib/v4-core/src/libraries/SafeCast.sol": {
                "keccak256": "0x42c4a24f996a14d358be397b71f7ec9d7daf666aaec78002c63315a6ee67aa86",
                "urls": [
                    "bzz-raw://c3db86e2ba3679105fc32edec656c70282e1fede6cab11217702443f6c26fa59",
                    "dweb:/ipfs/QmX4yaaSPdKQzYNRsezjTvZKsubzS8JRTEGFD3fPpTTCcj"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/libraries/SqrtPriceMath.sol": {
                "keccak256": "0xf8079fe6e3460db495451d06b1705e18f1c4075c1af96a31ad313545f7082982",
                "urls": [
                    "bzz-raw://582fc51546723a0a8acccf782f69b530bacf9b3ef929458e82569b7121f0b138",
                    "dweb:/ipfs/QmSBXcmqZdFsM7M4sRaiyQAxykCeMNFKyKgBcwSMTw1bcF"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/libraries/StateLibrary.sol": {
                "keccak256": "0x96db333ee126a841dd959e38e452cc59d73583cb0437a1d48b2052e33a74f952",
                "urls": [
                    "bzz-raw://8672bba1eb69608299b0904f4ff305238eb18479d371c26518f278c9ee184cd0",
                    "dweb:/ipfs/QmTLu3s6ECvsEDHStQv8HTVHYtvkviBbdjPrFJd4SpVRFY"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/libraries/TickMath.sol": {
                "keccak256": "0x4e1a11e154eb06106cb1c4598f06cca5f5ca16eaa33494ba2f0e74981123eca8",
                "urls": [
                    "bzz-raw://a79a57f7b240783b045168d1c4f774ac1812caf8f9a83cb6959a86b0b07b6c70",
                    "dweb:/ipfs/QmTb5kvxwDNW8jDuQaqdJ445cCFejNkUqEB17Bjo8UBiva"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/libraries/TransientStateLibrary.sol": {
                "keccak256": "0x7d1e0875747bd89b32c25f1a48da2766e5f4aff1f671ad5f3c0c07ebbbcb946a",
                "urls": [
                    "bzz-raw://d76cfeb1cb60595b41ecc51c8a12fb4bf63a7fc733d0b1a2e3adb55abeb1f9d5",
                    "dweb:/ipfs/Qmb8oX7DtsRpw3tTtdWZwGhauj1evq43d3PLwe4nSDAKkV"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/libraries/UnsafeMath.sol": {
                "keccak256": "0xa6e55e0a43a15df2df471d9972cd48f613d07c663ecb8bbeaf7623f6f99bcce4",
                "urls": [
                    "bzz-raw://02ea6e13879fc5a5f35149a2f1cd8af3a1f0877ff69101dad53841d16f515572",
                    "dweb:/ipfs/QmcpL4gdG6hL2w1wqs2Vw4J1EFCwBs9T1Qd4p16CtECQkn"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/types/BalanceDelta.sol": {
                "keccak256": "0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f",
                "urls": [
                    "bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9",
                    "dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/types/BeforeSwapDelta.sol": {
                "keccak256": "0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78",
                "urls": [
                    "bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782",
                    "dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/types/Currency.sol": {
                "keccak256": "0x4a0b84b282577ff6f8acf13ec9f4d32dbb9348748b49611d00e68bee96609c93",
                "urls": [
                    "bzz-raw://45f9d62ab3d51b52957279e353853ba1547c3182c9a1e3d1846ada4a90263b01",
                    "dweb:/ipfs/QmS8NG84ccQS1yXVD8cv3eKX7J1UKxuJhbUfHTQR2opKF5"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/types/PoolId.sol": {
                "keccak256": "0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af",
                "urls": [
                    "bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918",
                    "dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/types/PoolKey.sol": {
                "keccak256": "0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786",
                "urls": [
                    "bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639",
                    "dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-core/src/types/PoolOperation.sol": {
                "keccak256": "0x7a1a107fc1f2208abb2c9364c8c54e56e98dca27673e9441bed2b949b6382162",
                "urls": [
                    "bzz-raw://4ad2470383bc5595d5af17840c64971f457adac68895a4db41ba5c71a4478e07",
                    "dweb:/ipfs/QmdwKhBHDZFuqXrR2BfDBD9r7rB2ULGQBznsajRTkTmL4c"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/lib/v4-periphery/src/libraries/LiquidityAmounts.sol": {
                "keccak256": "0x8ea74b89831877ffe657f8461164a01a6f3c7e46f415410854fca8d28a8cab53",
                "urls": [
                    "bzz-raw://f4015f62e5e8aa154baa555dc39ce36b498e6d875a53f793d62b8556e6b97ccb",
                    "dweb:/ipfs/QmUVHyEe3hZZZQum5ct6yDY8qduj62Ta7f7x5Kw95LpQbg"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/src/base/BaseHook.sol": {
                "keccak256": "0xf1ae0fca4b9eeeb44ea1d06ef1d9faa8f8c74b89f66b19e80a25af8f8c08d6c6",
                "urls": [
                    "bzz-raw://895a643e9703093793b08bd81cbd48955f7d81ebb2e0ebdf7287c54af5fdcc4f",
                    "dweb:/ipfs/QmQ3m774Qe4Rm6uJwL6W5NWxettVxZBueFTFGqpXTuTh9i"
                ],
                "license": "MIT"
            },
            "lib/uniswap-hooks/src/utils/CurrencySettler.sol": {
                "keccak256": "0x623d9d1562dfba436bce4851d7de061c60287be04642bf6bcdc33d443f0cf3f6",
                "urls": [
                    "bzz-raw://a00700cb12018269b0e39859361c57e360f6c83d7326b66941750a890a013bb5",
                    "dweb:/ipfs/QmZgZWcqDc6JxJzSD6hDpcXBcCsEKDtqtkpX8N27kCUzJk"
                ],
                "license": "MIT"
            },
            "src/ReHypothecation.sol": {
                "keccak256": "0x239125e46347345b1e2165c45051281c73847eca269bbaa9a1ae60d841657a79",
                "urls": [
                    "bzz-raw://5b9e51c200e27b6269f10b2be3e66c4e5c6c263fad042f202fe4fdbeb4f66cb0",
                    "dweb:/ipfs/QmZ4GFCTyi1UXzF7YLTRBbMi6bWaxQ3UcuhGhbQXAeaomQ"
                ],
                "license": "MIT"
            }
        },
        "version": 1
    },
    "id": 88
}